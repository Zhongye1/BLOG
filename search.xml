<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>6月25日随记</title>
      <link href="/posts/e20b0c15.html"/>
      <url>/posts/e20b0c15.html</url>
      
        <content type="html"><![CDATA[<p><strong>2024.6.25</strong></p><p><strong>最后的最后，六月的盛夏来了，走了，又是七月的盛夏。</strong></p><p><img src="https://free-img.400040.xyz/4/2024/06/25/667a4daf96181.jpg" alt="屏幕截图 2024-06-25 125444.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 随记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-arknights</title>
      <link href="/posts/78e8fc2b.html"/>
      <url>/posts/78e8fc2b.html</url>
      
        <content type="html"><![CDATA[<p>| <a href="https://github.com/Yue-plus/hexo-theme-arknights/blob/main/README.md">简体中文</a> | <a href="https://github.com/Yue-plus/hexo-theme-arknights/blob/main/README.en.md">English</a> | <a href="https://github.com/Yue-plus/hexo-theme-arknights/blob/main/README.ja.md">日本語</a> |</p><h1 id="hexo-theme-arknights"><a href="#hexo-theme-arknights" class="headerlink" title="hexo-theme-arknights"></a>hexo-theme-arknights</h1><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><ul><li><strong>Dr.Ye: <a href="https://laurenfrost.github.io/">https://laurenfrost.github.io/</a></strong></li><li><strong>Dr.Yue_plus: <a href="http://arknights.theme.hexo.yue.zone/">http://arknights.theme.hexo.yue.zone/</a></strong></li><li><strong>Dr.ToUNVRSe <a href="https://tounvrse.github.io/">https://tounvrse.github.io/</a></strong></li><li><strong>Dr.LingYun: <a href="https://dr-lingyun.gitee.io/">https://dr-lingyun.gitee.io/</a></strong></li><li><strong>Dr.XIMU：<a href="http://b.ligzs.cn/">http://b.ligzs.cn/</a></strong></li><li><strong>Dr.tyqtyq <a href="https://tyq0712.github.io/">https://tyq0712.github.io/</a></strong></li><li><strong>Dr.TTsdzb <a href="https://ark.ttsdzb.monster/">https://ark.ttsdzb.monster/</a></strong></li><li><strong>Dr.Angine <a href="https://angine.tech/">https://angine.tech/</a></strong></li><li><strong>Dr.sjfhsjfh <a href="https://sjfh.top/">https://sjfh.top/</a></strong></li><li><strong>Dr.Voilone <a href="https://note.voiblog.top/">https://note.voiblog.top/</a></strong></li><li><strong>Zhongye1 <a href="https://zhongye1.github.io/">https://zhongye1.github.io/</a></strong></li><li><strong>Dr.yuanli-LFSW <a href="https://blog.yuanli-lfsw.com/">https://blog.yuanli-lfsw.com/</a></strong></li><li><strong>Dr.Rimrose: <a href="https://blog.rimrose.site/">https://blog.rimrose.site</a></strong></li></ul><p>如果使用了这个主题，欢迎在这儿贴预览链接~</p><p><img src="https://free-img.400040.xyz/4/2024/06/25/667a4ae00abc0.jpg" alt="demo.jpg"></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><ul><li><p><a href="https://nodejs.org/zh-cn/">Node.js <code>16.13.x</code> 以上</a></p></li><li><p>最新版 Hexo</p><blockquote><p>Hexo <code>6.0.0</code> 以上； hexo-cli <code>4.3.0</code> 以上；</p></blockquote></li><li><p>中国大陆用户推荐使用 <code>cnpm</code> 安装依赖包，参考 <a href="https://npmmirror.com/">中国 NPM 镜像</a></p></li></ul><h3 id="使用-hexo-cli-新建博客项目："><a href="#使用-hexo-cli-新建博客项目：" class="headerlink" title="使用 hexo-cli 新建博客项目："></a>使用 <code>hexo-cli</code> 新建博客项目：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo init Hexo</span><br><span class="line"><span class="built_in">cd</span> Hexo</span><br><span class="line">cnpm install</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/Yue-plus/hexo-theme-arknights.git themes/arknights</span><br></pre></td></tr></table></figure><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>npm 用户：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm <span class="keyword">install </span>hexo-server hexo-<span class="keyword">browsersync </span>hexo-renderer-pug --save</span><br></pre></td></tr></table></figure><p>yarn 用户：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn <span class="keyword">add </span>hexo-server hexo-<span class="keyword">browsersync </span>hexo-renderer-pug</span><br></pre></td></tr></table></figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><ul><li><p>参照 <a href="https://hexo.io/zh-cn/docs/configuration">Hexo 官网</a> 修改 <code>Hexo/</code> 目录下的 <code>_config.yml</code>。</p><ul><li><p>将 <code>theme:</code> 的默认值 <code>landscape</code> 改为 <code>arknights</code></p></li><li><p>开启代码高亮：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p><strong>剪切</strong> <a href="https://github.com/Yue-plus/hexo-theme-arknights/blob/main/_config.yml"><code>Hexo/themes/arknights/_config.yml</code></a> 到 <code>Hexo</code> 目录下，并重命名为 <code>_config.arknights.yml</code>。</p><blockquote><p>建议参考：</p><ul><li><a href="https://hexo.io/zh-cn/docs/configuration#使用代替主题配置文件">使用代替主题配置文件</a></li></ul></blockquote><p>主题的配置文件可参照中文注释修改。</p></li></ul><h2 id="修改资源文件"><a href="#修改资源文件" class="headerlink" title="修改资源文件"></a>修改资源文件</h2><p>可按需在 <code>Hexo/source/</code> 目录添加以下文件：</p><ul><li><code>CNAME</code>: GitHub Pages 部署时的自定义域名</li><li><code>img/</code> 目录下的 <code>Alipay.png</code> 与 <code>WeChat.png</code> 为自己的收款二维码（1:1 比例的 <code>png</code> 图片）；</li></ul><p>可按需修改 <code>Hexo/themes/arknights/source/</code> 目录下的：</p><ul><li><code>favicon.ico</code>：浏览器标签页上的图标（64*64，分辨率高了显示不出）</li><li><code>README.md</code>: 部署仓库的 README</li></ul><h2 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h2><ul><li><p>参考 <a href="https://hexo.io/zh-cn/docs/writing">写作 | Hexo</a>。</p></li><li><p>在主题仓库的 Hexo 分支有一些 <a href="https://github.com/Yue-plus/hexo-theme-arknights/tree/hexo/source/_posts">示例文本</a> 可以取用</p></li><li><p>添加文章标签与分类，更多特性可参考 <a href="https://hexo.io/zh-cn/docs/front-matter">Hexo | Front-matter</a> ，示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">&#x27;Hello World !&#x27;</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020-04-15 21:54:02</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">code</span></span><br><span class="line"><span class="attr">category:</span> <span class="string">Example</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></li></ul><ul><li>在 <code>&lt;!-- more --&gt;</code> 之前的内容称之为摘要，会显示在首页上，并且可以设置是否也在正文显示。</li></ul><h2 id="在导航栏中添加页面"><a href="#在导航栏中添加页面" class="headerlink" title="在导航栏中添加页面"></a>在导航栏中添加页面</h2><ul><li><p>例如：新建一个 <code>about</code> 页面</p><ul><li>在 <code>Hexo</code> 目录下执行 <code>hexo new page &#39;about&#39;</code></li><li>然后 <code>Hexo/source/</code> 目录下会多一个 <code>about</code> 文件夹</li></ul></li><li><p>编辑 <code>Hexo/source/about/index.md</code> 文件</p></li><li><p>编辑 <code>_config.arknights.yml</code>，添加一个链接：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">menu:</span></span><br><span class="line"><span class="symbol">  About:</span> /about</span><br></pre></td></tr></table></figure></li></ul><h2 id="禁止归档页翻页"><a href="#禁止归档页翻页" class="headerlink" title="禁止归档页翻页"></a>禁止归档页翻页</h2><p>该设置位于 Hexo 配置文件 <code>_config.yml</code> 约第 88 行。</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Pagination</span><br><span class="line">## <span class="keyword">Set</span> per_page <span class="keyword">to</span> <span class="number">0</span> <span class="keyword">to</span> disable pagination</span><br><span class="line"><span class="symbol">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="symbol">pagination_dir:</span> page</span><br></pre></td></tr></table></figure><p>将 <code>per_page:</code> 改为 0 即可。</p><h2 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h2><h3 id="Valine"><a href="#Valine" class="headerlink" title="Valine"></a>Valine</h3><p>本主题支持<a href="https://valine.js.org/">Valine</a> 。 请参考 <a href="https://valine.js.org/quickstart.html">Valine 快速开始</a> 修改 Hexo 目录下的 <code>_config.arknights.yml</code> 文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">app_id:</span> <span class="comment"># APP ID</span></span><br><span class="line">  <span class="attr">app_key:</span> <span class="comment"># APP KEY</span></span><br><span class="line">  <span class="attr">server_url:</span> <span class="comment"># APP DOMAIN（LeanCloud 国际版）</span></span><br></pre></td></tr></table></figure><p>开启邮件提醒：<a href="https://github.com/zhaojun1998/Valine-Admin">zhaojun1998 / Valine-Admin</a></p><blockquote><p><strong>注意！</strong> 当 Valine 使用 <em>LeanCloud 国际版</em> 时，才需要配置 <code>server_url:</code>。<br>该设置可在 LeanCloud 应用中的 <code>设置 -&gt; 应用凭证 -&gt; 域名白名单 -&gt; Request 域名</code> 中找到以 <code>.api.lncldglobal.com</code> 结尾的域名，加上 <code>https://</code> 前缀即可。</p></blockquote><h3 id="Gitalk"><a href="#Gitalk" class="headerlink" title="Gitalk"></a>Gitalk</h3><p>本主题支持 <a href="https://gitalk.github.io/">Gitalk</a> 。 请参考 <a href="https://github.com/gitalk/gitalk/blob/master/readme-cn.md">gitalk/readme-cn.md</a> 修改 Hexo 目录下的 <code>_config.arknights.yml</code> 文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">client_id:</span> <span class="comment"># GitHub 应用 Client ID</span></span><br><span class="line">  <span class="attr">client_secret:</span> <span class="comment"># GitHub 应用 Client Secret</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="comment"># 用于存放评论数据的 GitHub 仓库</span></span><br><span class="line">  <span class="attr">owner:</span> <span class="comment"># 该 GitHub 仓库所有者</span></span><br><span class="line">  <span class="attr">admin:</span> [] <span class="comment"># 具有写该 GitHub 仓库权限的用户</span></span><br><span class="line">            <span class="comment"># 例如: [adminA,adminB]</span></span><br><span class="line">  <span class="attr">id:</span> <span class="comment"># (可选) 页面的唯一标识</span></span><br><span class="line">      <span class="comment"># 例如: location.pathname</span></span><br></pre></td></tr></table></figure><h3 id="Waline"><a href="#Waline" class="headerlink" title="Waline"></a>Waline</h3><p>本主题支持 <a href="https://waline.js.org/">Waline</a> 。<br>请参考 Waline 官方文档 修改 Hexo 目录下的 <code>_config.arknights.yml</code> 文件:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">waline:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span> </span><br><span class="line">  <span class="attr">server_url:</span> <span class="comment"># Server_Url</span></span><br></pre></td></tr></table></figure><h3 id="Artalk"><a href="#Artalk" class="headerlink" title="Artalk"></a>Artalk</h3><p>本主题支持 <a href="https://artalk.js.org/">Artalk</a> 。<br>请参考 Artalk 官方文档修改 Hexo 目录下的 <code>_config.arknights.yml</code> 文件:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">artalk:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">server:</span> <span class="string">https://artalk.server.instance/</span> <span class="comment"># 你的 Artalk 服务地址</span></span><br><span class="line">  <span class="attr">site_name:</span> <span class="string">My</span> <span class="string">Blog</span> <span class="comment"># 站点名称，用于区分多个站点（可选）</span></span><br></pre></td></tr></table></figure><h2 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h2><p>本主题支持两种方案显示数学公式：</p><h3 id="方案一：静态渲染"><a href="#方案一：静态渲染" class="headerlink" title="方案一：静态渲染"></a>方案一：静态渲染</h3><p>可以使用 <a href="https://github.com/next-theme/hexo-filter-mathjax">hexo-filter-mathjax</a> Hexo 过滤器静态渲染，来显示数学公式。</p><p>建议先更换能更好处理数学公式的 markdown 渲染器 <a href="https://github.com/wzpan/hexo-renderer-pandoc">hexo-renderer-pandoc</a>。</p><ol><li><p>在 Hexo 目录下执行以下指令：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 hexo-filter-mathjax 插件</span></span><br><span class="line">cnpm install hexo-<span class="built_in">filter</span>-mathjax <span class="comment">--save</span></span><br><span class="line"><span class="comment"># 清除缓存</span></span><br><span class="line">hexo clean</span><br></pre></td></tr></table></figure></li></ol><ol><li><p>把以下内容添加到 <code>Hexo/_config.yml</code> 文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mathjax:</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">none</span> <span class="comment"># 或 &#x27;ams&#x27; 或 &#x27;all&#x27;</span></span><br><span class="line">  <span class="attr">single_dollars:</span> <span class="literal">true</span> <span class="comment"># 启用单个美元符号作为内联（行内）数学公式定界符</span></span><br><span class="line">  <span class="attr">cjk_width:</span> <span class="number">0.9</span> <span class="comment"># 相对 CJK 字符宽度</span></span><br><span class="line">  <span class="attr">normal_width:</span> <span class="number">0.6</span> <span class="comment"># 相对正常（等宽）宽度</span></span><br><span class="line">  <span class="attr">append_css:</span> <span class="literal">true</span> <span class="comment"># 将 CSS 添加到每个页面</span></span><br><span class="line">  <span class="attr">every_page:</span> <span class="literal">false</span> <span class="comment"># 如果为 true，那么无论每篇文章的前题中的 `mathjax` 设置如何，每页都将由 mathjax 呈现</span></span><br></pre></td></tr></table></figure></li></ol><ol><li><p>在需要启用 mathjax 的文章的 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 区内添加 <code>mathjax: true</code>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">On</span> <span class="string">the</span> <span class="string">Electrodynamics</span> <span class="string">of</span> <span class="string">Moving</span> <span class="string">Bodies</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">Physics</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">1905-06-30 12:00:00</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></li></ol><p>   然后，就可以在文章中使用 LaTeX 语法。</p><ol><li><p>需要注意，内联数学公式（…… <script type="math/tex"><数学公式></script> ……）在开头 <script type="math/tex">` 之后和结尾 `</script> 之前不能有空格！例如：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- <span class="symbol">$</span> \epsilon_0 <span class="symbol">$</span></span><br><span class="line">+ <span class="symbol">$</span>\epsilon_0<span class="symbol">$</span></span><br><span class="line">- <span class="symbol">$</span> \<span class="built_in">frac</span>&#123;\partial&#125;&#123;\partial t&#125; <span class="symbol">$</span></span><br><span class="line">+ <span class="symbol">$</span>\<span class="built_in">frac</span>&#123;\partial&#125;&#123;\partial t&#125;<span class="symbol">$</span></span><br></pre></td></tr></table></figure></li></ol><ol><li><p>需要注意 LaTeX 与 Markdown 语法之间的冲突。如有必要，请使用 <code>\</code> 进行转义：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- <span class="variable">$\</span>epsilon_0<span class="variable">$</span></span><br><span class="line"><span class="variable"></span>+ <span class="variable">$\</span>epsilon\_0<span class="variable">$</span></span><br><span class="line"><span class="variable"></span>- \<span class="keyword">begin</span>&#123;eqnarray*&#125;</span><br><span class="line">+ \<span class="keyword">begin</span>&#123;eqnarray\*&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="方案二：动态渲染"><a href="#方案二：动态渲染" class="headerlink" title="方案二：动态渲染"></a>方案二：动态渲染</h3><p>本主题也支持 <a href="https://www.mathjax.org/">MathJax</a> ，在用户浏览时动态渲染公式：</p><ol><li><p>首先要卸载 Hexo 默认自带的 hexo-renderer-marked 渲染器，更换成对 MathJax 支持更好的 <a href="https://github.com/sun11/hexo-renderer-kramed">hexo-renderer-kramed</a> 渲染器：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked <span class="comment">--save</span></span><br><span class="line">npm install hexo-renderer-kramed <span class="comment">--save</span></span><br></pre></td></tr></table></figure></li></ol><ol><li><p>修改 <strong>Hexo 目录</strong> 下的 <code>_config.arknights.yml</code> 文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment"># 公式支持</span></span><br><span class="line">  <span class="attr">mathjax:</span></span><br><span class="line"><span class="bullet">-</span>   <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="string">+</span>   <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">version:</span> <span class="string">&#x27;2.6.1&#x27;</span>  <span class="comment"># 重要</span></span><br></pre></td></tr></table></figure></li></ol><ol><li><p>然后，就可以在文章中使用 LaTeX 语法：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">% 单行内联公式</span><br><span class="line">% 注意需要两边带上 <span class="string">&quot;`&quot;</span> ，且 <span class="string">&quot;`&quot;</span> 与 <span class="string">&quot;$&quot;</span> 之间不能有空格</span><br><span class="line">`<span class="symbol">$</span>\sigma<span class="symbol">$</span>`</span><br><span class="line"></span><br><span class="line">% 多行公式</span><br><span class="line"><span class="symbol">$</span><span class="symbol">$</span></span><br><span class="line">\begin&#123;aligned&#125;f(x) &amp;= \sum_&#123;i=<span class="number">1</span>&#125;^&#123;\infty&#125;&#123;\<span class="built_in">frac</span>&#123;x&#125;&#123;<span class="number">2</span>^i&#125;&#125; \\</span><br><span class="line">&amp;= x\end&#123;aligned&#125;</span><br><span class="line"><span class="symbol">$</span><span class="symbol">$</span></span><br></pre></td></tr></table></figure></li></ol><ol><li><p>用这种方案，不会造成 LaTeX 与 Markdown 语法之间的冲突。在文中使用 LaTeX 语法不需要转义。 以下公式可以直接使用，不会造成任何问题：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">\epsilon_0</span></span><br><span class="line"><span class="string">\begin&#123;eqnarray*&#125;</span></span><br></pre></td></tr></table></figure></li></ol><p>hexo-renderer-kramed 插件还有其他可配置项，请参考插件文档： <a href="https://github.com/sun11/hexo-renderer-kramed">https://github.com/sun11/hexo-renderer-kramed</a></p><p>几种公式显示方案各有优缺点：</p><ol><li>动态渲染方案 LaTeX 语法不需要转义，能更好的支持从其他地方导出的 Markdown 文件。但因为需要在浏览器渲染，页面显示会略有延迟。</li><li>静态渲染方案将公式直接编译在静态文件里，显示性能更优，但语法需要转义。</li><li><a href="https://github.com/wzpan/hexo-renderer-pandoc">hexo-renderer-pandoc</a> 快速显示公式而不必经历转义语法的麻烦，但需要安装 Pandoc。</li></ol><h2 id="图表支持"><a href="#图表支持" class="headerlink" title="图表支持"></a>图表支持</h2><p>修改 <strong>Hexo 目录</strong> 下的 <code>_config.arknights.yml</code> 文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment"># 图表支持</span></span><br><span class="line">  <span class="attr">mermaid:</span></span><br><span class="line"><span class="bullet">-</span>   <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="string">+</span>   <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">version:</span> <span class="string">&#x27;8.13.5&#x27;</span></span><br></pre></td></tr></table></figure><p>主题通过 mermaid-js 绘制各种图表。<strong><a href="https://arknights.theme.hexo.yue.zone/mermaid/">查看示例</a></strong></p><p>支持： <a href="https://arknights.theme.hexo.yue.zone/mermaid/#流程图">流程图</a> | <a href="https://arknights.theme.hexo.yue.zone/mermaid/#序列图">序列图</a> | <a href="https://arknights.theme.hexo.yue.zone/mermaid/#类图">类图</a> | <a href="https://arknights.theme.hexo.yue.zone/mermaid/#状态图">状态图</a> | <a href="https://arknights.theme.hexo.yue.zone/mermaid/#实体关系图">实体关系图</a> | <a href="https://arknights.theme.hexo.yue.zone/mermaid/#用户旅程图">用户旅程图</a> | <a href="https://arknights.theme.hexo.yue.zone/mermaid/#甘特图">甘特图</a> | <a href="https://arknights.theme.hexo.yue.zone/mermaid/#指令图">指令图</a> | <a href="https://arknights.theme.hexo.yue.zone/mermaid/#饼图">饼图</a></p><p>语法：</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;mermaid&quot;</span>&gt;</span><br><span class="line">  graph LR</span><br><span class="line">  A[Hard edge] --&gt;|<span class="type">Link</span> text| <span class="type">B</span>(Round edge)</span><br><span class="line">  B --&gt; C&#123;Decision&#125;</span><br><span class="line">  C --&gt;|<span class="type">One</span>| <span class="type">D</span>[Result one]</span><br><span class="line">  C --&gt;|<span class="type">Two</span>| <span class="type">E</span>[Result two]</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><blockquote><p>如果习惯使用 <code>代码块</code> 也完全支持。</p></blockquote><h2 id="字数-阅读时长统计"><a href="#字数-阅读时长统计" class="headerlink" title="字数/阅读时长统计"></a>字数/阅读时长统计</h2><p>依赖 <a href="https://github.com/willin/hexo-wordcount"><code>hexo-wordcount</code></a>：</p><p>npm 用户：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-wordcount <span class="comment">--save</span></span><br></pre></td></tr></table></figure><p>yarn 用户：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn <span class="built_in">add</span> hexo-wordcount</span><br></pre></td></tr></table></figure><p>之后修改 <strong>Hexo 目录</strong> 下的 <code>_config.arknights.yml</code> 文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">true</span> <span class="comment"># 是否显示字数统计</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span> <span class="comment"># 是否显示阅读时长统计</span></span><br></pre></td></tr></table></figure><h2 id="浏览量统计"><a href="#浏览量统计" class="headerlink" title="浏览量统计"></a>浏览量统计</h2><p>使用 <a href="http://busuanzi.ibruce.info/">不蒜子</a> 进行浏览量统计。 修改 <strong>Hexo 目录</strong> 下的 <code>_config.arknights.yml</code> 文件启用该功能：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">busuanzi:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">sitePV:</span> <span class="literal">true</span> <span class="comment"># 站点总访问量</span></span><br><span class="line">  <span class="attr">siteUV:</span> <span class="literal">true</span> <span class="comment"># 站点访客数</span></span><br><span class="line">  <span class="attr">pagePV:</span> <span class="literal">true</span> <span class="comment"># 页面访问量</span></span><br></pre></td></tr></table></figure><h2 id="文档加密"><a href="#文档加密" class="headerlink" title="文档加密"></a>文档加密</h2><p>经过修改的 <a href="https://github.com/D0n9X1n/hexo-blog-encrypt">hexo-blog-encrypt</a> 插件已适配并集成在本主题中（目前仅支持 default 与 up 主题）。</p><blockquote><p>详细配置参考 <a href="https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md">hexo-blog-encrypt/ReadMe.zh.md</a></p></blockquote><p>在 <code>Hexo/_config.yml</code> 文件中添加以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Security</span></span><br><span class="line"><span class="attr">encrypt:</span> <span class="comment"># hexo-blog-encrypt</span></span><br><span class="line">  <span class="attr">abstract:</span> <span class="string">与</span> <span class="string">Rhodes</span> <span class="string">Island™</span> <span class="string">取得弱神经连接时需要口令</span></span><br><span class="line">  <span class="attr">message:</span> <span class="string">请输入与</span> <span class="string">Rhodes</span> <span class="string">Island™</span> <span class="string">取得弱神经连接时的口令：</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">name:</span> <span class="string">tagName</span>, <span class="attr">password:</span> <span class="string">密码A</span>&#125;</span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">name:</span> <span class="string">tagName</span>, <span class="attr">password:</span> <span class="string">密码B</span>&#125;</span><br><span class="line">  <span class="attr">wrong_pass_message:</span> <span class="string">与</span> <span class="string">Rhodes</span> <span class="string">Island™</span> <span class="string">效验口令失败，请重试。</span></span><br><span class="line">  <span class="attr">wrong_hash_message:</span> <span class="string">与</span> <span class="string">Rhodes</span> <span class="string">Island™</span> <span class="string">效验口令失败，当前使用临时权限查看。</span></span><br></pre></td></tr></table></figure><p><strong>或</strong> 在文章的 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 区内设置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">作为日记加密</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2016-03-30 21:12:21</span></span><br><span class="line"><span class="attr">password:</span> <span class="string">mikemessi</span></span><br><span class="line"><span class="attr">abstract:</span> <span class="string">与</span> <span class="string">Rhodes</span> <span class="string">Island™</span> <span class="string">取得弱神经连接时需要口令</span></span><br><span class="line"><span class="attr">message:</span> <span class="string">请输入与</span> <span class="string">Rhodes</span> <span class="string">Island™</span> <span class="string">取得弱神经连接时的口令：</span></span><br><span class="line"><span class="attr">wrong_pass_message:</span> <span class="string">与</span> <span class="string">Rhodes</span> <span class="string">Island™</span> <span class="string">效验口令失败，请重试。</span></span><br><span class="line"><span class="attr">wrong_hash_message:</span> <span class="string">与</span> <span class="string">Rhodes</span> <span class="string">Island™</span> <span class="string">效验口令失败，当前使用临时权限查看。</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><p>默认开启，若要关闭，在 <code>Hexo/_config.arknights.yml</code> 文件中：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h2><p>除了 <a href="https://hexo.io/zh-cn/docs/front-matter">Hexo 支持的 Front-matter</a> 还支持：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文章页右上角发布/更新日期</span></span><br><span class="line"><span class="built_in">post</span>-info: <span class="literal">true</span>/<span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 侧边栏的目录</span></span><br><span class="line"><span class="built_in">post</span>-index: <span class="literal">true</span>/<span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打赏框</span></span><br><span class="line">reward: <span class="literal">true</span>/<span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="引入自定义-CSS-JS-文件"><a href="#引入自定义-CSS-JS-文件" class="headerlink" title="引入自定义 CSS/JS 文件"></a>引入自定义 CSS/JS 文件</h2><p>可以在 <code>Hexo/source/css/</code> 目录下放入自己的 CSS 文件； 在 <code>Hexo/source/js/</code> 目录下放入自己的 JavaScript 脚本文件；</p><p>然后修改 <code>Hexo/_config.arknights.yml</code> 文件：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  <span class="meta"># 在 `&lt;head&gt;` 标签内引入 CSS 样式表</span></span><br><span class="line"><span class="symbol">  stylesheets:</span></span><br><span class="line">+ - <span class="keyword">/css/</span>custom.css</span><br><span class="line">  </span><br><span class="line">  <span class="meta"># 在 `&lt;body&gt;` 尾部引入 JavaScript 脚本</span></span><br><span class="line"><span class="symbol">  scripts:</span></span><br><span class="line">+ - <span class="keyword">/js/</span>custom.js</span><br></pre></td></tr></table></figure><blockquote><p>资源文件夹是存放用户资源的地方。 除 <code>_posts</code> 文件夹之外，开头命名为 <code>_</code> (下划线)的文件/文件夹和隐藏的文件将会被忽略。 Markdown 和 HTML 文件会被解析并放到 <code>public</code> 文件夹，而其他文件会被拷贝过去。</p><p>——来自 <a href="https://hexo.io/zh-cn/docs/setup#source">Hexo 官方文档</a></p></blockquote><h2 id="参与开发"><a href="#参与开发" class="headerlink" title="参与开发"></a>参与开发</h2><p>欢迎提交 <a href="https://github.com/Yue-plus/hexo-theme-arknights/issues/new">Issues</a> 与 <a href="https://github.com/Yue-plus/hexo-theme-arknights/pulls">PR</a>。</p><h3 id="分支说明"><a href="#分支说明" class="headerlink" title="分支说明"></a>分支说明</h3><div class="table-container"><table><thead><tr><th>分支</th><th>说明</th></tr></thead><tbody><tr><td>main</td><td>相对稳定的版本</td></tr><tr><td>gh-pages</td><td>gh-page 托管</td></tr><tr><td>hexo</td><td>Hexo 目录，这里有可以用于测试主题的 <code>.md</code> 文件</td></tr></tbody></table></div><h3 id="开发中可能遇见的问题及解决方法"><a href="#开发中可能遇见的问题及解决方法" class="headerlink" title="开发中可能遇见的问题及解决方法"></a>开发中可能遇见的问题及解决方法</h3><h4 id="修改-TS-文件不生效"><a href="#修改-TS-文件不生效" class="headerlink" title="修改 TS 文件不生效"></a>修改 TS 文件不生效</h4><p>TypeScript 需要手动编译，请全局安装 <code>typescript</code> 后在 <code>arknights\source\js\_src</code> 目录下执行 <code>tsc</code> 以编译。</p><h4 id="运行-hexo-serve-debug-时，长文章渲染不全"><a href="#运行-hexo-serve-debug-时，长文章渲染不全" class="headerlink" title="运行 hexo serve --debug 时，长文章渲染不全"></a>运行 <code>hexo serve --debug</code> 时，长文章渲染不全</h4><p>这是由热重载插件 <code>hexo-browsersync</code> 导致的，不会影响发布。</p><p>解决方法：禁用该插件。（反正不影响发布，不管也行）</p><h3 id="参与开发可能需要的文档"><a href="#参与开发可能需要的文档" class="headerlink" title="参与开发可能需要的文档"></a>参与开发可能需要的文档</h3><ul><li><p><a href="https://hexo.io/zh-cn/docs/templates">Hexo 官方文档</a></p></li><li><p><a href="http://stylus.bootcss.com/">Stylus 中文网</a></p></li><li><p><a href="https://www.pugjs.cn/api/getting-started.html">Pug 模板引擎中文文档</a></p></li><li><p>另外引用几个大佬的 Blog</p><blockquote><ul><li><a href="https://easyhexo.com/">Easy Hexo</a></li><li><a href="http://cps.ninja/2019/03/16/hexo-with-latex/">让 Hexo 搭建的博客支持 LaTeX</a></li><li><a href="https://www.cnblogs.com/yyhh/p/11058985.html">Hexo主题开发 - ﹏猴子请来的救兵 - 博客园</a></li><li><a href="https://molunerfinn.com/make-a-hexo-theme/">Hexo主题开发经验杂谈 | MARKSZのBlog</a></li><li><a href="https://xinyufeng.net/2019/04/15/hexo-theme-guide/">Hexo 主题开发指南 | Peak Xin’s Blog</a></li></ul></blockquote></li></ul><h3 id="贡献者"><a href="#贡献者" class="headerlink" title="贡献者"></a>贡献者</h3><ul><li><a href="https://github.com/ToUNVRSe">ToUNVRSe</a></li><li><a href="https://github.com/Yue-plus">Yue_plus</a></li><li><a href="https://github.com/TTsdzb">TTsdzb</a></li><li><a href="https://github.com/arkerny">arkerny</a></li><li><a href="https://github.com/DarkLingYun">DarkLingYun</a></li><li><a href="https://github.com/Laurenfrost">Laurenfrost</a></li><li><a href="https://github.com/angine04">安擎Angine</a></li><li><a href="https://github.com/feilongproject">飞龙project</a></li><li><a href="https://github.com/sjfhsjfh">sjfhsjfh</a></li><li><a href="https://github.com/Thexvoilone">Thexvoilone</a></li><li><a href="https://github.com/RyoJerryYu">RyoJerryYu</a></li><li><a href="https://github.com/wmz1024">wmz1024</a></li><li><a href="https://github.com/madisontanle">madisontanle</a></li><li><a href="https://github.com/SherkeyXD">SherkeyXD</a></li><li><a href="https://github.com/soundofautumn">soundofautumn</a></li><li><a href="https://github.com/LongFengShuanWu">LongFengShuanWu</a></li><li><a href="https://github.com/Zhongye1">Zhongye1</a></li><li><a href="https://github.com/ChisatoNishikigi73">ChisatoNishikigi73</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>LiteLoaderQQNT</title>
      <link href="/posts/96a2d8b4.html"/>
      <url>/posts/96a2d8b4.html</url>
      
        <content type="html"><![CDATA[<h1 id="LiteLoaderQQNT"><a href="#LiteLoaderQQNT" class="headerlink" title="LiteLoaderQQNT"></a>LiteLoaderQQNT</h1><div class="tag link"><a class="link-card" title="LiteLoaderQQNT 官网" href="https://liteloaderqqnt.github.io"><div class="left"><img src="https://avatars.githubusercontent.com/u/95263282?v=4"/></div><div class="right"><p class="text">LiteLoaderQQNT 官网</p><p class="url">https://liteloaderqqnt.github.io</p></div></a></div><p>LiteLoaderQQNT 是 QQNT 的插件加载器，一般在 QQNT 的环境内简称为 LiteLoader。<br>它可以让你自由地为 QQNT 添加各种插件，并实现例如美化主题、增加功能等各种功能。</p><p>（比如防撤回，设置动态背景啥的</p><p><img src="https://free-img.400040.xyz/4/2024/06/25/667a36a77c46c.gif" alt="2024-06-25 11-15-13.gif"></p><p><em>（波奇可爱捏</em></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装<a href="https://liteloaderqqnt.github.io/guide/install.html#安装"></a></h1><p><em>此文档为 LiteLoaderQQNT 1.1.x 编写</em></p><hr><h2 id="（法一）（推荐）第三方工具"><a href="#（法一）（推荐）第三方工具" class="headerlink" title="（法一）（推荐）第三方工具"></a>（法一）（推荐）第三方工具<a href="https://liteloaderqqnt.github.io/guide/install.html#第三方工具"></a></h2><p>一些社区开发的安装工具来帮助你快速安装，或跳过此条目来阅读官方安装教程</p><div class="tag link"><a class="link-card" title="LiteLoaderQQNT 快速安装" href="https://github.com/Mzdyl/LiteLoaderQQNT_Install/"><div class="left"><img src="https://avatars.githubusercontent.com/u/95263282?v=4"/></div><div class="right"><p class="text">LiteLoaderQQNT 快速安装</p><p class="url">https://github.com/Mzdyl/LiteLoaderQQNT_Install/</p></div></a></div><hr><h2 id="（法二）"><a href="#（法二）" class="headerlink" title="（法二）"></a>（法二）</h2><p>你需要先下载 LiteLoaderQQNT 到任意位置，以下有两种方式</p><ul><li><p><strong>通过 Release</strong></p><p>前往 LiteLoaderQQNT 仓库，在 Release 中 Latest 内，下载 <code>LiteLoaderQQNT.zip</code> 文件，将压缩包内 LiteLoaderQQNT 目录解压到任意位置</p><p>LiteLoaderQQNT：<a href="https://github.com/LiteLoaderQQNT/LiteLoaderQQNT">https://github.com/LiteLoaderQQNT/LiteLoaderQQNT</a></p></li><li><p><strong>通过 Clone</strong></p><p>使用 Git 工具将 LiteLoaderQQNT 仓库 Clone 到本地任意位置</p><p>shell</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">--depth</span> <span class="number">1</span> https://github.com/LiteLoaderQQNT/LiteLoaderQQNT.git</span><br></pre></td></tr></table></figure></li></ul><p>找到 QQNT 安装目录，编辑 <code>resources\app\app_launcher\index.js</code> 文件，在最前端插入一行<code>require(String.raw</code>此处为你 LiteLoaderQQNT 目录路径<code>);</code></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="title class_">String</span>.<span class="property">raw</span><span class="string">`C:\LiteloaderQQNT`</span>); <span class="comment">// 此处换成你 LiteLoaderQQNT 目录位置</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;./launcher.node&#x27;</span>).<span class="title function_">load</span>(<span class="string">&#x27;external_index&#x27;</span>, <span class="variable language_">module</span>);</span><br></pre></td></tr></table></figure><p>请确保拥有 QQNT 安装目录的读写权限！如果不想给予 QQNT 安装目录读写权限</p><ul><li>按照下文 <code>存储位置</code> 一节进行设置</li><li>将 <code>LiteLoaderQQNT/src/preload.js</code> 复制到 <code>QQNT/resources/app/versions/此处为版本号/application/preload.js</code></li></ul><p>LiteLoaderQQNT 会在第二步骤的文件不一致或没有文件时自动复制，也就是说在更新本体后需再进行一次这步骤</p><hr><h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件<a href="https://liteloaderqqnt.github.io/guide/plugins.html#插件"></a></h1><p>此文档为 LiteLoaderQQNT 1.1.x 编写</p><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装<a href="https://liteloaderqqnt.github.io/guide/plugins.html#安装"></a></h2><h3 id="方式一：手动安装"><a href="#方式一：手动安装" class="headerlink" title="方式一：手动安装"></a>方式一：手动安装<a href="https://liteloaderqqnt.github.io/guide/plugins.html#手动安装"></a></h3><p>如果你有现成的插件，请先确保是与 LiteLoaderQQNT 兼容的，并且拥有对应依赖插件</p><p>将插件目录移动到 <code>LiteLoaderQQNT/plugins</code> 文件夹内，如果插件是压缩包请先解压</p><p><img src="https://free-img.400040.xyz/4/2024/06/25/667a3d3fad587.png" alt="image-20240625113058842.png"></p><h3 id="方式二（推荐）：LiteLoaderQQNT-Plugin-插件安装助手"><a href="#方式二（推荐）：LiteLoaderQQNT-Plugin-插件安装助手" class="headerlink" title="方式二（推荐）：LiteLoaderQQNT Plugin 插件安装助手"></a>方式二（推荐）：LiteLoaderQQNT Plugin 插件安装助手</h3><p>可以先手动安装第三方插件市场类插件，在其中安装插件</p><h3 id="https-github-com-ltxhhz-LL-plugin-list-viewer"><a href="#https-github-com-ltxhhz-LL-plugin-list-viewer" class="headerlink" title="https://github.com/ltxhhz/LL-plugin-list-viewer/"></a><a href="https://github.com/ltxhhz/LL-plugin-list-viewer/">https://github.com/ltxhhz/LL-plugin-list-viewer/</a></h3><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul><li>插件列表查看</li><li>插件检查更新</li><li>插件安装（支持镜像）</li><li>插件卸载</li><li>插件查找</li></ul><p><a href="https://github.com/ltxhhz/LL-plugin-list-viewer/blob/main/imgs/1.png"><img src="https://github.com/ltxhhz/LL-plugin-list-viewer/raw/main/imgs/1.png" alt="img"></a></p><ul><li>依赖查找</li></ul><p><a href="https://github.com/ltxhhz/LL-plugin-list-viewer/blob/main/imgs/2.gif"><img src="https://github.com/ltxhhz/LL-plugin-list-viewer/raw/main/imgs/2.gif" alt="gif"></a></p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="法一：下载发行版"><a href="#法一：下载发行版" class="headerlink" title="法一：下载发行版"></a>法一：下载发行版</h3><p><a href="https://github.com/ltxhhz/LL-plugin-list-viewer/releases/tag/v1.3.1">https://github.com/ltxhhz/LL-plugin-list-viewer/releases/tag/v1.3.1</a></p><ol><li>下载发行版并解压</li><li>将文件夹移动至 <code>LiteLoaderQQNT数据目录/plugins/</code> 下面</li><li>重启 QQNT</li></ol><h3 id="法二：使用-git-clone"><a href="#法二：使用-git-clone" class="headerlink" title="法二：使用 git clone"></a>法二：使用 git clone</h3><ol><li>clone 本仓库 <code>git clone https://github.com/ltxhhz/LL-plugin-list-viewer.git</code></li><li>运行以下命令</li></ol><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span> i</span><br><span class="line"><span class="built_in">npm</span> run build</span><br></pre></td></tr></table></figure><ol><li>如果clone到了 <code>plugins</code> 目录下，修改 <code>manifest.json</code> 中 <code>inject</code> 为</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;injects&quot;: &#123;</span><br><span class="line">    &quot;<span class="selector-tag">main</span>&quot;: <span class="string">&quot;./dist/main/index.js&quot;</span>,</span><br><span class="line">    <span class="string">&quot;preload&quot;</span>: <span class="string">&quot;./dist/preload/index.js&quot;</span>,</span><br><span class="line">    <span class="string">&quot;renderer&quot;</span>: <span class="string">&quot;./dist/renderer/index.js&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>否则可以将 <code>dist</code> 目录移动到 <code>LiteLoaderQQNT数据目录/plugins/</code> 目录下</p></blockquote><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p><strong>安装完后打开QQ打开设置页面选择插件列表即可</strong></p><hr><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="寻找插件"><a href="#寻找插件" class="headerlink" title="寻找插件"></a>寻找插件<a href="https://liteloaderqqnt.github.io/guide/plugins.html#寻找"></a></h2><h3 id="插件列表"><a href="#插件列表" class="headerlink" title="插件列表"></a>插件列表<a href="https://liteloaderqqnt.github.io/guide/plugins.html#插件列表"></a></h3><p>官方维护着一份插件列表，收录了已知的大部分插件，可在官网首页中查看详情</p><h3 id="通过搜索"><a href="#通过搜索" class="headerlink" title="通过搜索"></a>通过搜索<a href="https://liteloaderqqnt.github.io/guide/plugins.html#通过搜索"></a></h3><p>LiteLoaderQQNT 的插件基本发布在 GitHub，善用搜索可以快速的找到所需插件</p><p>比如在搜索框键入关键词<code>LiteLoader</code>和<code>插件</code>，即可找到大量<a href="https://github.com/search?q=LiteLoader+插件&amp;type=repositories">LiteLoaderQQNT生态的插件</a></p><h3 id="官网首页"><a href="#官网首页" class="headerlink" title="官网首页"></a>官网首页<a href="https://liteloaderqqnt.github.io/guide/plugins.html#官网首页"></a></h3><p>LiteLoaderQQNt 官网下面已列出全部已收录插件，点击卡片即可跳转至对应仓库</p><h3 id="插件市场"><a href="#插件市场" class="headerlink" title="插件市场"></a>插件市场<a href="https://liteloaderqqnt.github.io/guide/plugins.html#插件市场"></a></h3><p>有一些第三方插件市场，手动安装后可列出大量插件</p><h2 id="修补"><a href="#修补" class="headerlink" title="修补"></a>修补<a href="https://liteloaderqqnt.github.io/guide/install.html#修补"></a></h2><p><strong>此条目仅需 Windows 用户查看，其他系统无需继续阅读此条目</strong></p><p>由于 Windows 系统平台 QQNT 被添加文件完整性验证，你需要额外步骤来解除限制,有下列四种方式：</p><ul><li><p><strong>DLLHijackMethod</strong></p><p>在 Release 下载 dll 文件，重命名为 dbghelp.dll 放入 QQ.exe 同级目录下即可<br><a href="https://github.com/LiteLoaderQQNT/QQNTFileVerifyPatch/tree/DLLHijackMethod">https://github.com/LiteLoaderQQNT/QQNTFileVerifyPatch/tree/DLLHijackMethod</a></p></li><li><p><strong>QQNTFileVerifyPatch</strong></p><p>在 Release 下载 exe 文件，运行将弹出文件选择框，进入 QQNT 安装目录选择 QQ.exe 开始修补，每次更新都需要重新修补<br><a href="https://github.com/LiteLoaderQQNT/QQNTFileVerifyPatch">https://github.com/LiteLoaderQQNT/QQNTFileVerifyPatch</a></p></li><li><p><strong>PatcherNFixer</strong></p><p>在 Release 下载 zip 文件，解压后运行 exe 将弹出图形化界面，根据软件界面提示选择相应选项与修补方式，每次更新都需要重新修补<br><a href="https://github.com/xh321/LiteLoaderQQNT-PatcherNFixer">https://github.com/xh321/LiteLoaderQQNT-PatcherNFixer</a></p></li><li><p><strong>V8Killer</strong></p><p>此方式目前过于麻烦，且需要自行寻找对应的 RVA 偏移量，只说明此方式的可行性，需自行探索使用方式<br><a href="https://github.com/ShellWen/v8_killer">https://github.com/ShellWen/v8_killer</a></p></li></ul><h2 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查<a href="https://liteloaderqqnt.github.io/guide/install.html#检查"></a></h2><p><strong>按照上述教程完成安装后，有两种方法检查 LiteLoaderQQNT 是否成功安装</strong></p><ul><li>运行 QQNT 并打开设置，查看左侧列表是否出现 <code>LiteLoaderQQNT</code> 选项</li><li>使用终端运行 QQNT 查看是否有 LiteLoaderQQNT 相关内容输出显示</li></ul><p>如果有显示，即安装成功，玩的开心！</p><h2 id="存储目录"><a href="#存储目录" class="headerlink" title="存储目录"></a>存储目录<a href="https://liteloaderqqnt.github.io/guide/install.html#存储目录"></a></h2><p>支持设置 <code>LITELOADERQQNT_PROFILE</code> 环境变量指定 <code>data</code> <code>plugins</code> <code>config.json</code> 存储位置，即可不在本体目录进行读写操作，比如 MacOS 与 Linux 平台 QQNT，以及类似于 flatpak 打包的 QQNT，让其实现成为可能</p><p>如果你想将本体与存储目录合并在一起（便携软件）需将 <code>LITELOADERQQNT_PROFILE</code> 环境变量删除，将 <code>data</code> <code>plugins</code> <code>config.json</code> 移动回本体根目录下</p><h2 id="更新QQNT"><a href="#更新QQNT" class="headerlink" title="更新QQNT"></a>更新QQNT<a href="https://liteloaderqqnt.github.io/guide/install.html#更新qqnt"></a></h2><p>每次更新 QQNT 都需要重新根据上述教程重新修补</p><h2 id="版本支持"><a href="#版本支持" class="headerlink" title="版本支持"></a>版本支持<a href="https://liteloaderqqnt.github.io/guide/introduction.html#版本支持"></a></h2><p>支持 QQNT 桌面端 全架构 最低 <code>20667</code> 版本到官网最新版<br>更老的版本也支持，只是设置界面样式会崩坏，不介意也可以用</p><h2 id="外部链接"><a href="#外部链接" class="headerlink" title="外部链接"></a>外部链接<a href="https://liteloaderqqnt.github.io/guide/introduction.html#外部链接"></a></h2><h3 id="Telegram"><a href="#Telegram" class="headerlink" title="Telegram"></a>Telegram<a href="https://liteloaderqqnt.github.io/guide/introduction.html#telegram"></a></h3><p>群聊：<a href="https://t.me/LiteLoaderQQNT">https://t.me/LiteLoaderQQNT</a><br>频道：<a href="https://t.me/LiteLoaderQQNT_Channel">https://t.me/LiteLoaderQQNT_Channel</a></p><h3 id="LiteLoaderQQNT-1"><a href="#LiteLoaderQQNT-1" class="headerlink" title="LiteLoaderQQNT"></a>LiteLoaderQQNT<a href="https://liteloaderqqnt.github.io/guide/introduction.html#liteloaderqqnt"></a></h3><p>框架本体：<a href="https://github.com/LiteLoaderQQNT/LiteLoaderQQNT">https://github.com/LiteLoaderQQNT/LiteLoaderQQNT</a><br>插件模板：<a href="https://github.com/LiteLoaderQQNT/Plugin-Template">https://github.com/LiteLoaderQQNT/Plugin-Template</a><br>插件列表：<a href="https://github.com/LiteLoaderQQNT/Plugin-List">https://github.com/LiteLoaderQQNT/Plugin-List</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>维克多崔专访</title>
      <link href="/posts/d9fc664c.html"/>
      <url>/posts/d9fc664c.html</url>
      
        <content type="html"><![CDATA[<p>2024-6-20</p>    <div id="aplayer-tnHimNhU" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="8773860646" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p><strong>维克多•崔专访 1989年5月6日，《苏联青年》杂志采访</strong></p><p> ——（记）你们最开始为什么取名叫“电影”？</p><p> ——（维）当我们想出这个名字的时候才18岁左右，现在已经不记得了。</p><p> ——（记）是什么促使你们组建乐队的？ </p><p>——（维）因为一些歌曲。开始的时候我写了些歌曲，朋友们都很喜欢，然后是朋友的朋友…… </p><p>——（记）在成名之前，你们走过了怎样的道路？ </p><p>——（维）坦白的说，我从来没想过会走得多么艰难，我只是做我喜欢的事情而已。我对现在的一切非常的满意。我并没有为了现在的这种成功付出巨大的代价，我只是在坚持自我。当然，我很高兴现在有很多人喜欢我的歌曲，这对我来说很好。 </p><p>——（记）你能说一说加入到你乐队里面的伙伴么？你说过，他们首先并不是乐手，而是朋友。描述一下他们的性格吧。 </p><p>——（维）我不会像你说的那样去“刻画”朋友，他们都有缺点和优点，我和他们作朋友并不是因为他们拥有所宣扬的那一套“美德”，而是有别的原因。</p><p> ——（记）你在这个圈子里有偶像么？ </p><p>——（维）有时会有。我不喜欢只喜欢一个人，我喜欢很多乐队的很多歌曲。 </p><p>——（记）你奉行哪种理念？ </p><p>——（维）我的行为没有什么立场或者目的，我在任何情况下都会我行我素的去做，只要我觉得自己需要去这么做。</p><p> ——（记）艺人通常都不得不放弃生活中常人的幸福和欢乐，你现在不得不放弃些什么？ </p><p>——（维）一个人在在大街上散步，在一个城市住上至少一个月（笑）。</p><p> ——（记）你父母怎么看待你现在的工作？ </p><p>——（维）现在他们认为我是在为自己的事业而奋斗，但也许他们不会一直这么认为。 </p><p>——（记）他们去过你的现场么？</p><p> ——（维）我想，应该去过一两次吧。</p><p> ——（记）你渴望在舞台上为自己塑造一种什么形象么？ </p><p>——（维）我从来没有想过要去塑造什么，我只是我自己的样子。（笑）</p><p> ——（记）“我们的心都需要改变”，你在歌里这样唱，你想在生活中改变什么么？</p><p> ——（维）每个人都应该首先是这改变自己和自己的生活……这是个复杂的问题。我虽然这么说，但我并不觉得一个人能用自己的力量改变生活。 </p><p>——（记）你在生活中是一个勇敢的战士么？ </p><p>——（维）我并不把自己当作一个战士。我只是在唱我喜欢的歌，让我激动的歌。</p><p>——（记）你的歌曲里还唱到“把我留在这个屋子里吧，别来触碰我的内心。”你是一个孤僻的人么？ </p><p>——（维）所有的人都有那些喜欢一起说话的人，也有不想说话的人。那些歌曲其实也是很幽默的。——（记）为什么在你的歌曲中经常出现“夜晚、雨、秋天、流星”这些词？ </p><p>——（维）不知道，我对这些文艺分析不太熟悉，我不够专业。 </p><p>——（记）哪些作品影响了你社会生活的转变？ </p><p>——（维）他们怎么能让我转变呢？我不是一个社会的抗议者，不是为了“仇恨岁月”而歌唱的乐手。 </p><p>——（记）你的歌曲是怎么创作出来的？ </p><p>——（维）这对我来说也是个谜……我自己也不清楚……我拿起琴开始弹，然后那些歌词曲调就跟着出来了。 </p><p>——（记）列宁格勒的报纸《Смена》（苏联时期极具影响力的报纸，主要针对青少年人群）把你称为1988年最杰出的摇滚诗人，你怎么看待摇滚诗人和（传统）诗人之间的区别？ </p><p>——（维）我不知道这两个术语之间有什么区别，我不会抛开音乐去对我的歌词咬文嚼字，这样会让我失去很多。 </p><p>——（记）今天对你来说最重要的是什么？ </p><p>——（维）保持内心的自由。 </p><p>——（记）在台上演出时你并不是一直在唱自己的歌，这意味着什么？ </p><p>——（维）一些歌曲随着时代的不同已经失去了现实意义，我对那些歌已经不再感兴趣了。现在的好歌很多，我不会拒绝去唱那些我喜欢的歌曲。 </p><p>——（记）你们乐队现在正在进行全国巡演，你希望在巡演中得到什么？ </p><p>——（维）我们从来就没渴望去迎合潮流。我们从来就没想过我们该玩什么样的风格，这种风格能流行多久。我只作自己所喜欢的事，这对我们来说是最重要的。如果我们变得不再流行，那我们就离开舞台好了。 </p><p>——（记）今天“电影院”的问题在哪里？ </p><p>——（维）问题在于我不得不不停的“工作”，要不停的高度紧张。 </p><p>——（记）你么应邀出国演出过么？ </p><p>——（维）当然，出去很多次。但是我们精心的筛选这些邀请，因为现在“俄罗斯的东西”（不同于“苏联的东西”）在那些地方很流行，我们打算减少在那些地方的演出了。 </p><p>——（记）你们都去过那里？ </p><p>——（维）丹麦，美国，法国 </p><p>——（记）那你们在那里的接受程度怎么样呢？ </p><p>——（维）他们怀着我迷茫的表情看着我：你为什么不是那个手拿巴拉莱卡琴（俄罗斯三弦民乐），身穿俄式衬衣的样子呢？ </p><p>——（记）在苏联境内的巡演还在继续么？ </p><p>——（维）是的，我们马上就要在巡演的路上了。 </p><p>——（记）在摇滚还是地下组织一样地下的那些年代，摇滚乐手始终是被排挤打击的，那时他们被塑造为了英雄，而现在已经改变了，英雄主义好像不再需要了，你们将来会怎么样？ </p><p>——（维）不需要？现在这样的英雄最好实在是太少了。 </p><p>——（记）给“电影”的歌迷们带来什么新的消息了么？ </p><p>——（维）快出新专辑了，但是专辑名字还没决定。 </p><p>——（记）你对现在的生活满意么？ </p><p>——（维）我不觉得人一定能够真正对生活感到满意。但从另一方面来说，我已经很满足了，原来我在锅炉房里工作过，为了赚钱要唱歌唱破嗓子，现在已经很好了。 </p><p>——（记）对（杂志的）读者想说些什么吗？ </p><p>——（维）祝你成功。 </p><p>——（记）尤其是对那些15、6岁的年轻人想说什么？ </p><p>——（维）我相信每个青年人都有自己的世界，我也不必要去教他们什么，我只能祝你们成功。 </p><p><img src="https://free-img.400040.xyz/4/2024/06/20/66730a2d16a74.png" alt="屏幕截图 2023-09-28 170904.png"></p><p>​                                                                         此岸苍穹，彼岸无穷</p>]]></content>
      
      
      <categories>
          
          <category> 音乐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 音乐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于博客</title>
      <link href="/posts/4a262e6d.html"/>
      <url>/posts/4a262e6d.html</url>
      
        <content type="html"><![CDATA[<p>文章分两部分，一是我为什么写作，二是我为什么以个人博客的形式写作。</p><h1 id="我为什么写作"><a href="#我为什么写作" class="headerlink" title="我为什么写作"></a>我为什么写作</h1><p>进入心流状态下的写作是为数不多的让我体验到纯粹而持久的快乐的事。但这样的体验其实非常有限，近几年来似乎很少能安下心来写作。对于生存的焦虑和面对世俗生活的理性让我执着于如何让自己成长为能适应现代工业社会的一名合格的成年人，所以忙着出国，读博，毕业，实习，找工作…偶尔喘息的间隙时常怀念少年时代每周末读《南方周末》、《上海壹周》以及写随笔的日子。时光一去难倒回，但心底隐约还记得那时候的快乐。《上海壹周》在2015年停刊了，《南方周末》的报纸如今身在国外也无法买到，写作似乎是唯数不多的自己可以掌控的事情，作为找寻快乐和精神家园的一种方式。</p><p>时间如逆旅，我亦是行人。在逐渐意识到人生就是一系列短暂的相聚与漫长的告别之后，文字也成为我留住那些逐渐远去的时光与人们的努力。类似精卫填海，尽管我永远也无法填满横亘在我与它们之间的那片海，但只要写下来，至少有一部分影像便得以存储在我的文字里，一些细微的美好和快乐也将永远与我一起在时间的无涯里漫游。</p><p>文字也让我暂时忘却孤独。在阅读他人作品时的共鸣与共情就仿佛是接收到来自同类的召唤。此时文字就成为一道强烈的电波或磁场，吸引着我让我靠近并回应。阅读是一种靠近，但回应需要依靠写作。想回应那些伟大的作品，他们就同能量巨大的恒星，耀眼的光芒穿越时空照亮了我这颗隐匿于宇宙尘埃中的小小星球。我也想回应那些虽然遥远却同频次的星球，因为知道他们的存在，宇宙的黑暗森林不至于那么冰冷恐怖。</p><p>写作也是在人生迷途时的自我救赎。在日复一日的平凡生活里，我无法抑制内心对于“存在的意义”的追问。但这个宏大的终极问题显然是我无法回答的。我希望生命中有一个至高至善至美的存在，让我对于生活的努力更有意义，而不是仅仅为着那些”没有时拼命想要，一旦得到又立马失去兴趣“的欲望汲汲营营。也许这样的思考让我更有觉知地去生活，但有时它也如同诅咒，无果无用的思考和寻找让我对自己失望，陷入焦虑和虚无。我需要一种方式消解掉这些负面的思考和情绪。而根据过往的经验，写作在将这些虚无缥缈的思虑化成具体文字的过程中，通过理智的介入，过滤掉了许多矫情的东西，让感性不至于如脱缰野马把我带入一片虚无的荒野。作者Lauren Sapala 在《INFJ writing》一书中也曾提过，写作可以托住生活的失序，身体与精神的坠落。“内向而敏感的人比别人更容易疲惫，你需要更接纳自己。不要把思考和敏感当作一种负担，想办法把它输出，感受到它是一种礼物。”</p><h1 id="我为什么以个人博客的形式写作"><a href="#我为什么以个人博客的形式写作" class="headerlink" title="我为什么以个人博客的形式写作"></a>我为什么以个人博客的形式写作</h1><p>关于实现写作的形式，日记是一种，但因为它只写给自己看的，随意直白，总觉得是通篇的流水账，缺乏美感；即使是我自己也不太想回过头去读。所以我想我还是需要一些哪怕是假想的读者。因为知道有读者在，写作时便会不自觉地严谨起来，会去追求逻辑的严密和文字的整洁美感。此外我也期待与读者的互动，我会因为那些愿意在我的博客停留听我絮叨的朋友而更有动力。所以当把自己的文字放在开放的互联网上，也如同向一片汪洋抛出了漂流瓶，期待它们与有缘的读者相遇。</p><p>几年前，我在找工作期间也按着那时的风尚做了求职版的个人网站，展示我在Ph.D阶段做过的项目和自己的简历。虽然那个网站在找到工作后就因为selling myself的自我尴尬而关闭了，但Hugo+Github在操作和管理上的干净整洁，让我非常心仪建立静态网站的过程。得益于那些富有才华，技术超群的主题开发与维护者们，我也可以按照自己的意愿建立一个百分百属于我的小天地，不受制于平台和审查，也不被烦人的广告打扰。所以我就用同样的方式建立了这个小站，来承载我的写作。</p><p>建立个人博客也是因为受到许多博主的感召。TA们丰富有趣的文字和优雅美观的网站都给予我非常好的阅读体验，赞叹之余也心向往之。所以我也想成为一名写作者参与其中，因为这是与那些真诚又有趣的作者们交流的最好方式。「链接」页记录着我常驻足的博客列表，想对文字背后那些从未谋面却又似相识的作者们道一声感谢。</p><p>最后，这个小站也寄托了我对天各一方不能时刻相见的故人的想念。很久以前我在那些鼓励之下曾下决心会坚持写作，这么多年这个承诺其实一直没有忘记。“人生不相见，动如参与商。今夕复何夕，共此灯烛光”，但愿有一刻我们在遥远夜空望见的是同一抹月光。</p><p>登高峰乃见云平。</p>]]></content>
      
      
      <categories>
          
          <category> 随记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LoveCards v2.3.0</title>
      <link href="/posts/f00efe6a.html"/>
      <url>/posts/f00efe6a.html</url>
      
        <content type="html"><![CDATA[<p><h1 align="center">  <br>  <a href="https://lovecards.cn/" alt="logo" ><img src="https://s11.ax1x.com/2024/01/11/pFCilx1.png" width="150"/></a>  <br>  LoveCards  <br></h1></p><h4 align="center">由你筑起的“领域” 众人皆可“倾心倾意”.</h4><p align="center">  <a href="https://github.com/zhiguai/LoveCards/releases">    <img src="https://img.shields.io/github/v/release/zhiguai/LoveCards?include_prereleases&style=flat-square" />  </a>  <img src="https://img.shields.io/github/stars/zhiguai/LoveCards?style=social"></p><p align="center">  <a href="https://lovecards.cn">主页</a> •  <a href="https://forum.lovecards.cn">论坛</a> •  <a href="https://jq.qq.com/?_wv=1027&k=QTRjFYyB">QQ群组</a> •  <a href="https://github.com/zhiguai/LoveCards/releases">下载</a></p><h2 id="亮点"><a href="#亮点" class="headerlink" title="亮点"></a>亮点</h2><p> 不止表白卡，更有交流卡<br> 强大的用户系统，也支持游客的随时访问<br> 标签系统，你的站点，你的热点，你创造<br> 模板系统，给你无限可能<br> 卡片不限字数，支持多图片上传<br> 支持评论，点赞，让互动性拉满<br> 管理后台可添加多个管理员<br> 卡片一键分享至多平台<br> 卡片浏览次数统计<br> 发行版开箱即用<br> … …</p><h2 id="部分图示"><a href="#部分图示" class="headerlink" title="部分图示"></a>部分图示</h2><h4 id="后台总览"><a href="#后台总览" class="headerlink" title="后台总览"></a>后台总览</h4><p><img src="https://s11.ax1x.com/2024/01/11/pFCifRs.jpg">  </p><h4 id="外观设置"><a href="#外观设置" class="headerlink" title="外观设置"></a>外观设置</h4><p><img src="https://s11.ax1x.com/2024/01/11/pFCiDMt.jpg"></p><h4 id="默认主题配色展示"><a href="#默认主题配色展示" class="headerlink" title="默认主题配色展示"></a>默认主题配色展示</h4><div style="display: flex; justify-content: space-between;">    <img src="https://s11.ax1x.com/2024/01/11/pFCitaD.jpg" style="width: 30%;" alt="Image 1">    <img src="https://s11.ax1x.com/2024/01/11/pFCi8r6.jpg" style="width: 30%;" alt="Image 2">    <img src="https://s11.ax1x.com/2024/01/11/pFCiYVO.jpg" style="width: 30%;" alt="Image 3"></div><h2 id="🛠️-部署"><a href="#🛠️-部署" class="headerlink" title="🛠️ 部署"></a>🛠️ 部署</h2><h4 id="1-环境（参考开发环境）"><a href="#1-环境（参考开发环境）" class="headerlink" title="1. 环境（参考开发环境）"></a>1. 环境（参考开发环境）</h4><p>Nginx/Apache<br>PHP8+<br>Composer<br>mysql<br>redis(可选)  </p><h4 id="2-TP6-安装依赖（发行版跳过）"><a href="#2-TP6-安装依赖（发行版跳过）" class="headerlink" title="2. TP6 安装依赖（发行版跳过）"></a>2. TP6 安装依赖（发行版跳过）</h4><p><code>composer install</code></p><h4 id="3-配置"><a href="#3-配置" class="headerlink" title="3. 配置"></a>3. 配置</h4><ol><li>设置运行目录为“Public”</li><li>设置伪静态，伪静态规则参考“Public”目录下的“.htaccess”与“nginx.htaccess”（无法自动识别时请手动设置）</li><li>删除“lock.txt”安装记录文件</li><li>赋予程序根目录操作权限为“777”（出现异常时可选）</li><li>关闭防跨站(宝塔可选)</li></ol><h4 id="4-进入网站自动跳转至安装引导"><a href="#4-进入网站自动跳转至安装引导" class="headerlink" title="4. 进入网站自动跳转至安装引导"></a>4. 进入网站自动跳转至安装引导</h4><h2 id="⚠️-注意"><a href="#⚠️-注意" class="headerlink" title="⚠️ 注意"></a>⚠️ 注意</h2><p>更新通知可通过关注该仓库、关注<a href="https://forum.lovecards.cn">LoveCards论坛</a>、加入<a href="https://jq.qq.com/?_wv=1027&amp;k=QTRjFYyB">QQ交流群</a>及时获取  </p><h2 id=""><a href="#" class="headerlink" title=" "></a> </h2><h4 id="模板说明"><a href="#模板说明" class="headerlink" title="模板说明"></a>模板说明</h4><ul><li><a href="https://docs.lovecards.cn">LoveCards文档镜像🪞</a>(🔥更新中)</li><li><a href="https://lovecards.github.io">LoveCards文档🐱</a>(🔥更新中)</li><li><a href="https://console-docs.apipost.cn/preview/ad83ecdb4f10e38b/e187796270055b7b">API 文档</a>(🔥更新中)</li></ul><h4 id="版本号说明"><a href="#版本号说明" class="headerlink" title="版本号说明"></a>版本号说明</h4><ul><li>Ver为开发本号，程序中的“版本检测”将优先或仅以Ver为准</li><li>VerS为展示版本号，用作发行版的展示</li><li>VerS中[A.B.C]<br>当 A 改变意味着 有较低层的代码或架构等存在重大改动<br>当 B 改变意味着 数据库相关有改动<br>当 C 改变意味着 一般逻辑代码有改动</li><li>Ver一般按照发行版本递增 </li></ul><h2 id="⚗️-技术栈"><a href="#⚗️-技术栈" class="headerlink" title="⚗️ 技术栈"></a>⚗️ 技术栈</h2><ul><li><a href="https://www.php.net" title="PHP">PHP</a>+<a href="https://www.thinkphp.cn/" title="ThinkPHP6">ThinkPHP6</a></li><li><a href="https://www.mdui.org/" title="MDUI">MDUI</a>+<a href="https://jquery.com/" title="Jquery">Jquery</a></li></ul><h2 id="-1"><a href="#-1" class="headerlink" title=" "></a> </h2><p><a href="https://jq.qq.com/?_wv=1027&k=QTRjFYyB">QQ 交流群 801235342</a><br><strong>如有问题，请先加群咨询</strong></p><h2 id="⭐-Star-History"><a href="#⭐-Star-History" class="headerlink" title="⭐ Star History"></a>⭐ Star History</h2><p><a href="https://github.com/zhiguai/LoveCards/stargazers"><br>    <img width="500" alt="Star History Chart" src="https://api.star-history.com/svg?repos=zhiguai/LoveCards&type=Date"></a> </p><h2 id="📜-License"><a href="#📜-License" class="headerlink" title="📜 License"></a>📜 License</h2><p>GPL V3</p>]]></content>
      
      
      <categories>
          
          <category> 网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>存档</title>
      <link href="/posts/a33b7267.html"/>
      <url>/posts/a33b7267.html</url>
      
        <content type="html"><![CDATA[<p>存档</p><p><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b865cd9b71.jpg" alt="屏幕截图 2024-05-04 134318.jpg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b865d5f4c8.jpeg" alt="屏幕截图 2024-04-21 015948.jpeg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b865e0cfb5.jpeg" alt="屏幕截图 2024-04-21 014623.jpeg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b866021c83.jpeg" alt="屏幕截图 2024-03-30 164308.jpeg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b8660a8620.jpg" alt="屏幕截图 2024-01-23 152203.jpg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b8661638cb.jpg" alt="屏幕截图 2024-01-20 140607.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 随记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些艺作，关于曼哈顿</title>
      <link href="/posts/undefined.html"/>
      <url>/posts/undefined.html</url>
      
        <content type="html"><![CDATA[<!--StartFragment--><p>關於這段時間的一些记录和<br>一些摸鱼</p><!--EndFragment--><p><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b81f49d47e.jpg" alt="屏幕截图 2024-05-02 233604.jpg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b8697ebae8.jpg" alt="95012449_p1_master1200.jpg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b81f741395.jpg" alt="98176582_p14_master1200.jpg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b81f522e8e.jpg" alt="95012449_p0_master1200.jpg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b81f7c703a.jpg" alt="98176582_p13_master1200.jpg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b8699b2f41.jpg" alt="98176582_p11_master1200.jpg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b869ae8f0a.jpg" alt="98176582_p9_master1200.jpg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b869b4a983.jpg" alt="98176582_p10_master1200.jpg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b869b9d0d0.jpg" alt="98176582_p8_master1200.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 画集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逆模因</title>
      <link href="/posts/56b6c9d6.html"/>
      <url>/posts/56b6c9d6.html</url>
      
        <content type="html"><![CDATA[<!--StartFragment--><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>逆模因（antimeme），是<em>一种具自我屏蔽特性的概念</em>；一种透过其本身的性质，以阻止或防止他人将其传播的概念。</p><p>在了解什么是逆模因之前，首先要明白何为模因。</p><p><strong>模因：</strong><br>现实里的模因是文化信息单位，其所承载的信息的自身特性，有助于将自己，通过客体模仿和复制的方式，在人际间扩散，进而形成多级传播或迭代差异。</p><p><strong>模因特性：</strong><br>自我模仿、增殖性、主动性、扩散性、排他性、差异性，等等。</p><p><strong>信息传播：</strong><br>一个对于某些个体来说具有实际意义的信息，其传播需要通过这一流程：</p><blockquote><p>传播者【可能对象 → 编码信息 → 传播渠道】<br>→ 媒介 →<br>受传者【接受信息 → 解码信息 → 做出反应】</p></blockquote><p><strong>逆模因：</strong><br>在信息传播过程中，能严重妨碍信息传播的因素（噪声）及所衍生的干扰信息，特别是能影响自身被感知的干扰因素及信息，便可以视为逆模因。</p><p><strong>干扰信息：</strong><br>干扰信息，是相对无实意的信息，其会附加在原来的实意信息上，或阻止、或掩饰、或遮蔽对方的传播。其多与实意信息同出一个信源，或者说，就是信源有意发出噪音，以遮蔽自身外泄的实意信息。</p><p><strong>逆模因特性：</strong><br>逆模因可具有干扰或破坏原信息的能力；同时也可有和模因相近的复制与扩散特性，但与之相反的是，逆模因复制和扩散的是噪声。这一噪音会污染实意信息传播流程中，可能接触/涉及实意信息的任意之物。其自身与在其影响下的原信息，可能会不被重视、被忽略，乃至无法察觉，等等。</p><p>注：<em>逆模因视情况可具有认知危害、信息危害、记忆影响等危害的其中之一或者全部，但有认知危害、信息危害、记忆影响的事物不等于就是逆模因。</em></p><p><strong>逆模因效应：</strong><br>逆模因效应是逆模因特性所造成的信息在原传播过程中，失真、丢失、屏蔽情景，而能形成逆模因效应的是逆模因实体。</p><blockquote><p>逆模因就是严重影响原信息在传播中的完整性，乃至将传播直接打断的“强噪音”，及其所形成的附加在原信息上的干扰信息。能挤占原信息的传播生态，使之被消溶或遮蔽；也可在污染原信息后，及所衍生的干扰信息一样扩散，传播相对某些受传者来说的无意义或实在危害的干扰信息。同时，其自身及其影响下的原信息，多具有不被察觉或令人不以为意的特性。</p><p>而逆模因特性令原信息在原传播流程中，出现失真、遮蔽、丢失、消溶等的情况，就是逆模因效应。</p></blockquote><p>逆模因是<em>一种具自我屏蔽特性的概念</em>；一种透过其本身的性质，以阻止或防止他人将其传播的概念。</p><p>你要如何收容一个你无法记录或记忆的实体？如何去和无法触及，而且伪装完美的敌人，在你甚至不知道自己正和它开仗的情况下进行战斗？</p><p>逆模因的存在代表着“未知”的具象化，也是近乎永恒的恐惧来源。因此，逆模因与任何一项未知的异常之间并无区别，其背后只包含未知带来的恐惧，而非完全等价于威胁本身。</p><p>面对“未知”本身，我们只能小心前进，免不了动用超出规格的资源与手段以保证安全，哪怕对象只是无害的石头或晦涩的知识。信息在传播的过程中难免会出现噪音，更遑论无法理解的其他语言。面对逆模因，我们不必惧怕它本身。</p><p>我们唯一缺少的，是“亡羊补牢”的机会。</p><p>面对未知的异常，最好的做法是谨慎解析、大胆行动，然后再针对错误的后果进行修正，积累经验的同时成为更好的自己。但面对逆模因，我们很可能失去“修正错误”的机会，因为我们无法得知错误是什么样的，甚至可能无法得知错误是否发生。</p><p>解决方法很简单，那就是不犯错误。</p><psw>这不是你第一遍读这些了，当你惊讶于为什么结尾会这么说的时候，你应该把这篇文章再看一遍</psw>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>那天所见的花名</title>
      <link href="/posts/582cde4c.html"/>
      <url>/posts/582cde4c.html</url>
      
        <content type="html"><![CDATA[<p>我们仍未知道那天所看见的花的名字。</p><p>理论上，它应带我从孤独中逃离。</p><p>我本该被迫与它寸步不离。</p><p>害怕它的影子继续纠缠，令我窒息。</p><p>如今我却仍坐在这里。</p><hr><p>太阳在山路的那头被升起的山峰遮住了半轮。我轻轻走过青草穿插的石板小路，走上泥泞的大路。路两边的杂草依旧很多，我仔细地从路首找到与山下公路融为一体的路尾，依然不见那束花的踪迹。从那一次见过它后，我便再不可于这条路上找到它了。</p><p>就像它随着她一起消失了一般。</p><p>我慢慢坐在路堐上，双目有些迷茫地望着金色的太阳敛起光辉。</p><p>再不可知那花的名字。再不见你。不再。</p><p>我在那里埋下一栽小小的蒲公英。</p><p>那么一支渺小的花在山风与记忆里时隐时现。</p><p>与其说是为了纪念，倒不如说是为了忘却。</p><p><strong>1</strong></p><p>我似乎不太记得我为什么于此工作了。反正，从我有点记忆起，我就一直呆在站点，呆在于山，呆在寂秘的树林与那未收割过的麦田的交界处那栋小瓦屋里。不引人注目，这一设施上完美诠释了这一要求。看似破旧平凡的小瓦屋，实际上联控着深埋在山中的数个军需仓库与山顶天文台的所有安保措施。</p><p>我的工作，说好听点叫分站总负责人，说直白点就是看仓库的。人家至少还可以在闲暇时刷手机啥的，我一来上班，什么收发装置就都被没收了。每天那盏小小的警戒灯，永远是平静的绿色，我眼前的景色永远是一片望不到头的麦田与更远方的群山。当然，我被允许偶尔地出门走走透透气，但我不爱出门——透着窗子和不透着窗子看景色似乎没什么差，而小屋里有冬暖夏凉的空调。</p><p>虽然无聊，但我喜欢这样的生活。从小到大都是——换句话说，我从来都是一个孤独的家伙。听过一个笑话吗？一个人总是乘小舟去河上钓鱼，但每次什么都没有钓到，所有的人都劝他不要钓鱼了，但他依然每天早上去钓鱼——因为他喜欢的不是钓鱼，而是独坐孤舟无所事事。</p><p>所以这个工作很适合我。</p><p><strong>01</strong></p><p>每个人都在青春期时有玫瑰色的幻想。我也不例外，虽然住在闽侯大义这样一个在福州算偏远的地方的最偏远角落里一座大山上，但环绕我的群山阻碍不了我放飞的想象。我每天要走六公里的山路去大义中学上课，大约于我两个小时的路程。这一路上都是树林，林子里除了树连只鸟都没有，安静的很。这样的时候就很值得幻想。</p><p>幻想什么呢？</p><p>有一次在湖那里跳了下去。</p><p>水面很清，阳光透进来，浅蓝浅蓝的像天一样。但往下沉去，水底全都浸在黑色里，愈深愈浓的黑，水底就像没有似的，黑色的渊谷像一团浓墨聚在我脚底。我喘不过气，开始咳嗽。咳嗽了一股水流涌进鼻子，脑袋随着肚子一并发沉。</p><p>我口音很重，讲话老是平翘舌不分，声音又小，身边人总当我是空气。</p><p>我在那一刻沉下去。</p><p>水面清圆，蓝得让人有点炫目，但视野却在一点点黑下去。</p><p>孤来孤往了十三年。往下沉下去。</p><p>对我来说什么都像山林一样安静。林子里以前有活物的，都被打了去卖钱。太阳小小一轮悬在蓝天上，洒下来的光线在雾蒙蒙的树林间是有形的，我伸手去摸过，除了暖什么也感觉不到。光是没有一点分量的，轻，比羽毛都轻。虽然感觉不到实在的玩意儿，但我喜欢那些光柱，它们比实在的东西更让我喜欢。我喜欢光。我喜欢太阳。黑暗是无形的，但黑暗很有分量，重得一直把我往下拖。</p><p>我开始挣扎着往上游。</p><p>水面是天蓝色的，属于太阳。</p><p>而有光透过的地方总显得那么好。</p><p><strong>02</strong></p><p>光柱是片状的，暖洋洋，分明触摸不到它，但我觉着它一定是软乎乎的触感，可能比羊毛绒子摸起来软得更很。林子里很亮堂，充满了光亮，山谷就像一碗盛着花生油的黑瓷碗。</p><p>我躺在湖滩上睁着眼睛，忽然看见一抹明亮的光芒在眼前的枫树上摇曳着。</p><p>那是我头一回在林子里碰见活物。原来阳光是活的。</p><p>但那不是阳光。</p><p>她从枫下轻盈地走来，踏过地面上落满的层层干叶，但脚步却依旧悄然无声。与其说她在走，不如说她在飘动，就像被风托起的羽毛。待她近了，我看见她在笑。笑得像清圆透亮的水面，笑得像林间飞扬的柔光。</p><p>我没想过她会在这儿出现。正因我没想过，她不应该不可能在这出现。</p><p>我没想让她笑，但她笑着，眉眼弯弯。她笑起来的样子绝非我贫乏的想象可以形成的。</p><p>风转过湖面，凉凉地抚过我满身的伤痕，凉凉地吹起拥抱着的粼光，凉凉地摇下满树红叶，凉凉地卷起金黄色的长发飞舞。</p><p>我想起林间的阳光柱子被摇动的叶迷蒙的时候。那样的光片落在地上会泛出不同深浅的斑状金黄。</p><p>我意识到，她活了。</p><p><strong>04</strong></p><p>假的东西融不入真的世界，幻想的泡沫化在现实的熔炉中。</p><p>她已经变得很透明了。</p><p>有时候，我对着我的心房呼喊了好几声，她都不会出现。</p><p>她已经很脆弱。</p><p>我和她在林子里走着。阳光穿隙过叶缝，也穿隙过她的身体。</p><p>上学路上遇到的事物依旧会让她惊喜与好奇。在一个泥泞的雨后，大路两边有很多杂草挂着露珠于晴空下闪烁。她从这边跑到那边，从那边跑到这边，惊起两只蝴蝶珊珊飞起。我看着她的背影在我眼前逐渐远向地平线，忽然从心底感到一阵悸动。而这段哀伤我明白也不能长久，过个五年，十年，就连这样的回味都会消失。</p><p>我跟在她身后回答她的问题。小石子。牵牛花。狗尾草。两只轮子的叫脚踏车。水洼边上的是一只火蚁。水洼里边的？蓝天白云？还是那轮明亮的太阳？</p><p>她俯身凝望着水洼中平静的映像，忽然起身，但水面里的颜色没有一点变化。</p><hr><p>她没有倒影。</p><p>除了在我心目中，她对于世界真的就只是一缕幻影。而总有一天，她将真正变成一名虚妄无形的存在。因为我不能永恒将其挂于心头。她会逐渐从我的心灵中消失，不论如何。</p><p>一杆弯曲的瘦茎，但结着的花却是白色的？只有那么一株低垂于湿沉的雨露中。从没见过这般的花，像雪般好看，但真的不认得。走吧，芒，我们要迟到了。</p><p>好看但不显眼，深埋于那丛杂草里。从那天开始我便再没见过那种花。随着时间走向路的尽头，花的样子我也慢慢忘却。而这时间不过是转了个弯的一刻而已。</p><p>再不可知那花的名字。但看那蓬松的花朵，应当像羽毛般轻。如果那时有阵山风吹来，那一扎白花会满天飞舞，景色会很漂亮的，对吧。</p><p>那样的话，也许我就会记得久一点——我只想记得久一点。</p><p><strong>2</strong></p><p>日子这般过下去确乎有些乏味。我向上级请求安排一个人和我一起工作。这样多一个人不影响摆烂还可以解解乏。那群人没同意，也许是鉴于站点的机密性。</p><p>让我百思不得其解的是，这个站点为什么会有如此之高的机密等级。我是总负责人，我明白这个庞大设施的完全情况：两个部分，军仓库与天文台，一个在山腰一个在山顶，而两部分的安保密钥都在我手上。前者是站点三成装备的存贮点，后者用于监视及观测天象类高空类异常活动，譬如“<a href="http://scp-wiki-cn.wikidot.com/scp-cn-1929">从天而降</a>”，仅此而已，我可以肯定没有更多秘密了。而我觉着最不可理喻的是天文台选址是于山这个市中心小土包，这里交通发达吵的要命光污染更是严重，这样低的海拔看空中什么东西和在地面上直接看真没什么区别——所以为什么天文台不建鼓山顶上？</p><p>然而没必要想太多。好奇心真的可以害死人的。</p><p><strong>03</strong></p><p>她的声音真的很好听。每一次我受了什么委屈，我掉下眼泪，她柔美的嗓音都会从我心底升起，轻轻愈合我内心的创痛。我长大了。高中。我所能达到的也只不过是那个大学，但这样的成绩在我这个高中也算极好的了。高三的生活繁忙得让人晕头转向。在这样繁重的学习压力下，我有好几天没叫她出现。周天晚上我终于得闲，于是我轻轻呼唤她一声。我轻柔的语言在心灵里流淌，在幽静的世间泛起空灵的回音，回荡，回荡。</p><p>但我的身边却依旧空无一物。</p><p>在？我又轻唤一声。</p><p>她慢吞吞地从台灯照不到的黑暗中走出来，我们没话找话聊了一会儿天就去睡觉了。</p><p>梦中也有一片安静的树林，我和她一步一步地于林荫间穿梭。每一个晚上，每一个一样的梦。她在梦中的双目有些哀怨，但只是一闪而过，让人不会在意的一闪而过。</p><p>你陪了我好久。对啊，你真的很好。……住在我心中，我的心不够广阔么?</p><p>你要去更大的地方？那我们还能见面吗？</p><p>……</p><p>不会的。不会这样。</p><p>消失？凭什么。凭什么一定要这样?</p><p>阳光不实在，但阳光是一切实在的源头。我喜欢阳光。她给我的温暖是实在的。林间没有小动物，因为这世上有枪，有人。有人的地方就会有影子。影子是光给的，但却是实在的，像深湖里的水，很沉。阳光不实在。那朵花的花瓣也是，风一吹过来就会洒落满天，但，但那个时候没有风。</p><p>有风的话就好了。</p><p>有风的话，景色就会很漂亮，让人印象深刻，我就会对此记得久一点。记得久一点了，我就可以去知道那朵花的名字。我想再和她走过那条上学的泥泞路，想看湖边飞扬的枫林。我想去拥抱阳光，但阳光从我全身浸过暖意而永远不能让我触摸。我忽然想起，太阳离地球有很远很远，光都要走八分二十秒。</p><p>听说月光也是阳光的一种。而且，月亮离地球很近。</p><p><strong>05</strong></p><p>我想没人喜欢看玛丽苏。因为她们单薄，千篇一律，她们柔弱，死气沉沉。没有什么好去欣赏的。</p><p>她是玛丽苏吗？玛丽苏一定要长得美丽，性格温柔，善良到有点圣母心，唱歌要动听，举止也要可爱优雅，做事还永远笨手笨脚，而且，所有玛丽苏的人生都是一帆风顺的，永远有人为她们付出，要么霸道总裁，要么有钱爸妈。总之，玛丽苏要幸福快乐地过一辈子。</p><p>如果她能成为玛丽苏就好了。她在那个世界可以幸福快乐过一辈子——在失去我后幸福快乐。</p><p>之后，在心底，在真实中，在我的愧疚与记忆里，我呼喊她。但她没有出现。我搁下键盘，从内心最僻静最隐洁的角落里，我听见她微弱而平静的一呼一吸。</p><p>不要忘却。</p><p>月光不是片状的，像轻纱一样摇曳。月亮比太阳柔和，不暖不冷，亮亮的，却不能给影子染上色彩。月光不实在，比阳光还不实在，但月光很美。我觉得白花在月下飞舞会比于阳光下更好看。会像雪，也可以像流星。</p><p>我也喜欢流星。</p><p>星光也不实在。而且它很远。但星光偶尔地可以流下泪，温柔其他万物不能温柔的宇宙。星星是眼睛。星星比月光和阳光都来得温柔。光是无声的。但星光道道下落无限时，夜空的弦音会响彻整座寰宇。如果这个时候，上学的路边吹过软软的山风，白花的花朵在一瞬间飞舞，摇曳的光洁与流星于黑夜中融为一体，那么那样的景色我会记得更久更久——直至永远也不会忘记。我从未见过陨星的旖旎，我从未见过那白花若蒲公英飘然的样子。但我喜欢。我喜欢不实在的美丽。</p><p>但实在是，那天刚下过雨，一丝风也没有，我不记得花的样子，更不晓得花的名字。我，我除了她的颜色除此之外我一无所知。</p><p>她从我的迷幻中诞生，伴随我哭泣与辛酸的人生一并成长；她是我苦难里泛起的泪水与花的融合；她是我从小到大攥在手心里不放的一点萤火；她是我在混沌凌乱的万事万物中逼迫而出的娇弱百合……是我身后的游荡之影拥抱着一片清灵山风……是我不曾感受过的温暖在伤疤上的自我愈合……是，她是，她是烟火燃尽后在风中旋起的依依残烟，随着明亮的夜滑向不可预知的空间……她是我的星空，我的眼眸，我的长梦，我的诉说。她曾在嫣红色的枫叶雨中轻轻漫步，她曾在漫山遍野的月光里合眸唱歌，她曾在山谷的湖泊旁欣赏自己不存在的倒影，她曾欢笑，曾哭泣，曾一直在我身边编织着光的轻柔童话。</p><p>但她从来没有倾诉过自己的故事。</p><p>也许她没有故事。</p><p>走吧。</p><p>幸福快乐，不论何时。</p><p>你也要有自己的故事。</p><p>你是从我梦里走出来的么？既然天下终无不散的宴席，你为什么要来我的心中焕发生命？</p><p>为什么每天不一定能看见日出日落，但黑夜一定会降临？</p><p>为什么你的来历，你的过去，你的未来，你的归途，你的灵魂，你的梦想，我，我都无法去在这个世间为你掌握?</p><p>日出的时候，日落就是一定的。阳光，星光，月光放在很远很远的那里都是星光。宇宙有一百多亿光年的半径，温暖却只能以三十万公里每秒的速度传播。总会有世世代代无光的角落。</p><p>但总要话下去。</p><p>你知道吗？即使那时刮起了山风，花瓣也不会飞起。花朵沾了水，湿沉粘稠得像水底的渊谷。没有可能，便谈不上什么遗憾。</p><p>不论怎样，你都不会知道那花的名字。不会知道的。</p><p><em>爱了，来了，送那世界一片流星，走了。</em></p><p>对我而言，这真的就足够了。</p><p><strong>3</strong></p><p>安全灯变红了。就在一刹那。十分钟前我收到天文台那边传来的三级警报。威胁不来自于地面，而来自于深空。“从天而降”，有意思。</p><p>本来我有机会随他们逃的，但我摆烂着睡着摆烂着醒了，威胁也就离我不到五百米远了。我思索着也逃不掉了索性接着躺着。在那一瞬间我还真有点佩服我自己摆烂到连命都摆掉。</p><p>我走出小屋，看着天空由黑紫转为刺目的金黄色。数十道十字流星以弧线快速向于山袭来。不知道从哪里刮来的山风，忽的一下掠过麦田，层层叠叠的麦浪卷起波澜，数支麦杆随着星落一并下降着飞舞。</p><p>天地间一片金黄色的绚烂星风。</p><p>警报等级在下降，下降到三级，四级，由红色变为橙色，因为大多金火流星正若烟火般快速消解。但警报又很快更尖锐地拉起——一级，灯变成闪烁的红紫色。有一颗半径三米大小的流星以二十米每秒的速度流过天空，向我直接而迅速地若雷电般刺来。同时，我手边的康德计数器数值开始快速崩塌瓦解，后来我得知，所有仓库里的设备与LDR稳定器全都报废了，整个广东省的时间都快了三秒钟。</p><p>但最后的降临不过为我的脸带来了一股凛冽的秋风。那颗流星的速度很快悠下来，最后悄声停在我面前。</p><p>满麦田汹涌的大风开始歇息，夜接着它千百万年的沉默不语。</p><p>光明一点点化为破碎的碎片消逝。</p><p>我终于第一次见过了她。</p><p>和善的微笑，金黄色的长发下于秋风中轻轻流苏。</p><p>像黑夜中落下的太阳。</p><p>像林间飞舞的柔光。</p><p>像清圆水面的粼粼。</p><p>像路边静息的蝴蝶。</p><p>像朝阳。像晚霞。</p><p>像星光和月亮暖起来的样子。</p><p>像是从二次元中走出来的人物。</p><p>一脸好奇无知而友好温柔地凝望着我。</p><p>而我愣了一下。</p><p>我第一步做的是和她拉开半米距离，第二步做的是用座机拨通中央区的紧急号码。</p><p>“这里是3号观察点，经度113.27, 纬度23.15，我是柊野，需要支援，立刻。”</p><p><img src="http://scpsandboxcn.wikidot.com/local--files/collab:mang/%E9%99%8D%E4%B8%B4.jpg" alt="%E9%99%8D%E4%B8%B4.jpg"></p><p>我的一切幻想的她从天空而降。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2024.1.9</title>
      <link href="/posts/6dffd417.html"/>
      <url>/posts/6dffd417.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错了" data-whm="这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="90ba9803a4e8a3d6a150e2acfc0067385019cf0c2a9100ab12cfbb5a06118d3f">5653520209469021811a79f50388cfb2c8d1d2de4203a519f55deced41e30c1155e922e8aa1ae97083c8b49c63f5ea42be1f3a2f90338fa8215ff39d35bec226e2201d46bab178b69c9727ce22fe9ea227dabd21ed6cd94f46d80b73b771e78d694f7d5a07a7f44abbaf85454469822b9f2174901dfd72d2107bbc309862e3e8bd9b386a7c0fdecc0f8aa72712898c08e2a792409090253cf0b39e258124eac9e11534f5a5e6d06561aa92fecb4b14aa14db5688ebf07a05151d2cb57d950bf809ba4c377b3d6eb9cb558a5356cf7c9fa78fe7ca7dd146d720dd6770f3b3048e85ddcf59f0c9553ba2a9ad4a4be6dd9eff331ef2fa008a3bd59db61af88585137a5be2e7806608fae1ae52e3a7bb82272db1668f6e0f118fe03371afc436a2ad3fc413e5edbbfeb8ff3ee4edfecfe7e2ae4ab4d2bad3813bd9117059242bddb4a11bc17d07204e30006b7df137ed2b62a2f865a342a744f484ac1c3c9659e63ded92ac43a98bc767694a6163067f08557c337f77d7b194d69f09afc1c027aa4a93d45d782244d01f1503b15725b64f4e65c354141fe81790ef59eb48d5d67a2eb8e1d7c767ca68b7557d1267d080c970f141c6a2e3b698cb8a5bfe0a186fa7d20792ee15208c28f6ffb21a877786cb7b82c8aaaeeb5ad1b756300efbc9c0cd87d093dc0bfe878f424b769d0d43bad9197ebc02891c93d17a49ce42c8cde9175c5fa9451969551d79b548174a9fae899ae21fdf0ad3e4cbcc6a06c6ce2ef57940862d50ae7565a1407c24f23a9f73057651ff3bbbb90f5a89c95001e5f2aba49e811d0a11f88389b86eb44b468c16d7caf9ec928a4a8f60215c252b94f5d2d434f34532c593f050152cd2ae562e410e2042b56ee6671d703b33d1af9ffe877dd8257854f0864f4aacd0f863267aa3f4580dacd672005403d11b9f0c2b6cd21cbc2b1c94026b9bc5f369dd053ebac64194b30c45d07711c071143be36ee3ba6d219343c209d8b4594ee45c999838242869e3a04709e1a308ce2c20a180160faf78682a7bd8001c90eb714448233eb5db8b6adfa55a053ff848da8e8f6994bb615d0ce93612bf7a720f70e1161e7b01be32c3d002bcd5b92a02b0395bab2400a447960aef3485fe0e6b42235aa9364be4ce98f543febdf0dc80ed311bd88bde760f8ff29e8e717387a245072f709e8d8d395f6c4f59f17f3d4966039c4032fdaa1e</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">输入密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 随记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2024跨年团建！</title>
      <link href="/posts/6585f8e6.html"/>
      <url>/posts/6585f8e6.html</url>
      
        <content type="html"><![CDATA[<h1 id="Only-in-battlefield"><a href="#Only-in-battlefield" class="headerlink" title="Only in battlefield!"></a>Only in battlefield!</h1><p>爷青回！</p><p><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b88b0e3d8a.jpg" alt="屏幕截图 2024-05-08 221358.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 战地 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 战地 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高中的一些照片</title>
      <link href="/posts/f0bcd065.html"/>
      <url>/posts/f0bcd065.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b8be36f87b.jpeg" alt="屏幕截图 2024-03-12 143323.jpeg"></p><p><a href="https://cloud.189.cn/web/share?code=jYfUFnAv6rQv（访问码：tne7）">https://cloud.189.cn/web/share?code=jYfUFnAv6rQv（访问码：tne7）</a></p><p>存档</p>]]></content>
      
      
      <categories>
          
          <category> 随记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/posts/3b4b656d.html"/>
      <url>/posts/3b4b656d.html</url>
      
        <content type="html"><![CDATA[<font color=#0c74d6 size=3 face="黑体"> </font>    <div id="aplayer-TaUoZSpm" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="4994307" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><h2 id="柊野"><a href="#柊野" class="headerlink" title="柊野    "></a>柊野    <kbd>Zhongye</kbd></h2><p><img src="https://free-img.400040.xyz/4/2024/06/24/66798838ec2b3.gif" alt="BOC2.gif"></p><ul><li><p>来自湖北</p></li><li><p>南漂中</p></li><li><p>目前在广州大学~</p></li><li><p>被各种琐事折磨的死去活来（倒</p></li><li><p>与期末决战中                              —— 2024-6-25</p></li></ul><h3 id="社交主页"><a href="#社交主页" class="headerlink" title="社交主页"></a>社交主页</h3><div class="tag link"><a class="link-card" title="----个人网站----" href="https://zhongye1.github.io"><div class="left"><img src="https://free-img.400040.xyz/4/2024/06/24/667980a580c1c.jpg"/></div><div class="right"><p class="text">----个人网站----</p><p class="url">https://zhongye1.github.io</p></div></a></div><div class="tag link"><a class="link-card" title="柊野的B站空间" href="https://space.bilibili.com/446805121"><div class="left"><img src="https://free-img.400040.xyz/4/2024/06/23/667840a0ab09e.jpg"/></div><div class="right"><p class="text">柊野的B站空间</p><p class="url">https://space.bilibili.com/446805121</p></div></a></div><div class="tag link"><a class="link-card" title="柊野的QQ空间" href="http://2760913192.qzone.qq.com"><div class="left"><img src="https://free-img.400040.xyz/4/2024/06/05/66600fe88ed26.jpg"/></div><div class="right"><p class="text">柊野的QQ空间</p><p class="url">http://2760913192.qzone.qq.com</p></div></a></div><ul><li><h2 id="QQ-2760913192"><a href="#QQ-2760913192" class="headerlink" title="QQ:  2760913192"></a>QQ:  2760913192</h2></li></ul><h3 id="此外，感谢网站框架的贡献者Fomalhaut🥝"><a href="#此外，感谢网站框架的贡献者Fomalhaut🥝" class="headerlink" title="此外，感谢网站框架的贡献者Fomalhaut🥝"></a>此外，感谢网站框架的贡献者Fomalhaut🥝</h3><div class="tag link"><a class="link-card" title="Fomalhaut🥝" href="https://www.fomal.cc/"><div class="left"><img src="https://sourcebucket.s3.bitiful.net/img/avatar.webp"/></div><div class="right"><p class="text">Fomalhaut🥝</p><p class="url">https://www.fomal.cc/</p></div></a></div><p>-</p><p>我的博客摸索，创建和修改至今，先后更改和替换，写文章写css学js写md，接触开发和前端的基础知识</p><p>头脑一热的想法发展到现在</p><p>然而博客是web2时代的产物，看的人注定是少数</p><p>但我还是会坚持更新</p><psw>（笑</psw><p>-</p><p>-</p><p>-</p><p>-</p><p>生活还是要继续的，共勉!</p><p>登高峰乃见云平</p><p>-</p><p>-</p><p>-</p><p>-</p><p>-</p><p><img src="https://free-img.400040.xyz/4/2024/06/24/66797b7b2ed66.gif" alt="202406242144.gif"></p><psw>波奇酱w</psw><script src="https://giscus.app/client.js"        data-repo="Zhongye1/Zhongye1.github.io"        data-repo-id="R_kgDOKWw6mw"        data-category-id="DIC_kwDOKWw6m84Cb_Up"        data-mapping="pathname"        data-strict="0"        data-reactions-enabled="1"        data-emit-metadata="0"        data-input-position="bottom"        data-theme="preferred_color_scheme"        data-lang="zh-CN"        crossorigin="anonymous"        async></script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>对博客文档进行加密（密码：zhongye）</title>
      <link href="/posts/68a0f465.html"/>
      <url>/posts/68a0f465.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="你妈." data-whm="...">  <script id="hbeData" type="hbeData" data-hmacdigest="999c2937ceb0c83615412f3ccb360b2e3cf579652cdd7d0a502d61b8c3646b87"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">密码给了啊啊啊啊.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GITHUB宝藏项目</title>
      <link href="/posts/e9b6e2e1.html"/>
      <url>/posts/e9b6e2e1.html</url>
      
        <content type="html"><![CDATA[<p>Awesome GitHub Repo 会收集整理 GitHub 上高质量、有趣的开源项目，并将他们进行归类。值得注意的是，不是简单的按照编程语言来分类，而是按照更有趣的分类方式，比如：有趣项目、沙雕项目、实战项目、学习项目、实用工具等等。同时欢迎通过 Pull Request 或者 issues 给我们推荐优秀好玩的开源项目。</p><p><strong>欢迎订阅每日推送</strong></p><p>微信公众号：<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247509655&amp;idx=1&amp;sn=a0879e64562cfd2b3114d5cdd09b0b20&amp;chksm=f9a2755eced5fc4822404fae1bd71b611fe77419cc8ee8ee52f9bb2cafaf11f0f42cc183876f&amp;token=822393006&amp;lang=zh_CN#rd">@逛逛GitHub</a>    新浪微博：<a href="https://weibo.com/u/7486950118">@逛逛GitHub</a>      知乎：<a href="https://www.zhihu.com/people/riao-11">@逛逛GitHub</a></p><p><strong>说明</strong></p><p> <a href="https://mrbird.cc"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a> 表示该项目对应的网站或者博客；</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22492ced5ad84397b04927167a3b92841c95fecb7424a9a0f5e91aae24e2c59d681f2ea2d&amp;idx=1&amp;mid=2247497563&amp;scene=21&amp;sn=bbc1d4f23b6fc15d7a14641f746cfe57#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> 表示在公众号发布的项目简介；</p><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li><p><a href="#awesome-github-repo">Awesome GitHub Reo</a></p></li><li><p><a href="#目录">目录</a></p></li><li><p>好玩项目</p><ul><li><a href="#黑科技">黑科技</a></li><li><a href="#沙雕项目">沙雕项目</a></li><li><a href="#摸鱼神器">摸鱼神器</a></li><li><a href="#宝藏项目">宝藏项目</a></li><li><a href="#开源游戏">开源游戏</a></li></ul></li><li><p>实战项目</p><ul><li><a href="#前后端分离项目">前后端分离项目</a></li><li><a href="#毕业设计实战项目">毕业设计实战项目</a></li><li><a href="#高仿app项目">高仿 App 项目</a></li><li><a href="#vue实战项目">Vue 实战项目</a></li><li><a href="#小程序实战项目">小程序实战项目</a></li><li><a href="#springboot实战项目">Spring Boot 实战项目</a></li><li><a href="#管理系统">管理系统</a></li><li><a href="#可视化项目">可视化项目</a></li><li><a href="#低代码项目">低代码项目</a></li><li><a href="#人脸识别项目">人脸识别项目</a></li></ul></li><li><p>开源工具</p><ul><li><a href="#好用工具">好用工具</a></li><li><a href="#docker工具">Docker 工具</a></li><li><a href="#命令行工具">命令行工具</a></li><li><a href="#效率工具">效率工具</a></li></ul></li><li><p>学习项目</p><ul><li><a href="#学习项目">学习项目</a></li><li><a href="#学习idea">学习 IDEA</a></li><li><a href="#算法项目">算法项目</a></li><li><a href="#python资源">Python 资源</a></li><li><a href="#电子书籍">电子书籍</a></li><li><a href="#linux学习项目">Linux 学习项目</a></li><li><a href="#计算机考研项目">计算机考研项目</a></li></ul></li><li><p>大厂开源</p><ul><li><a href="#百度开源">百度开源</a></li><li><a href="#腾讯开源">腾讯开源</a></li><li><a href="#阿里开源">阿里开源</a></li></ul></li><li><p><a href="https://github.com/jaywcjlove/awesome-mac/blob/master/README-zh.md#license">License</a></p></li></ul><h2 id="好玩项目"><a href="#好玩项目" class="headerlink" title="好玩项目"></a>好玩项目</h2><h3 id="黑科技"><a href="#黑科技" class="headerlink" title="黑科技"></a>黑科技</h3><p>盘点 GitHub 上堪称黑科技的开源项目，请托起你的下巴不要惊掉。</p><ul><li><a href="https://github.com/adamian98/pulse">PULSE</a> - 该开源项目可以通过给图片增加像素点来实现去马赛克或高清化。<a href="http://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1ccaeced645b83f416eff09d401ea6f0743c9af309909391af350593e8dd39e3258c1395d&amp;idx=1&amp;mid=2247491431&amp;scene=21&amp;sn=0741ecb86a597fa49d0adaac62d8e8ea#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/beurtschipper/Depix">Depix</a> - 给打了马赛克的文字去码。<a href="http://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1ccaeced645b83f416eff09d401ea6f0743c9af309909391af350593e8dd39e3258c1395d&amp;idx=1&amp;mid=2247491431&amp;scene=21&amp;sn=0741ecb86a597fa49d0adaac62d8e8ea#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/thunil/TecoGAN">TecoGAN</a> - 给视频去马赛克或者进行超分辨率。<a href="http://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1ccaeced645b83f416eff09d401ea6f0743c9af309909391af350593e8dd39e3258c1395d&amp;idx=1&amp;mid=2247491431&amp;scene=21&amp;sn=0741ecb86a597fa49d0adaac62d8e8ea#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/CorentinJ/Real-Time-Voice-Cloning">Real-Time-Voice-Cloning</a> - 只需要你 5 秒钟的语音，就能生成你说出来的任何话，细思极恐。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22901ced5a017e5e32bb51b8650dd7063416119552a676c34be4a94302073c196666b4097&amp;idx=1&amp;mid=2247498440&amp;scene=21&amp;sn=19b48002eeeed367f70270d7652f9203#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/vijishmadhavan/SkinDeep">SkinDeep</a> - 黑科技一键去除图片、视频中的纹身。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22baaced5a2bc1a32ca9d7354aafe880f8a6ca211119869c8ec68e554bef9776de8fe9081&amp;idx=1&amp;mid=2247497827&amp;scene=21&amp;sn=ba59a1acda4978b8a007dc57e1a31ec7#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/orpatashnik/StyleCLIP">StyleCLIP</a> - AI自动 P图，见没见过扫把头的马斯克？<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22baaced5a2bc1a32ca9d7354aafe880f8a6ca211119869c8ec68e554bef9776de8fe9081&amp;idx=1&amp;mid=2247497827&amp;scene=21&amp;sn=ba59a1acda4978b8a007dc57e1a31ec7#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/DavidBuchanan314/tweetable-polyglot-png">polyglot-png</a> - 明明下载的是一张图片，只需修改后缀名，图片就变成了一首歌，一串代码。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a226f6ced5afe0f6847f72b5535078cc7599f065a0a3e8d346c78dd3ed7a73188f19b421db&amp;idx=1&amp;mid=2247497023&amp;scene=21&amp;sn=29ef17b8158e63b04399a24afa9d7271#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/FengQuanLi/ResnetGPT">ResnetGPT</a> - 教你训练一个模型，让人工智能玩王者荣耀。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22294ced5ab828547cb4492937c72a5f49e770a742120a4b04acf6083add861eeb85783d5&amp;idx=1&amp;mid=2247496029&amp;scene=21&amp;sn=9717ff7ca6f406bad1c8414aa004589b#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/wwy2018/intelligent-uavpath-planning-simulation-system-S">intelligent-uavpath-planning</a> - 这个项目是一个智能无人机路径规划仿真系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a222c7ced5abd1ad729e28809295e75d1efe78d06c5f1e9cb93cd7df1a0c439caaa652bb86&amp;idx=1&amp;mid=2247495950&amp;scene=21&amp;sn=3fe6d5a71730ba0a0dfe3ac101318911#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/EssayKillerBrain/EssayKiller_V2">EssayKiller_V2</a> - 一个人利用三个月，开发了一个会写作文的人工智能。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1db92ced65284b5c835bc27793655e787dfd58ca67c19e080f1c207af9dd29e4c526f7129&amp;idx=1&amp;mid=2247485531&amp;scene=21&amp;sn=446c10dd3f58f996a97d00905d1c6934#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/lllyasviel/style2paints">style2paints</a> - 不需要安装任何环境、做任何配置，下载然后双击，就可以给线描图画上色。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2278dced5ae9b650d1aa1aaa72f042453cea48186a739a7a88a37e95d629efe653eb609b8&amp;idx=1&amp;mid=2247496772&amp;scene=21&amp;sn=638c09b730f46f0d39191e681f8159a1#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/BeyondDimension/SteamTools"></a>Steam++ 是一个开源跨平台的多功能 Steam 工具箱，此工具的大部分功能都是需要下载安装 Steam 才能使用。功能包括网络加速、脚本配置、账号切换、库存管理、自动挂卡、游戏工具，比如强制游戏窗口使用无边框窗口化。</li></ul><h3 id="沙雕项目"><a href="#沙雕项目" class="headerlink" title="沙雕项目"></a>沙雕项目</h3><p>盘点 GitHub 上的沙雕项目，这些项目可能会让你笑的合不拢嘴。</p><ul><li><a href="https://github.com/s-unscrupulous/idea_seat">idea_seat</a> - 程序员的女朋友开发的一款防猝死 IDEA 插件。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23d12ced5b404e6fc4a758e3b07c89d7a45f9f5ad7a04588487d821fd3e75f19b693dc6c6&amp;idx=1&amp;mid=2247495387&amp;scene=21&amp;sn=2c63281a73d37d4a431c48cf2f08e3fa#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/darknessomi/musicbox">musicbox</a> - 符合程序员气质的命令行版本网易云音乐。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1c4feced64de8403fe6c1df8ec5d12de8055df88c5c61f7ada49268fb4eac2916c94946b1&amp;idx=1&amp;mid=2247489335&amp;scene=21&amp;sn=7670e0a70d76b320a15724f033a77513#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/nvbn/thefuck">thefuck</a> - 敲错命令时大喊一声 fuck ，并输入 fuck 命令，刚刚键入的错误命令就会自动修正。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a226dcced5afca55e22e273c9bee7df94403d21e4edb2e142b5c6591613736691392d90e68&amp;idx=1&amp;mid=2247496981&amp;scene=21&amp;sn=a70e54f093ab16cc365c29c559c620f1#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/maebert/themostdangerouswritingapp">dangerouswriting</a> - 你要一直写，因为如果停下来就自动删稿件。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22719ced5ae0fb17c82cdbabca8dc44fbf6eb1548aaea1f8065f042baa6ca00f2fc9a64f2&amp;idx=1&amp;mid=2247496912&amp;scene=21&amp;sn=ea8be345cfde59f9e732e25ac48e710a#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/dcalsky/zzkia">zzkia</a> - 还记得那条诺基亚短信吗？这个开源项目能帮你生成。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22775ced5ae6349067ec38afe13fba7fbdde1eb794e36bcc1734bf9d004834aa9addba515&amp;idx=1&amp;mid=2247496892&amp;scene=21&amp;sn=40f69261864b8a93d86e122bce078035#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/lacymorrow/crossover">crossover</a> - FPS 游戏中，狙是没有准星的。使用这个开源项目可以在你屏幕上显示一个准星，堪称物理外挂。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22076ced5a9606d38d337ff0e6b136c824dafae6a5192dfeb67a46ba394ce8a76eb8df02e&amp;idx=1&amp;mid=2247496639&amp;scene=21&amp;sn=e15b65ddf650da3097ffe813f8a8d4ca#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="github.com/Jiangzemin1926/Goldflower">Goldflower</a> - 这个项目模拟了大量的炸金花对局，生成了一个胜利表，根据当前对局人数和你手中的牌，给你一个胜率。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a220acced5a9ba6b85eba750fa41c4635827c75c3f59e06cae7dfb6f69777ab6ab837688ba&amp;idx=1&amp;mid=2247496549&amp;scene=21&amp;sn=c8a3d9992c2a618273da9122b5335e9c#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/RayWangQvQ/BiliBiliTool">BiliBiliTool</a> - 描BiliBiliTool 是一个 B 站自动执行任务的工具，帮助我们轻松升级会员到 Lv6 。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1c1a9ced648bfcb12a66c874666de0bc020434bbd8e8b0e9f730546ca1a2471d0e1eafacc&amp;idx=1&amp;mid=2247488096&amp;scene=21&amp;sn=efb7daccf9d472ed890839c87b79848e#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/zhaoolee/ChineseBQB">ChineseBQB</a> - 是一个表情包博物馆，中国表情包大集合，堪称 GitHub 最有毒的仓库。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247498844&amp;idx=2&amp;sn=488bf3391a9b7a260099b8d7e9e6bf7a&amp;chksm=f9a22f95ced5a683bc20dd13603de2b6b169b72b8dca47bd100cbb45c354b46e82343797f5ad&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/xtyxtyx/sorry">sorry</a> - 表情包生成器，能够生成类似于下方这样的 GIF 表情包。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247498844&amp;idx=2&amp;sn=488bf3391a9b7a260099b8d7e9e6bf7a&amp;chksm=f9a22f95ced5a683bc20dd13603de2b6b169b72b8dca47bd100cbb45c354b46e82343797f5ad&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Kaiyiwing/qwerty-learner">qwerty-learner</a> - 为键盘工作者设计的单词记忆与英语肌肉记忆锻炼软件，针对部分人群输入英语时「提笔忘字」的现象，开源了这个软件。</li></ul><h3 id="摸鱼神器"><a href="#摸鱼神器" class="headerlink" title="摸鱼神器"></a>摸鱼神器</h3><ul><li><a href="https://github.com/svenstaro/genact">genact</a> - 该神器会显示一些多任务场景，让看到你电脑屏幕的人都误以为你在 Coding。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22463ced5ad753dc826e9eb975a5585068c8275293cd2c7835f56cbd619cb7622c849749f&amp;idx=2&amp;mid=2247497642&amp;scene=21&amp;sn=ec8f2d7a4f03a40d3186e23dadfb5da3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/tangxiangmin/cocos-big-watermelon">watermelon</a> - 前段时间大火的游戏合成大西瓜，有人复现了。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2208fced5a9993422770119081c252a09d9ab168d41544c4957ce56b72627abb46b537afe&amp;idx=1&amp;mid=2247496518&amp;scene=21&amp;sn=86125e12de8d2df77bf255f44da7287d#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/ainilili/ratel">ratel</a> - 摸鱼神器：在命令行中玩斗地主。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1da0dced6531b8def326b7357f57ee4172b404484d5ad98aa211e3212f5c4f6a7a6a7a3f3&amp;idx=1&amp;mid=2247485892&amp;scene=21&amp;sn=20bac465c0c16b6f8684844ddd8b3865#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/yisier/thief-book-ideaVscode">thief-book-ideaVscode</a> - 我在 IDEA 上看小说，摸鱼神器神器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247501135&amp;idx=1&amp;sn=a1c6bc746fa01dddb143971d2bcd3f90&amp;chksm=f9a21686ced59f901f0f628574360b31779d48ad6689656996272e2f0ff1d2651ce84c696416&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/niudai/VSCode-Zhihu">VSCode-Zhihu</a> - 用 VSCode 看知乎的摸鱼神器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247501135&amp;idx=1&amp;sn=a1c6bc746fa01dddb143971d2bcd3f90&amp;chksm=f9a21686ced59f901f0f628574360b31779d48ad6689656996272e2f0ff1d2651ce84c696416&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/TimothyYe/glance">glance</a> - 用命令行看小说的摸鱼神器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247501135&amp;idx=1&amp;sn=a1c6bc746fa01dddb143971d2bcd3f90&amp;chksm=f9a21686ced59f901f0f628574360b31779d48ad6689656996272e2f0ff1d2651ce84c696416&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/cteamx/Thief">Thief</a> - 这是一款功能强大的跨平台摸鱼。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247501135&amp;idx=1&amp;sn=a1c6bc746fa01dddb143971d2bcd3f90&amp;chksm=f9a21686ced59f901f0f628574360b31779d48ad6689656996272e2f0ff1d2651ce84c696416&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/epidemian/snake">snake</a> - 一个可以在地址栏玩贪吃蛇的摸鱼神器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247501135&amp;idx=1&amp;sn=a1c6bc746fa01dddb143971d2bcd3f90&amp;chksm=f9a21686ced59f901f0f628574360b31779d48ad6689656996272e2f0ff1d2651ce84c696416&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/a8m/play">play</a> - 一个帮助你在命令行玩俄罗斯方块的神器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247501135&amp;idx=1&amp;sn=a1c6bc746fa01dddb143971d2bcd3f90&amp;chksm=f9a21686ced59f901f0f628574360b31779d48ad6689656996272e2f0ff1d2651ce84c696416&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/ainilili/ratel">ratel</a> - 一个可以在命令行玩斗地主的摸鱼神器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247501135&amp;idx=1&amp;sn=a1c6bc746fa01dddb143971d2bcd3f90&amp;chksm=f9a21686ced59f901f0f628574360b31779d48ad6689656996272e2f0ff1d2651ce84c696416&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/skywind3000/preserve-cd">preserve-cd</a> - dos 游戏大合集。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247501135&amp;idx=1&amp;sn=a1c6bc746fa01dddb143971d2bcd3f90&amp;chksm=f9a21686ced59f901f0f628574360b31779d48ad6689656996272e2f0ff1d2651ce84c696416&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/zy445566/vscode-plugin-swimming">vscode-plugin-swimming</a> - 写完代码之后可以重新把代码写一遍，摸鱼神器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247501135&amp;idx=1&amp;sn=a1c6bc746fa01dddb143971d2bcd3f90&amp;chksm=f9a21686ced59f901f0f628574360b31779d48ad6689656996272e2f0ff1d2651ce84c696416&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/wuyr/intellij-media-player">intellij-media-player</a> - 在编辑器里看电影，尝试过没？<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247501135&amp;idx=1&amp;sn=a1c6bc746fa01dddb143971d2bcd3f90&amp;chksm=f9a21686ced59f901f0f628574360b31779d48ad6689656996272e2f0ff1d2651ce84c696416&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Hironsan/BossSensor">BossSensor</a> - 终极摸鱼神器：通过AI人脸识别，老板来了就切换桌面。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247501135&amp;idx=1&amp;sn=a1c6bc746fa01dddb143971d2bcd3f90&amp;chksm=f9a21686ced59f901f0f628574360b31779d48ad6689656996272e2f0ff1d2651ce84c696416&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/YaoZeyuan/zhihuhelp">zhihuhelp</a> - 项目基于知乎现有接口+TypeScript 构建，为知友提供方便的,以供自己阅读/自身结集整理为目的的将知乎内容转为 Epub 电子书的途径。</li></ul><h3 id="宝藏项目"><a href="#宝藏项目" class="headerlink" title="宝藏项目"></a>宝藏项目</h3><ul><li><a href="https://github.com/Ryujinx/Ryujinx">Ryujinx</a> - 教你如何在 PC 上玩 Switch。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22af8ced5a3ee05c0cdc2eff4ada9d0a1e3f0ae5213e8cf05932304680c4f3c4d0a010474&amp;idx=1&amp;mid=2247498033&amp;scene=21&amp;sn=dcbf6900777a4578ef27002e9ac3b687#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Pzoom522/HistSumm">HistSumm</a> - 明朝版的今日头条，你见过吗？。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2270aced5ae1c946b66147693c7c24af1e92291a706c75511c2b6bf264a3f29528af9c2d3&amp;idx=1&amp;mid=2247496899&amp;scene=21&amp;sn=4ae17bcc73dcd93475337e2c3088562f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/skywind3000/preserve-cd">preserve-cd</a> - 绝版游戏保护计划：把一些经典小游戏刻录永久保存。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22754ced5ae42caec5a5826571e50d2297193653f6145638bd9b2399d92bbec777915ee38&amp;idx=1&amp;mid=2247496861&amp;scene=21&amp;sn=153670b7064396ec4523fc4bf6fa9596#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/rauchg/wifi-password">wifi-password</a> - 用这个工具可以快速获取你当前连接 WIFI 的密码。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22168ced5a87e1d7e45558bd62171e44588e75996ffe6a4117fbaf72d1509586678c86690&amp;idx=1&amp;mid=2247496353&amp;scene=21&amp;sn=0f663e8f1f17be2952c6360e33fad6d7#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/coder2gwy/coder2gwy">coder2gwy</a> - 一份程序员考公指南冲上热榜，几天时间不到，被标星7.3k。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23d81ced5b497c50f64aa20c9e297ff3ba5db0cddae9b089242cb619de58e4b80d7e6fe13&amp;idx=1&amp;mid=2247495240&amp;scene=21&amp;sn=c4efb18f38cdd89270d97b9873826ca2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="github.com/formulahendry/955.WLB">955.WLB</a> - 955 不加班的公司名单，我看了看，加上个人了解，信息还算准确，但大多都是外企。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23dc7ced5b4d123299b95701d424a73ba3edfa03c9f726fc33b9d5b3955dc7ed185e2505f&amp;idx=1&amp;mid=2247495182&amp;scene=21&amp;sn=cf697ace347f1b425b92a1c69cb215df#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/ayuer/shanghai_house_knowledge">shanghai_house_knowledge</a> - 一位程序员整理了一份「上海购房宝典」在 GitHub 开源。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23fdbced5b6cd3af92d467ccb6746558c1352ab205a5312da565571598ba367978e425fbd&amp;idx=1&amp;mid=2247494674&amp;scene=21&amp;sn=9d2274b706a9459cb29ed4853fef003e#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/shengxinjing/programmer-job-blacklist">job-blacklist</a> - 程序员找工作黑名单，换工作和当技术合伙人需谨慎。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1c453ced64d45c7208ddbf8058360271c927565f66248cb8246b0fa30fc11593c2ceeccda&amp;idx=1&amp;mid=2247489434&amp;scene=21&amp;sn=8b193c2c1ef1ea96a3f84b143d213810#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/florinpop17/app-ideas">app-ideas</a> - 一个项目列表，该列表会根据开发者的水平提供一些练手项目，帮助你提升编程技巧。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a224eaced5adfcbf3ba0a1ded31d9dd11ed8b4d412d973ea40c1585a329cf10d6d38fc9d86&amp;idx=1&amp;mid=2247497507&amp;scene=21&amp;sn=70cde880b15a8ba1323223d50069a6cb#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/GorvGoyl/Clone-Wars">Clone-Wars</a> - 该项目收集了世界上知名网站的源码，包括：谷歌、Youtube、IMDB等等。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/endlesshh/idCardCv">idCardCv</a> - Java 身份证号码识别系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1dba0ced652b683dbea88fa026232ccc0d3a1d1326f25fdb9574386d23a3259b647d308b7&amp;idx=1&amp;mid=2247485545&amp;scene=21&amp;sn=1e54691f815f1d1d4dde905613a82ad2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/vnpy/vnpy">vnpy</a> - VeighNa 是一套基于 Python 的开源量化交易系统开发框架，在开源社区持续不断的贡献下一步步成长为多功能量化交易平台，自发布以来已经积累了众多来自金融机构或相关领域的用户，包括私募基金、证券公司、期货公司等。</li><li><a href="https://github.com/Sycnex/Windows10Debloater">Windows10Debloater</a> - 一个脚本用来删除 Windows 预安装的不必要的应用程序。</li></ul><h3 id="开源游戏"><a href="#开源游戏" class="headerlink" title="开源游戏"></a>开源游戏</h3><ul><li><a href="https://github.com/OpenDiablo2/OpenDiablo2">OpenDiablo2</a> - 国外大神复刻了暗黑破坏神2。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d474ced65d6205cc37efb6e1d2f57a4e4747fcfe147dc00a73430dd03b10693f6e0c6e56&amp;idx=1&amp;mid=2247485373&amp;scene=21&amp;sn=33df61e684fb0c68e60c11b530337b41#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/marblexu/PythonPlantsVsZombies">PlantsVsZombies</a> - 开源的《植物大战僵尸》。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d533ced65c25d9e3c1b3410cb0ee5954efdeace0b34079cff774bad88a1840438f13a06e&amp;idx=1&amp;mid=2247485178&amp;scene=21&amp;sn=15854bb7a53aad264d2f97ce2c5818fa#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/ainilili/ratel">ratel</a> - 摸鱼神器：在命令行中玩斗地主。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1da0dced6531b8def326b7357f57ee4172b404484d5ad98aa211e3212f5c4f6a7a6a7a3f3&amp;idx=1&amp;mid=2247485892&amp;scene=21&amp;sn=20bac465c0c16b6f8684844ddd8b3865#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/skywind3000/preserve-cd">preserve-cd</a> - 绝版游戏保护计划：把一些经典小游戏刻录永久保存。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22754ced5ae42caec5a5826571e50d2297193653f6145638bd9b2399d92bbec777915ee38&amp;idx=1&amp;mid=2247496861&amp;scene=21&amp;sn=153670b7064396ec4523fc4bf6fa9596#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/tangxiangmin/cocos-big-watermelon">watermelon</a> - 前段时间大火的游戏合成大西瓜，有人复现了。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2208fced5a9993422770119081c252a09d9ab168d41544c4957ce56b72627abb46b537afe&amp;idx=1&amp;mid=2247496518&amp;scene=21&amp;sn=86125e12de8d2df77bf255f44da7287d#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h2 id="实战项目"><a href="#实战项目" class="headerlink" title="实战项目"></a>实战项目</h2><h3 id="前后端分离项目"><a href="#前后端分离项目" class="headerlink" title="前后端分离项目"></a>前后端分离项目</h3><ul><li><a href="https://github.com/lenve/vhr">vhr</a> - 微人事是一个前后端分离的人力资源管理系统，项目采用 SpringBoot+Vue 开发。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22492ced5ad84397b04927167a3b92841c95fecb7424a9a0f5e91aae24e2c59d681f2ea2d&amp;idx=1&amp;mid=2247497563&amp;scene=21&amp;sn=bbc1d4f23b6fc15d7a14641f746cfe57#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/MarkerHub/vueblog">vueblog</a> - 前后端分离的博客项目项目，适合没有前后端分离开发经验的朋友。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2260eced5af18b68238a82d54f1733d1d02b3f3ea2a018d880415ade8827ef8a65407af8e&amp;idx=1&amp;mid=2247497159&amp;scene=21&amp;sn=16a7d87fc81ce88672f8d0c2993c1d56#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/lenve/VBlog">VBlog</a> - V部落博客管理平台。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2260eced5af18b68238a82d54f1733d1d02b3f3ea2a018d880415ade8827ef8a65407af8e&amp;idx=1&amp;mid=2247497159&amp;scene=21&amp;sn=16a7d87fc81ce88672f8d0c2993c1d56#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/sqmax/springboot-project">springboot-project</a> - 基于微信服务号平台的点餐系统，前后端完全分离。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2260eced5af18b68238a82d54f1733d1d02b3f3ea2a018d880415ade8827ef8a65407af8e&amp;idx=1&amp;mid=2247497159&amp;scene=21&amp;sn=16a7d87fc81ce88672f8d0c2993c1d56#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/elunez/eladmin">eladmin</a> - 一个界面美观基于前后端分离的后台管理系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2260eced5af18b68238a82d54f1733d1d02b3f3ea2a018d880415ade8827ef8a65407af8e&amp;idx=1&amp;mid=2247497159&amp;scene=21&amp;sn=16a7d87fc81ce88672f8d0c2993c1d56#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/mumu-osc/NiceFish">NiceFish</a> - 美人鱼阅读网站，采用前后端分离结构。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2260eced5af18b68238a82d54f1733d1d02b3f3ea2a018d880415ade8827ef8a65407af8e&amp;idx=1&amp;mid=2247497159&amp;scene=21&amp;sn=16a7d87fc81ce88672f8d0c2993c1d56#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/newbee-ltd/newbee-mall">newbee-mall</a> - 前后端分离开发的商城项目，分为商城系统、管理系统、前台系统等。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23abeced5b3a8c9bd35b86f504b9700648cfd748d4f3845b566e48e0b17c5b5785f588647&amp;idx=1&amp;mid=2247494007&amp;scene=21&amp;sn=e10c1f936abe2d16653bb4d7e3030050#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="毕业设计实战项目"><a href="#毕业设计实战项目" class="headerlink" title="毕业设计实战项目"></a>毕业设计实战项目</h3><ul><li><a href="https://github.com/mindskip/xzs">xzs</a> - 一款 Spring 技术栈 + Vue.js 的前后端分离的考试系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="github.com/19920625lsg/spring-boot-online-exam">spring-boot-online-exam</a> - 在线考试系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="gitee.com/microapp/flash-waimai">flash-waimai</a> - 一个完整的外卖系统，包括手机端，后台管理。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/bysj2021/cinema">cinema</a> - 基于 SSM 的电影院选座系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/RAOE/show-videos">show-videos</a> - 短视频社交小程序，系统包括用户端和后台管理端。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/yukilzw/dy_flutter">dy_flutter</a> - flutter 重构的斗鱼直播 APP。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/20100507/emotional_analysis">emotional_analysis</a> - 基于机器学习的商品评论情感分析。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/pengLP/sina_analysis">sina_analysis</a> - 利用微博热点话题舆情聚类分析。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/csmliu/STGAN">STGAN</a> - 可以对生成的人脸进行操纵，比如眼镜、胡子、发型等。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/junyanz/CycleGAN">CycleGAN</a> - 图像风格迁移。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/LuckyZXL2016/Movie_Recommend">Movie_Recommend</a> - 基于大数据过滤引擎的电影推荐系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/luochana/News_recommend">News_recommend</a> - 基于大数据计算引擎的新闻推荐系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/geekyouth/SZT-bigdata">SZT-bigdata</a> - 通过大数据技术角度来研究深圳地铁客运能力。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/LuckyZXL2016/News_Spark">News_Spark</a> - 基于 Spark2.x 新闻网大数据实时分析可视化系统项目。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="高仿App项目"><a href="#高仿App项目" class="headerlink" title="高仿App项目"></a>高仿App项目</h3><ul><li><a href="https://github.com/xujiyou/zhihu-flutter">zhihu-flutter</a> - 高仿知乎。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/tbl00c/TLChat">TLChat</a> - 高仿微信。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/zxuqian/html-css-examples/tree/master/31-05-wechat-emoji-effect">wechat-emoji-effect</a> - 高仿微信 8.0 炸弹特效。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/zwStar/vue-meituan">vue-meituan</a> - 高仿美团外卖点餐。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/chaychan/TouTiao">TouTiao</a> - 高仿今日头条。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/sanfengliao/vue-juejin">vue-juejin</a> - 高仿掘金。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/sam408130/DSLolita">DSLolita</a> - 高仿微博 iOS  版本。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/wenmingvs/WeiBo">WeiBo</a> - 高仿微博 Android 版本。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/sshiqiao/douyin-ios-objectc">douyin-ios-objectc</a> - 高仿抖音 iOS  版本。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/18380438200/Tiktok">Tiktok</a> - 高仿 Tiktok。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/aslanyanhaik/youtube-iOS">youtube-iOS</a> - 高仿 YouTube ios 版本。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/TeamNewPipe/NewPi">NewPi</a> - 高仿 YouTube Android 版本。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/yukilzw/dy_flutter">dy_flutter</a> - 高仿斗鱼直播 App。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/boyan01/flutter-netease-music">flutter-netease-music</a> - 高仿网易云音乐。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/code-mcx/react-bilibili">react-bilibili</a> - 高仿 B 站。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/MichaelHuyp/Bilibili_Wuxianda">Bilibili_Wuxianda</a> - 高仿 B站 iOS 版本。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/HotBitmapGG/bilibili-android-client">bilibili-android-client</a> - 高仿 B 站 Android 版本。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="Vue实战项目"><a href="#Vue实战项目" class="headerlink" title="Vue实战项目"></a>Vue实战项目</h3><ul><li><a href="https://github.com/PanJiaChen/vue-element-admin">vue-element-admin</a> - 堪称接私活利器，是一个组件丰富的前端页面模板。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/vuejs/awesome-vue">awesome-vue</a> - 如果你打算学习 Vue，找一些 Vue 的学习资料或者示例，这个项目不能错过。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/ElemeFE/element">element</a> - 为开发者、设计师和产品经理准备的开源组件库，旨在快速搭建页面。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/hoppscotch/hoppscotch">hoppscotch</a> - 帮助你更快地创建请求，节省开发时间，早下班。。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/salomonelli/best-resume-ever">best-resume-ever</a> - 这个是一个简历项目，几行代码助你快速构建美观的简历。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Armour/vue-typescript-admin-template">admin-template</a> - 非常美观的模板，具有 TypeScript 支持。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/geongeorge/i-hate-regex">i-hate-regex</a> - 正则表达式的可视化表示。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/lanux/Vue-Admin">Vue-Admin</a> - 基于 Vue2、element ui 的后台管理系统 Demo。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/elunez/eladmin">eladmin</a> - 一个基于 Spring Boot、Vue 的前后端分离的后台管理系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22492ced5ad84397b04927167a3b92841c95fecb7424a9a0f5e91aae24e2c59d681f2ea2d&amp;idx=1&amp;mid=2247497563&amp;scene=21&amp;sn=bbc1d4f23b6fc15d7a14641f746cfe57#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://el-admin.xin"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li></ul><h3 id="小程序实战项目"><a href="#小程序实战项目" class="headerlink" title="小程序实战项目"></a>小程序实战项目</h3><ul><li><a href="https://gitee.com/fuyang_lipengjun/platform">platform</a> - 实用的微信小程序商城项目。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2234fced5aa59a73be6bc5d894920b67485a84d2c8996300b8a648e36098ee17c9f379424&amp;idx=1&amp;mid=2247495814&amp;scene=21&amp;sn=af0aa7214825fd3acfd6fe103e0b0d63#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/fanchaoo/netease-cloud-music-community">netease-cloud-music-community</a> - 参照网易云音乐云村做的小程序社区。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1dacdced653db91bb860841b272b8c868e02ece6b08c6be1813c22a10af363fb74b308a7a&amp;idx=1&amp;mid=2247485700&amp;scene=21&amp;sn=93207b8d49bd52e8c9e4e0ed36e23a22#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/iamxjb/winxin-app-watch-life.net">winxin-app-watch-life.net</a> - WordPress 版微信小程序。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/imageslr/taro-library">taro-library</a> - 基于 Taro + Taro UI + Redux + Webpack + ES6 + Mock 的小程序书店。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/iven35/Himalayan-lite">Himalayan-lite</a> - 高仿喜马拉雅是一个初级项目完全使用微信小程序原生开发，没有使用自定义组件，非常的适合微信小程序开发新手。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/lsqy/taro-music">taro-music</a> - 基于 Taro 与网易云音乐 api 开发，技术栈主要是：typescript+taro+taro-ui+redux+react-hooks。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/kujian/githubTrending">githubTrending</a> - 小程序 GitHub Trending Hub 是一个以 Feed 流形式查看 GitHub Trending 仓库集合的工具。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/oubingbing/wechatAlliance">wechatAlliance</a> - 第一个项目是校园小情书的微信小程序，该项目功能包括表白墙、树洞、校园论坛。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="">Reo</a> - 描述。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="SpringBoot实战项目"><a href="#SpringBoot实战项目" class="headerlink" title="SpringBoot实战项目"></a>SpringBoot实战项目</h3><ul><li><a href="https://github.com/dyc87112/SpringBoot-Learning">SpringBoot-Learning</a> - Spring Boot 基础教程，如果你没接触过该技术，可以从该教程学起。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22492ced5ad84397b04927167a3b92841c95fecb7424a9a0f5e91aae24e2c59d681f2ea2d&amp;idx=1&amp;mid=2247497563&amp;scene=21&amp;sn=bbc1d4f23b6fc15d7a14641f746cfe57#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="http://blog.didispace.com/"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/ityouknow/spring-boot-examples">spring-boot-examples</a> - Spring Boot 教程、技术栈示例代码，快速简单上手教程。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22492ced5ad84397b04927167a3b92841c95fecb7424a9a0f5e91aae24e2c59d681f2ea2d&amp;idx=1&amp;mid=2247497563&amp;scene=21&amp;sn=bbc1d4f23b6fc15d7a14641f746cfe57#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/wuyouzhuguli/SpringAll">SpringAll</a> - 该项目为 Spring 全家桶教程，包含 Spring Boot、Shiro、Spring Cloud，Spring Security 等等。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22492ced5ad84397b04927167a3b92841c95fecb7424a9a0f5e91aae24e2c59d681f2ea2d&amp;idx=1&amp;mid=2247497563&amp;scene=21&amp;sn=bbc1d4f23b6fc15d7a14641f746cfe57#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://mrbird.cc"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/xkcoding/spring-boot-demo">spring-boot-demo</a> - spring boot demo 是一个用来深度学习并实战 Spring Boot 的项目，目前总共包含 66 个集成 demo。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22492ced5ad84397b04927167a3b92841c95fecb7424a9a0f5e91aae24e2c59d681f2ea2d&amp;idx=1&amp;mid=2247497563&amp;scene=21&amp;sn=bbc1d4f23b6fc15d7a14641f746cfe57#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/cloudfavorites/favorites-web">favorites-web</a> - 云收藏是一个使用 Spring Boot 构建的开源网站，可以让用户在线随时随地收藏的一个网站。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22492ced5ad84397b04927167a3b92841c95fecb7424a9a0f5e91aae24e2c59d681f2ea2d&amp;idx=1&amp;mid=2247497563&amp;scene=21&amp;sn=bbc1d4f23b6fc15d7a14641f746cfe57#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a>  <a href="http://favorites.ren/index"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/lenve/vhr">vhr</a> - 微人事是一个前后端分离的人力资源管理系统，项目采用 SpringBoot+Vue 开发。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22492ced5ad84397b04927167a3b92841c95fecb7424a9a0f5e91aae24e2c59d681f2ea2d&amp;idx=1&amp;mid=2247497563&amp;scene=21&amp;sn=bbc1d4f23b6fc15d7a14641f746cfe57#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/elunez/eladmin">eladmin</a> - 一个基于 Spring Boot、Vue 的前后端分离的后台管理系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22492ced5ad84397b04927167a3b92841c95fecb7424a9a0f5e91aae24e2c59d681f2ea2d&amp;idx=1&amp;mid=2247497563&amp;scene=21&amp;sn=bbc1d4f23b6fc15d7a14641f746cfe57#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://el-admin.xin"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="github.com/19920625lsg/spring-boot-online-exam">spring-boot-online-exam</a> - 一款超级美观的在线考试系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d769ced65e7fb3dcecfc55b11485a6d17b5efaeff8869258d0edd7ee443a1f2fcecf0d9c&amp;idx=1&amp;mid=2247484576&amp;scene=21&amp;sn=a00551fe2083c683e842686cb20e12dc#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="http://129.211.88.191"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li></ul><h3 id="SpringCloud项目"><a href="#SpringCloud项目" class="headerlink" title="SpringCloud项目"></a>SpringCloud项目</h3><ul><li><a href="https://github.com/macrozheng/mall-swarm">mall-swarm</a> - 一个基于 Spring Cloud 的微服务商城系统项目。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d675ced65f639801f6478782e677240380d57741efdc57748653ba1bc43ab8d5cca8b903&amp;idx=1&amp;mid=2247484860&amp;scene=21&amp;sn=913715afa3714a626b6f2eba30ae36b6#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> </li><li><a href="https://github.com/macrozheng/springcloud-learning">springcloud-learning</a> - Spring Cloud 技术教程。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d675ced65f639801f6478782e677240380d57741efdc57748653ba1bc43ab8d5cca8b903&amp;idx=1&amp;mid=2247484860&amp;scene=21&amp;sn=913715afa3714a626b6f2eba30ae36b6#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> </li></ul><h3 id="管理系统"><a href="#管理系统" class="headerlink" title="管理系统"></a>管理系统</h3><ul><li><a href="https://github.com/funnyzpc/mee-admin">mee-admin</a> - 一款轻量级、可快速上手的开源后台系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d675ced65f639801f6478782e677240380d57741efdc57748653ba1bc43ab8d5cca8b903&amp;idx=1&amp;mid=2247484860&amp;scene=21&amp;sn=913715afa3714a626b6f2eba30ae36b6#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> </li></ul><h3 id="可视化项目"><a href="#可视化项目" class="headerlink" title="可视化项目"></a>可视化项目</h3><ul><li><a href="https://github.com/Motianshi/distribute-tool">distribute-tool</a> - Spring Boot + Echarts实现用户访问地图可视化。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d462ced65d74be3a434c8a50a7dd471eb949248bdbe4811ca5eb81f224d54df9b745a04c&amp;idx=1&amp;mid=2247485355&amp;scene=21&amp;sn=183018d0aea5699ff3cd3319ea2a8259#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="低代码项目"><a href="#低代码项目" class="headerlink" title="低代码项目"></a>低代码项目</h3><ul><li><a href="https://github.com/woai3c/visual-drag-demo">visual-drag-demo</a> - 一个开源的低代码平台项目，用户仅仅通过简单的拖拉拽就能生成一个页面。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247501142&amp;idx=2&amp;sn=23c51dc47afeba0f6939507897dcd50d&amp;chksm=f9a2169fced59f89b7ee69fb998fb914b8137d10e0b475be356ad917629e7aec038b1124ef5d&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> </li><li><a href="https://github.com/imcuttle/mometa">mometa</a> - mometa 不同于传统主流的低代码平台，其用户是面向开发者的代码可视设计编辑平台。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247508640&amp;idx=1&amp;sn=b842e02cde8f1c4ac6a71f27600bd97a&amp;chksm=f9a27169ced5f87f1023b17833eb7d4135d3914cf7879af41e24e510648b653040d00e0d1cf8&amp;token=1017536687&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> </li><li><a href="https://github.com/blocks/blocks">blocks</a> - 简单的低代码页面构建器，无需编写代码即可创建漂亮的网站。你只需要在右侧的组件区域选择你想要的模块，拖到左侧的编辑区域即可。这样通过简单的交互就能做出一个简洁的网站。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247506645&amp;idx=1&amp;sn=7638eee635c1c7df89acf9431e092c3f&amp;chksm=f9a2091cced5800a0a0d9ab253ebdf8557b74cb64ddbc76694cb5c05ecbf0312f9659b9578c4&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> </li><li><a href="https://github.com/ykfe/imove">imove</a> - iMove 是一个逻辑可复用的，面向函数的，流程可视化的 JavaScript 工具库。这个开源项目面向前端开发者，核心解决的是复杂逻辑复用的问题。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247506645&amp;idx=1&amp;sn=7638eee635c1c7df89acf9431e092c3f&amp;chksm=f9a2091cced5800a0a0d9ab253ebdf8557b74cb64ddbc76694cb5c05ecbf0312f9659b9578c4&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> </li><li><a href="https://github.com/vuegg/vuegg">vuegg</a> - 通过将组件直接拖放到可视化编辑器，然后通过简单的交互调整大小，最终通过拖拉拽的方式构建一个 Vue.js 项目。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247506645&amp;idx=1&amp;sn=7638eee635c1c7df89acf9431e092c3f&amp;chksm=f9a2091cced5800a0a0d9ab253ebdf8557b74cb64ddbc76694cb5c05ecbf0312f9659b9578c4&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> </li><li><a href="https://github.com/BuilderIO/builde">builde</a> - 通过在网页上进行编辑就能快速制作一个网页，想修改文字直接在网页上改，添加Banner、图片列表等等，通过简单的拖拉拽就行了。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247506645&amp;idx=1&amp;sn=7638eee635c1c7df89acf9431e092c3f&amp;chksm=f9a2091cced5800a0a0d9ab253ebdf8557b74cb64ddbc76694cb5c05ecbf0312f9659b9578c4&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> </li><li><a href="https://gitee.com/godoforange/rtvue-lowcode">rtvue-lowcode</a> - 一款基于 uniapp 框架和 uview 组件库的低代码开发平台，项目提供可视化拖拽编辑器，适用于app、小程序等项目开发。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247506645&amp;idx=1&amp;sn=7638eee635c1c7df89acf9431e092c3f&amp;chksm=f9a2091cced5800a0a0d9ab253ebdf8557b74cb64ddbc76694cb5c05ecbf0312f9659b9578c4&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> </li><li><a href="https://github.com/sparrow-js/sparrow">sparrow</a> - 一个功能强大的场景化低代码搭建工作台，只需要在这个工作台上进行组件的拖拉拽，就能实时输出可读性强、vue element-ui 组件库的源代码。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247505194&amp;idx=1&amp;sn=4b92e34ed99b61c44c5b492c45c0896e&amp;chksm=f9a206e3ced58ff5aa6d468e02719991c997bdb3a2f9f4289acbedab9099396e89ab097515e1&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> </li><li><a href="https://github.com/ly525/luban-h5">luban-h5</a> - 鲁班 H5 是基于 Vue2.0 开发的快速生成页面的平台，通过简单的拖拽交互方式即可迅速的完成一个页面的制作，类似 易企秀、Maka、百度 H5 等平台。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247505194&amp;idx=1&amp;sn=4b92e34ed99b61c44c5b492c45c0896e&amp;chksm=f9a206e3ced58ff5aa6d468e02719991c997bdb3a2f9f4289acbedab9099396e89ab097515e1&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> </li><li><a href="https://github.com/woai3c/visual-drag-demo">visual-drag-demo</a> - 这个项目基于 Vue.js 技术栈，平台主页面分为四个部分，分别是工具栏、组件列表、画布、属性区域。将文字、图片等组件拖至画布区域。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247503159&amp;idx=1&amp;sn=3f6b3f79511e13feda4022d0771118c1&amp;chksm=f9a21efeced597e8f38aeae6122da86f89c80171d09df20db9f6881a29dfe602921720be56d5&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> </li><li><a href="https://github.com/fantasticit/ramiko">ramiko</a> - 基于 next.js 构建页面可视化编辑器。整个编辑器的研发逻辑为前端开发组件库，编辑器读取组件完成页面搭建，将页面数据发送至服务端保存。访问页面，从服务端拉取页面数据，前端渲染页面即可。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247503159&amp;idx=1&amp;sn=3f6b3f79511e13feda4022d0771118c1&amp;chksm=f9a21efeced597e8f38aeae6122da86f89c80171d09df20db9f6881a29dfe602921720be56d5&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> </li><li><a href="https://github.com/lzuntalented/lz-h5-edit">lz-h5-edit</a> - H5场景编辑器，编辑器功能：拖拽、缩放、旋转、动画、撤销、重做、组合元素，组件：物料、文本、图片、QQ语言通话、背景、地图、音效、模板、视频、艺术字。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247503159&amp;idx=1&amp;sn=3f6b3f79511e13feda4022d0771118c1&amp;chksm=f9a21efeced597e8f38aeae6122da86f89c80171d09df20db9f6881a29dfe602921720be56d5&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> </li><li><a href="https://github.com/yangyuji/h5-factoryH5">h5-factoryH5</a> - H5 专题页面可视化编辑工具，拖拽编辑，灵活切换，一键生成  HTML 文件。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247503159&amp;idx=1&amp;sn=3f6b3f79511e13feda4022d0771118c1&amp;chksm=f9a21efeced597e8f38aeae6122da86f89c80171d09df20db9f6881a29dfe602921720be56d5&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> </li><li><a href="https://github.com/buqiyuan/vite-vue3-lowcode">vite-vue3-lowcode</a> - vue3.x vite2.x vant element-plus H5 移动端低代码平台 lowcode 可视化拖拽 可视化编辑器 visual editor 类似易企秀的H5制作、建站工具、可视化搭建工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247503159&amp;idx=1&amp;sn=3f6b3f79511e13feda4022d0771118c1&amp;chksm=f9a21efeced597e8f38aeae6122da86f89c80171d09df20db9f6881a29dfe602921720be56d5&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> </li><li><a href="https://gitee.com/vitojc/fast-poster">fast-poster</a> - 海报编辑器最左侧是组件列表。可以在最左侧选择组件，比如文本、二维码、图片等添加到最中间的画布区域，通过右侧的属性调节面板调节添加组件的样式。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247503159&amp;idx=1&amp;sn=3f6b3f79511e13feda4022d0771118c1&amp;chksm=f9a21efeced597e8f38aeae6122da86f89c80171d09df20db9f6881a29dfe602921720be56d5&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> </li><li><a href="https://gitee.com/jeecg/jeecg-boot">jeecg-boot</a> - JeecgBoot 是一款基于代码生成器的低代码平台！前后端分离架构 SpringBoot2.x，SpringCloud，Ant Design&amp;Vue，Mybatis-plus，Shiro，JWT，支持微服务。强大的代码生成器让前后端代码一键生成，实现低代码开发。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247503159&amp;idx=1&amp;sn=3f6b3f79511e13feda4022d0771118c1&amp;chksm=f9a21efeced597e8f38aeae6122da86f89c80171d09df20db9f6881a29dfe602921720be56d5&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> </li><li><a href="https://gitee.com/baidu/amis">amis</a> - 它通过 JSON 配置就能生成各种后台页面，极大减少开发成本，甚至可以不需要了解前端。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247503159&amp;idx=1&amp;sn=3f6b3f79511e13feda4022d0771118c1&amp;chksm=f9a21efeced597e8f38aeae6122da86f89c80171d09df20db9f6881a29dfe602921720be56d5&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> </li><li><a href="https://gitee.com/huangdf/seezoon-stack">seezoon-stack</a> - Seezoon Stack 是一款基于当前最前沿的前端和后台实现的低代码开发平台。前端技术栈基于 Vue3 + Vite + Antdv，后端技术栈基于 Spring boot。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247503159&amp;idx=1&amp;sn=3f6b3f79511e13feda4022d0771118c1&amp;chksm=f9a21efeced597e8f38aeae6122da86f89c80171d09df20db9f6881a29dfe602921720be56d5&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> </li></ul><h3 id="人脸识别项目"><a href="#人脸识别项目" class="headerlink" title="人脸识别项目"></a>人脸识别项目</h3><ul><li><a href="https://github.com/cmusatyalab/openface">openface</a> - OpenFace 作为用于人脸识别的通用库，能够实现瞬态和移动人脸识别。</li><li><a href="https://github.com/ageitgey/face_recognition">face_recognition</a> - Face Recognition 是一个强大、简单、易上手的人脸识别开源项目，并且配备了完整的开发文档和应用案例。</li><li><a href="https://github.com/deepinsight/insightface">insightface</a> - InsightFace 是一个开源的 2D&amp;3D 深度人脸分析工具箱，主要基于 PyTorch 和 MXNet。</li><li><a href="https://github.com/davidsandberg/facenet">facenet</a> - FaceNet 是一个人脸识别系统，可用于判断多幅图是否为同一人、识别图像中的人是谁、人脸聚类计算人脸相似度。</li><li><a href="https://github.com/serengil/deepface">deepface</a> - Deepface 是一个用于 python 的轻量级人脸识别和人脸属性分析（年龄、性别、情感和种族）框架。它是一个混合人脸识别框架，包含最先进的模型：VGG-Face、Google FaceNet、OpenFace、Facebook DeepFace、DeepID、ArcFace 和 Dlib。</li><li><a href="https://github.com/exadel-inc/CompreFace">CompreFace</a> - Exadel CompreFace 是一项免费的开源人脸识别服务，无需事先具备机器学习技能即可轻松集成到任何系统中。CompreFace 提供 REST API 用于人脸识别、人脸验证、人脸检测、地标检测、年龄和性别识别，并且可以通过 docker 轻松部署，并支持在 CPU 和 GPU 上工作的不同模型。</li></ul><h2 id="开源工具"><a href="#开源工具" class="headerlink" title="开源工具"></a>开源工具</h2><h3 id="好用工具"><a href="#好用工具" class="headerlink" title="好用工具"></a>好用工具</h3><ul><li><a href="https://github.com/ohmyzsh/ohmyzsh">ohmyzsh</a> - Oh My Zsh 是一个社区驱动的开源框架，用于管理 Zsh 配置。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2257cced5ac6ae928edb792014120ea367f88402af7d363580f3d44fcde8da3e864bf39f3&amp;idx=1&amp;mid=2247497397&amp;scene=21&amp;sn=8416e22549c14eaf4688842d139640ba#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://ohmyz.sh/"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/github/gitignore">gitignore</a> - 提供很多 .gitignore 模板。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2257cced5ac6ae928edb792014120ea367f88402af7d363580f3d44fcde8da3e864bf39f3&amp;idx=1&amp;mid=2247497397&amp;scene=21&amp;sn=8416e22549c14eaf4688842d139640ba#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://www.gitignore.io"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/carbon-app/carbon">carbon</a> - 将源码转化为漂亮的图片，插入到博客就非常美观。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2278dced5ae9b650d1aa1aaa72f042453cea48186a739a7a88a37e95d629efe653eb609b8&amp;idx=1&amp;mid=2247496772&amp;scene=21&amp;sn=638c09b730f46f0d39191e681f8159a1#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://carbon.now.sh/"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/hiroppy/fusuma">fusuma</a> - 通过编写 Markdown 来快速生成演讲幻灯片。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2278dced5ae9b650d1aa1aaa72f042453cea48186a739a7a88a37e95d629efe653eb609b8&amp;idx=1&amp;mid=2247496772&amp;scene=21&amp;sn=638c09b730f46f0d39191e681f8159a1#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://github.com/hiroppy/fusuma"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/agalwood/Motrix">Motrix</a> - Motrix 是一款全能的下载工具，图形操作界面简单明了。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2278dced5ae9b650d1aa1aaa72f042453cea48186a739a7a88a37e95d629efe653eb609b8&amp;idx=1&amp;mid=2247496772&amp;scene=21&amp;sn=638c09b730f46f0d39191e681f8159a1#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://motrix.app/"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/zhangdaiscott/jeecg-boot">jeecg-boot</a> - 基于 Spring Boot + Mybatis + Vue 的代码生成器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1c69eced64f8813f68c300e5b80279a540d48a94a42f96cce5ab310e91fee77151cbbc2b1&amp;idx=1&amp;mid=2247488855&amp;scene=21&amp;sn=8fae4cff41c39c9f14e51c7d29b64b19#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="http://www.jeecg.com/"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/log4j/pig">pig</a> - 一个强大权限管理系统，可快速构建微服务代码框架。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1c69eced64f8813f68c300e5b80279a540d48a94a42f96cce5ab310e91fee77151cbbc2b1&amp;idx=1&amp;mid=2247488855&amp;scene=21&amp;sn=8fae4cff41c39c9f14e51c7d29b64b19#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/looly/hutool/">Hutool</a> - 一款小而全的 Java 工具类库：Hutool。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d7f8ced65eeeafc7323bdf614c920139f8688530a8c90525077683fbd2b2fd5266c3bd34&amp;idx=1&amp;mid=2247484465&amp;scene=21&amp;sn=1214bd576aef87a8e156a796f4c6559f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/zhaoolee/ChromeAppHeroes">ChromeAppHeroes</a> - 为优秀的 Chrome 插件写一本中文说明书, 让 Chrome 插件英雄们造福人类。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d7e9ced65effd4fa36134f044f881c5cdb7ed48bd91d23e6e45f5540a6b3f983a50b74cd&amp;idx=1&amp;mid=2247484448&amp;scene=21&amp;sn=d6973c2548361efe2c76a2fccbfb7155#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Fmstrat/winapps">winapps</a> - 如何在 Linux 上运行 Windows 的应用？<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23cceced5b5d81699bd349dbe57ed57b200ee733222e8368c5f13c4967f3eb2c104511375&amp;idx=1&amp;mid=2247495431&amp;scene=21&amp;sn=99c8579852afda8f9d849818eb2399bd#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/sivan/heti">heti</a> - 一个中文排版开源项目。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1c5bfced64ca982ebb99a56b7f9fe73713443f06fca1a49e476061f4df616804f29713218&amp;idx=1&amp;mid=2247489142&amp;scene=21&amp;sn=059feb284cdf9096121a921682fd4dca#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/microsoft/PowerToys/releases/">PowerToys</a> - 微软给 Win10 量身打造的效率神器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1c5efced64cf9379667b64ad3b92db792e2c604bf38d49ea983c2c768bc03a3fb88a9ca35&amp;idx=1&amp;mid=2247489062&amp;scene=21&amp;sn=0a8e2e9c48703c97076722bd66498d9f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Teraskull/PyDebloatX">PyDebloatX</a> - 一键卸载 Windows 默认程序。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1db9bced6528da94da33fe8661b269798179dfcc14412a3574688dd540f77c09c8a61cbf4&amp;idx=1&amp;mid=2247485522&amp;scene=21&amp;sn=d8693abad6a2f0b8d46ec6e794735c3c#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/microsoft/SandDance">SandDance</a> - 微软开源的可视化工具太酷炫了。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22935ced5a0235e47ea7eba9fa56d89ad5e4088453c46104e29ce84a5288fa1e3e40849f7&amp;idx=2&amp;mid=2247498492&amp;scene=21&amp;sn=823ff5005f42a2ad94349301448d578c#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/notable/notable">notable</a> - 高颜值 Markdown 编辑器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22aa1ced5a3b79597e1c7f65c69f8ecab8e14b44a0839ee7ca60688839fac5ec02c00bb49&amp;idx=2&amp;mid=2247498088&amp;scene=21&amp;sn=7ce23733aeba1de33fcc189e4bd88e06#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/digitalocean/nginxconfig.io">nginxconfig</a> - Nginx 可视化配置神器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22a9eced5a3881fc12c0ebca58fd4d840fac9ee465e8df47243c14d4f65416a04ca4918de&amp;idx=1&amp;mid=2247498071&amp;scene=21&amp;sn=af451a4c73a105df637cfd3f0856c3bf#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/usthe/sureness">sureness</a> - 比 Spring Security 快 4 倍的认证鉴权框架。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a224b4ced5ada2ad5feb993223e4e426540c1c060d55671e562cdad15995dca5e76eaa976d&amp;idx=1&amp;mid=2247497597&amp;scene=21&amp;sn=f874a7a326c042d113031004b4202f30#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/laike9m/Cyberbrain">Cyberbrain</a> - 谷歌大神又一开源代码调试神器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a226a9ced5afbf06b2c7fc7f917344619bf8d826bd8c4e4768f108e9ff1f8b40732a539ffa&amp;idx=2&amp;mid=2247497056&amp;scene=21&amp;sn=c74fb96d715dcb3141bb721156b320a0#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/t1m0thyj/WinDynamicDesktop">WinDynamicDesktop</a> - Windows 中使用苹果 macOS 动态桌面壁纸。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/pavlobu/deskreen">deskreen</a> - 将任何设备转换为电脑的辅助屏幕。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2276dced5ae7b800b7ecda3d5bedf98aa74dfd422c5272f1a5b168b820728dbc2890faa30&amp;idx=1&amp;mid=2247496868&amp;scene=21&amp;sn=aa69f8a60c2dfb5cde294137c1c89d02#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/soimort/you-get">you-get</a> - 一行命令下载全网视频。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a227d6ced5aec0a41cb7b9d97332ee28ebed65dc958ca35ceeeb629bb7ccb6f3c2a795631d&amp;idx=1&amp;mid=2247496735&amp;scene=21&amp;sn=66bdcb801c3f88662b91d56a5b042610#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/iawia002/annie">annie</a> - 视频下载神器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a227d6ced5aec0a41cb7b9d97332ee28ebed65dc958ca35ceeeb629bb7ccb6f3c2a795631d&amp;idx=1&amp;mid=2247496735&amp;scene=21&amp;sn=66bdcb801c3f88662b91d56a5b042610#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/zhangdaiscott/jeecg-boot">jeecg-boot</a> - 一键生成前后端代码，实现低代码开发，让开发者更多关注业务。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22007ced5a911c37864506c19fdee3114b6c9d598b52c8fd92d5426fb0f5fa0734df65194&amp;idx=1&amp;mid=2247496654&amp;scene=21&amp;sn=74c322b568b813e0e39671f393e00ee0#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/unbug/codelf">codelf</a> - 一个帮助开发者解决变量命名烦恼的工具: CodeIf。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://unbug.github.io/codelf/"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li>Octotree - 一个可以显示完整 GitHub 项目的完整目录树的 Chrome 插件。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a238b5ced5b1a30478c0ce0be21c986e30ab3a2f6f605dac0d46ada4d62a92257dd358d707&amp;idx=1&amp;mid=2247494524&amp;scene=21&amp;sn=0b17b90fb3e36ed842c1a0ed8e50c399#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li>Sourcegraph - 可以方便在 GitHub 上看源码的 Chrome 插件。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a238b5ced5b1a30478c0ce0be21c986e30ab3a2f6f605dac0d46ada4d62a92257dd358d707&amp;idx=1&amp;mid=2247494524&amp;scene=21&amp;sn=0b17b90fb3e36ed842c1a0ed8e50c399#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li>GitZip - 该 Chrome 插件能帮助你轻松下载一个仓库中的部分代码。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a238b5ced5b1a30478c0ce0be21c986e30ab3a2f6f605dac0d46ada4d62a92257dd358d707&amp;idx=1&amp;mid=2247494524&amp;scene=21&amp;sn=0b17b90fb3e36ed842c1a0ed8e50c399#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/songer/java_opencv">java_opencv</a> - 基于 Java 的答题卡识别系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a238b5ced5b1a30478c0ce0be21c986e30ab3a2f6f605dac0d46ada4d62a92257dd358d707&amp;idx=1&amp;mid=2247494524&amp;scene=21&amp;sn=0b17b90fb3e36ed842c1a0ed8e50c399#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="www.github.com/lana-k/sqliteviz">sqliteviz</a> - Sqliteviz 是一个轻量级 SQLite 可视化工具。 包含功能如下： 针对 SQLite 数据库运行 SQL 查询并根据结果集创建 Plotly 图表和数据透视表，将 CSV 文件导入 SQLite 数据库并可视化导入的数据，将结果集导出到 CSV 文件，管理查询并针对不同的数据库运行它们等等。</li><li><a href="https://github.com/Z4nzu/hackingtool">hackingtool</a> - 黑客的多合一黑客工具，包括很多黑客攻击的脚本和工具，比如匿名隐藏工具、SQL 注入工具等等。</li><li><a href="https://github.com/AmruthPillai/Reactive-Resume">Reactive-Resume</a> - Reactive Resume 是一个免费和开源的简历生成器，旨在简单的创建、更新和共享简历。</li><li><a href="https://github.com/vran-dev/databasir">databasir</a> - Databasir 是面向团队的关系型数据库模型文档管理平台，旨在通过自动化的方式解决模型文档管理过程中维护成本高、内容更新不及时以及团队协作复杂等问题。</li></ul><h3 id="Docker工具"><a href="#Docker工具" class="headerlink" title="Docker工具"></a>Docker工具</h3><ul><li><a href="https://github.com/v2tec/watchtower">watchtower</a> - watchtower：自动更新 Docker 容器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d508ced65c1e6a9e505375b0bcc41edb2ddb01afa98ed01cf94a2b2812fab2e04ef2c0a5&amp;idx=1&amp;mid=2247485121&amp;scene=21&amp;sn=691f23084d06cba1113e203f712f8f12#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/docker-slim/docker-slim">docker-slim</a> - docker-gc：容器和镜像的垃圾回收。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d508ced65c1e6a9e505375b0bcc41edb2ddb01afa98ed01cf94a2b2812fab2e04ef2c0a5&amp;idx=1&amp;mid=2247485121&amp;scene=21&amp;sn=691f23084d06cba1113e203f712f8f12#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/grammarly/rocker">rocker</a> - rocker：突破 Dockerfile 的限制。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d508ced65c1e6a9e505375b0bcc41edb2ddb01afa98ed01cf94a2b2812fab2e04ef2c0a5&amp;idx=1&amp;mid=2247485121&amp;scene=21&amp;sn=691f23084d06cba1113e203f712f8f12#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/bcicen/ctop">ctop</a> - ctop：容器的类顶层接口。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d508ced65c1e6a9e505375b0bcc41edb2ddb01afa98ed01cf94a2b2812fab2e04ef2c0a5&amp;idx=1&amp;mid=2247485121&amp;scene=21&amp;sn=691f23084d06cba1113e203f712f8f12#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/openspug/spug">spug</a> - 使用 Python+Vue 实现的开源运维平台，前后端分离方便二次开发。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d4fbced65ded0e1856a1db7ce2e6f2c9e423de4428795644770bf2dbb9910874e1678b64&amp;idx=1&amp;mid=2247485234&amp;scene=21&amp;sn=e2ff671bbe9ff9c8a642ccc5793c266a#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/drone/drone">drone</a> - 一个基于 Docker 的持续集成平台，使用 Go 语言编写。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d4fbced65ded0e1856a1db7ce2e6f2c9e423de4428795644770bf2dbb9910874e1678b64&amp;idx=1&amp;mid=2247485234&amp;scene=21&amp;sn=e2ff671bbe9ff9c8a642ccc5793c266a#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/skanehira/docui">docui</a> - 终端 Docker 管理工具，自带一个终端界面。。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d4fbced65ded0e1856a1db7ce2e6f2c9e423de4428795644770bf2dbb9910874e1678b64&amp;idx=1&amp;mid=2247485234&amp;scene=21&amp;sn=e2ff671bbe9ff9c8a642ccc5793c266a#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/docker-slim/docker-slim">docker-slim</a> - 自动缩减 docker 镜像的体积的工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d4fbced65ded0e1856a1db7ce2e6f2c9e423de4428795644770bf2dbb9910874e1678b64&amp;idx=1&amp;mid=2247485234&amp;scene=21&amp;sn=e2ff671bbe9ff9c8a642ccc5793c266a#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/yeasy/docker_practice">docker_practice</a> - Docker 从入门到实践。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d4fbced65ded0e1856a1db7ce2e6f2c9e423de4428795644770bf2dbb9910874e1678b64&amp;idx=1&amp;mid=2247485234&amp;scene=21&amp;sn=e2ff671bbe9ff9c8a642ccc5793c266a#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="http s:// github.com/jesseduffield/lazydocker">lazydocker</a> - 带命令行 UI 的 docker 管理工具。可以通过点点点来管理 docker，却又不需要装 rancher 这样的企业级容器管理平台。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d4fbced65ded0e1856a1db7ce2e6f2c9e423de4428795644770bf2dbb9910874e1678b64&amp;idx=1&amp;mid=2247485234&amp;scene=21&amp;sn=e2ff671bbe9ff9c8a642ccc5793c266a#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/wagoodman/dive">dive</a> - 用来探索 docker 镜像每一层文件系统，以及发现缩小镜像体积方法的命令行工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d4fbced65ded0e1856a1db7ce2e6f2c9e423de4428795644770bf2dbb9910874e1678b64&amp;idx=1&amp;mid=2247485234&amp;scene=21&amp;sn=e2ff671bbe9ff9c8a642ccc5793c266a#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/LockGit/gochat">gochat</a> - 纯 Go 实现的轻量级即时通讯系统。。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d4fbced65ded0e1856a1db7ce2e6f2c9e423de4428795644770bf2dbb9910874e1678b64&amp;idx=1&amp;mid=2247485234&amp;scene=21&amp;sn=e2ff671bbe9ff9c8a642ccc5793c266a#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/pipiliang/docker-dashboard">docker-dashboard</a> - 基于控制台的 docker 工具，代码简单易读，可以做为学习 Node.js 的实践项目。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d4fbced65ded0e1856a1db7ce2e6f2c9e423de4428795644770bf2dbb9910874e1678b64&amp;idx=1&amp;mid=2247485234&amp;scene=21&amp;sn=e2ff671bbe9ff9c8a642ccc5793c266a#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/vicanso/diving">diving</a> - 基于 dive 分析 docker 镜像，界面化展示了镜像每层的变动（增加、修改、删除等）、用户层数据大小等信息。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d4fbced65ded0e1856a1db7ce2e6f2c9e423de4428795644770bf2dbb9910874e1678b64&amp;idx=1&amp;mid=2247485234&amp;scene=21&amp;sn=e2ff671bbe9ff9c8a642ccc5793c266a#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="命令行工具"><a href="#命令行工具" class="headerlink" title="命令行工具"></a>命令行工具</h3><ul><li><a href="https://fishshell.com/">fishshell</a> - 一个非常优秀的终端 Shell 工具，拥有许多开箱即用的功能，例如语法自动推荐补全、语法高亮显示或使用快捷键在最近访问的文件夹之间来回切换。。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://starship.rs/">starship</a> - 强大的 Shell 提示工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/rupa/z">z</a> - 该工具可以让你快速地在文件目录之间跳转。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/junegunn/fzf">fzf</a> - fuzzy finder，命令行模糊查找器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/sharkdp/fd">fd</a> - 类似于系统自带的 <code>find</code> 命令，但使用起来更简单。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/BurntSushi/ripgrep">ripgrep</a> - 列斯与 grep 但是更好的升级版的 grep 工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://nicolargo.github.io/glances/">glances</a> - 好用的系统监控工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://hisham.hm/htop/">htop</a> - 好用的系统监控工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/justinmayer/virtualfish">virtualfish</a> - Python 虚拟关键管理工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/pyenv/pyenv">pyenv</a> - 一款对 Python 不同版本管理的工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/nodenv/nodenv">nodenv</a> - 一款对Node 不同版本管理的工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/rbenv/rbenv">rbenv</a> - 一款对 Ruby 不同版本管理的工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/pipxproject/pipx">pipx</a> - Python 依赖安装环境工具命令行工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/bcicen/ctop">ctop</a> - 一款给力的 Docker 监控工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/jesseduffield/lazydocker">lazydocker</a> - 一款给力的 Docker 监控工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://brew.sh/">brew</a> - Mac OS 下的软件包管理工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://asciinema.org/">asciinema</a> - 一款终端会话记录工具，支持从动画中进行拷贝。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="：https://www.colordiff.org/">colordiff</a> - 升级版的 diff 工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/so-fancy/diff-so-fancy">diff-so-fancy</a> - 升级版的 diff 工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/sharkdp/bat">bat</a> - 一款升级版的 cat 工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://httpie.org/">httpie</a> - 一款升级版的 curl 工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://tldr.sh/">tldr</a> - Too long，Dont read，简化版的 man pages 查看工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://the.exa.website/">exa</a> - 一款升级版的ls命令行工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://litecli.com/">litecli</a> - 升级版的 sqlite3 数据库链接工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://www.pgcli.com/">pgcli</a> - 升级版的 psql 数据库链接工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/mas-cli/mas">mas</a> - App Store 的命令行工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://dev.yorhel.nl/ncdu">ncdu</a> - 一款磁盘使用分析的命令行工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/iggredible/Learn-Vim">Learn-Vim</a> - 用聪明的方式学习 Vim 。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d579ced65c6f8da85f71bc62947a1ab06e4f6a82f73cef09f57e6cffa146e501aabd622b&amp;idx=1&amp;mid=2247485104&amp;scene=21&amp;sn=1be7739aed86a99c0441c121d7105f8a#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/withfig/autocomplete">autocomplete</a>当在终端键入命令时，这个开源项目会在现有的 macOS 终端中弹出子命令、选项和上下文相关的参数，帮你快速完成当前命令的输入。</li></ul><h3 id="效率工具"><a href="#效率工具" class="headerlink" title="效率工具"></a>效率工具</h3><ul><li><a href="https://github.com/conwnet/github1s">github1s</a> - 直接用 VS Code 方式打开 GitHub 代码的工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22041ced5a957749df576c4235cd0fef8af1edd46bb972e5c268b0e836bc5a04518d4f564&amp;idx=1&amp;mid=2247496584&amp;scene=21&amp;sn=ebf005a20ba375a4903aa3218648ea63#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Wox-launcher/Wox">wox</a> - 一款国产开源免费的软件快捷启动工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1c286ced64b9098c34a21dcaac3eef9d22f765dc1ef04fe891803f16eaa7c8c3c91d592f3&amp;idx=1&amp;mid=2247487823&amp;scene=21&amp;sn=9089d9cc38cda536fe2caea8bd6dbd65#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/microsoft/winget-cli">winget-cli</a> - 微软官方也为 Windows 系统发布了一款名为 Winget 的软件包管理工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22048ced5a95e05b7edd590a500f38bf75ec42024d84c3a2be27e1f06c03369308610a93a&amp;idx=1&amp;mid=2247496577&amp;scene=21&amp;sn=0e51c7bb103edc9a9a1dda7a9012aee0#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/rustdesk/rustdesk/releases">rustdesk</a> - 基于 Rust 编写的开源远程桌面客户端软件。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1c286ced64b9098c34a21dcaac3eef9d22f765dc1ef04fe891803f16eaa7c8c3c91d592f3&amp;idx=1&amp;mid=2247487823&amp;scene=21&amp;sn=9089d9cc38cda536fe2caea8bd6dbd65#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/kekingcn/file-online-preview">file-online-preview</a> - 用 Spring Boot 搭建的文档在线预览解决方案。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247508410&amp;idx=1&amp;sn=6cd313978ecaa8b30744a5a7fe7eb947&amp;chksm=f9a27273ced5fb65c06f48f85bb034a185befc1d34d4d86de7e382425cd7d29c57e0f923ffcb&amp;token=1224408490&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Tencent/APIJSON">APIJSON</a> - APIJSON 是一种专为 API 而生的 JSON 网络传输协议 以及 基于这套协议实现的 ORM 库。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247508410&amp;idx=1&amp;sn=6cd313978ecaa8b30744a5a7fe7eb947&amp;chksm=f9a27273ced5fb65c06f48f85bb034a185befc1d34d4d86de7e382425cd7d29c57e0f923ffcb&amp;token=1224408490&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/DevYao/JSONConverter">JSONConverter</a> - JSONConverter 是 MAC 上 iOS / Flutter / Android / Server 等开发的辅助工具，可以快速的格式化 JSON 数据并转换生成对应的模型类属性。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247508410&amp;idx=1&amp;sn=6cd313978ecaa8b30744a5a7fe7eb947&amp;chksm=f9a27273ced5fb65c06f48f85bb034a185befc1d34d4d86de7e382425cd7d29c57e0f923ffcb&amp;token=1224408490&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="www.github.com/sbfkcel/towxml">towxml</a> - Towxml  是一个可将 HTML 、 Markdown 转为微信小程序 WXML (WeiXin Markup Language)的渲染库。 用于解决在微信小程序中 Markdown 、 HTML 不能直接渲染的问题。</li><li><a href="www.github.com/justauth/JustAuth">JustAuth</a> - 一个超级全的第三方登录开源组件。该项目已支持Github、Gitee、微博、钉钉、百度、Coding、腾讯云开发者平台、OSChina、支付宝、QQ等第三方平台的授权登录。</li><li><a href="www.github.com/go-pay/gopay">gopay</a> - 本项目是微信、支付宝、PayPal、QQ 的 Golang 版本SDK。</li></ul><h2 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h2><h3 id="学习项目"><a href="#学习项目" class="headerlink" title="学习项目"></a>学习项目</h3><ul><li><a href="https://github.com/danistefanovic/build-your-own-x">build-your-own-x</a> - 汇集了诸多优质资源，教你如何构建一些属于自己的东西，内容主要分为增强现实、区块链、机器人、编辑器等等。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2257cced5ac6ae928edb792014120ea367f88402af7d363580f3d44fcde8da3e864bf39f3&amp;idx=1&amp;mid=2247497397&amp;scene=21&amp;sn=8416e22549c14eaf4688842d139640ba#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="[twitter.com/danistefanovic](https://twitter.com/danistefanovic"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a>)</li><li><a href="https://github.com/EbookFoundation/free-programming-books">free-programming-books</a> - 收集了特别多免费的编程电子书、编程课程、播客、网站等学习资源。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2257cced5ac6ae928edb792014120ea367f88402af7d363580f3d44fcde8da3e864bf39f3&amp;idx=1&amp;mid=2247497397&amp;scene=21&amp;sn=8416e22549c14eaf4688842d139640ba#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://ebookfoundation.github.io/free-programming-books/"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/jwasham/coding-interview-university/blob/main/translations/README-cn.md">coding-interview-university</a> - 堪称 GitHub 上最励志的学习教程，上岸谷歌的编程大佬的自学笔记。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/donnemartin/system-design-primer">system-design-primer</a> - 帮助你学习如何设计大型系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2257cced5ac6ae928edb792014120ea367f88402af7d363580f3d44fcde8da3e864bf39f3&amp;idx=1&amp;mid=2247497397&amp;scene=21&amp;sn=8416e22549c14eaf4688842d139640ba#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> </li><li><a href="https://github.com/public-apis/public-apis">public-apis</a> - 收集了了很多免费的 API，供你的项目和应用程序使用。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2257cced5ac6ae928edb792014120ea367f88402af7d363580f3d44fcde8da3e864bf39f3&amp;idx=1&amp;mid=2247497397&amp;scene=21&amp;sn=8416e22549c14eaf4688842d139640ba#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> </li><li><a href="https://github.com/jlevy/the-art-of-command-line">the-art-of-command-line</a> - 总结了在 Linux 上使用命令行时的相关技巧，内容覆盖基础使用、文件操作、数据处理等等。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2257cced5ac6ae928edb792014120ea367f88402af7d363580f3d44fcde8da3e864bf39f3&amp;idx=1&amp;mid=2247497397&amp;scene=21&amp;sn=8416e22549c14eaf4688842d139640ba#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/trekhleb/javascript-algorithms">javascript-algorithms</a> - 算法和数据结构是计算机学习的基石。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/kamranahmedse/developer-roadmap">developer-roadmap</a> - 为前端、后端、DevOps等开发着准备可详细的技术路线图。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2257cced5ac6ae928edb792014120ea367f88402af7d363580f3d44fcde8da3e864bf39f3&amp;idx=1&amp;mid=2247497397&amp;scene=21&amp;sn=8416e22549c14eaf4688842d139640ba#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/tuteng/Best-websites-a-programmer-should-visit-zh">Best-websites-a-programmer-should-visit-zh</a> - 这个 GitHub 项目，这个项目包含一系列技术网站列表，堪称全网最全技术网站索引。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2297dced5a06bc51848fa262bec471c220594d7d932cfdd12fdd9963a76b99b6b0af2d4a2&amp;idx=2&amp;mid=2247498420&amp;scene=21&amp;sn=138835003875196bfc106f12a4827716#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="">Reo</a> - 一个适合计算机专业学生看的编程笔记。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/seaswalker/spring-analysis">spring-analysis</a> - 带你读 Spring 的源码。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d263ced65b75708578d9af60cd61da016f1a4dc189db68a5c9ee2a6d468d69b051829b8e&amp;idx=1&amp;mid=2247483818&amp;scene=21&amp;sn=a44eebb49095f26b6acd865aa17ce479#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/XINCGer/Unity3DTraining">Unity3DTraining</a> - Unity3D 的练习项目，该练习项目总结了 57 个小项目。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247508410&amp;idx=1&amp;sn=6cd313978ecaa8b30744a5a7fe7eb947&amp;chksm=f9a27273ced5fb65c06f48f85bb034a185befc1d34d4d86de7e382425cd7d29c57e0f923ffcb&amp;token=1224408490&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/coderit666/GoGuide">GoGuide</a> - Go语言学习指南是一份涵盖大部分 Golang 程序员所需要掌握的核心知识，拥有 Go语言教程、Go开源书籍、Go语言入门教程、Go语言学习路线。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247508410&amp;idx=1&amp;sn=6cd313978ecaa8b30744a5a7fe7eb947&amp;chksm=f9a27273ced5fb65c06f48f85bb034a185befc1d34d4d86de7e382425cd7d29c57e0f923ffcb&amp;token=1224408490&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/doggy8088/Learn-Git-in-30-days">Learn-Git-in-30-days</a> - 本开源项目是 Will 保哥在 2013 第 6 界 IT 邦帮忙铁人赛年度大奖的得奖著作。这是一个 Git 教程，这个开源教程用 30 天的时间，带领大家详细了解使用 Git 。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247508410&amp;idx=1&amp;sn=6cd313978ecaa8b30744a5a7fe7eb947&amp;chksm=f9a27273ced5fb65c06f48f85bb034a185befc1d34d4d86de7e382425cd7d29c57e0f923ffcb&amp;token=1224408490&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alaskasquirrel/Lisp-China">Lisp-China</a> - 古老的编程语言，不为人知的秘密。</li><li><a href="https://github.com/alaskasquirrel/Email-newsletter-RSS">Email-newsletter-RSS</a> - 阅读文章，体味酸甜苦辣。</li><li><a href="https://github.com/alaskasquirrel/Chinese-Podcasts">Chinese-Podcasts</a> - 听播客，了解人声百态。</li><li><a href="www.github.com/Tencent/secguide">secguides</a> - 面向开发人员梳理的代码安全指南，旨在梳理 API 层面的风险点并提供详实可行的安全编码方案。</li></ul><h3 id="学习IDEA"><a href="#学习IDEA" class="headerlink" title="学习IDEA"></a>学习IDEA</h3><ul><li><p><a href="github.com/xiaoxiunique/awesome-IntelliJ-IDEA">awesome-IntelliJ-IDEA</a> - IntelliJ IDEA 从入门到上瘾！<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a234e2ced5bdf43177322c746a2cf1587dc9d1f209300db4c157438adeb34b2bcaf69d0d75&amp;idx=1&amp;mid=2247493419&amp;scene=21&amp;sn=5dbb6d6b89b6a8dc8b93fd5bf8c23906#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></p></li><li><p><a href="https://github.com/judasn/IntelliJ-IDEA-Tutorial">IntelliJ-IDEA-Tutorial</a> - 本教程从 IntelliJ IDEA 的安装、卸载、软件设置、项目配置等各个方面进行讲解。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d009ced6591fd4eeaa13af74c69fbaf3b235fcee0c3393640f6a75fc57713fc22e6df78e&amp;idx=1&amp;mid=2247484352&amp;scene=21&amp;sn=42652cde7493dded30700cacd251466e#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></p></li><li><p><a href="https://github.com/guobinhit/intellij-idea-tutorial">intellij-idea-tutorial</a> - 作者想把自己的经验整理记录下来。此教程使用的工具为 IntelliJ IDEA 2017(.1.5) 版本。。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d009ced6591fd4eeaa13af74c69fbaf3b235fcee0c3393640f6a75fc57713fc22e6df78e&amp;idx=1&amp;mid=2247484352&amp;scene=21&amp;sn=42652cde7493dded30700cacd251466e#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></p></li></ul><h3 id="算法项目"><a href="#算法项目" class="headerlink" title="算法项目"></a>算法项目</h3><ul><li><a href="https://github.com/trekhleb/javascript-algorithms">javascript-algorithms</a> - 基于 JavaScript 的算法和数据结构教程。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/algorithm-visualizer/algorithm-visualizer">algorithm-visualizer</a> - 在线动态演示算法，清楚的看到算法运行的整个过程，直观便于学习。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a>  <a href="https://algorithm-visualizer.org/"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/geekxh/hello-algorithm">hello-algorithm</a> - 疫情期间完成的一部图解算法题典，共 140+ 道高频面试算法题目。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247484442&amp;idx=1&amp;sn=9ce658b30b3841b75e306c7a7bd6e805&amp;chksm=f9a1d7d3ced65ec5fba8b9814a7382c43764247efe2d0cc416510190f3426383539f467c16c4&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a>  <a href="www.geekxh.com"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/labuladong/fucking-algorithm">fucking-algorithm</a> - 基于 LeetCode 的题目，涵盖了所有题型和技巧。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247484442&amp;idx=1&amp;sn=9ce658b30b3841b75e306c7a7bd6e805&amp;chksm=f9a1d7d3ced65ec5fba8b9814a7382c43764247efe2d0cc416510190f3426383539f467c16c4&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a>  <a href="https://labuladong.gitbook.io/algo/"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/TheAlgorithms">TheAlgorithms</a> - 各种版本算法的学习资料。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247484389&amp;idx=1&amp;sn=d522412d6e268e938a30b6b80f1796c1&amp;chksm=f9a1d02cced6593a63886d4601063812be055421e61669fa715c201cba57a13a2a17b49d4dbf&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> </li></ul><h3 id="Python资源"><a href="#Python资源" class="headerlink" title="Python资源"></a>Python资源</h3><ul><li><a href="https://github.com/vinta/awesome-python">awesome-python</a> - 这是一个接近 100k 标星的开源项目，它收集了基于 Python 进行开发各种场景的资源和库。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2294aced5a05cd37b90202a8b5f2d6510aef3ede9af1b3ccf25ed611d36ecbb1ba39ac66f&amp;idx=1&amp;mid=2247498371&amp;scene=21&amp;sn=0288eaf2cba474b82acc7f4db3020033#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/mahmoud/awesome-python-applications">awesome-python-applications</a> - 收集了将近 400 个开源 Python 应用程序。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2294aced5a05cd37b90202a8b5f2d6510aef3ede9af1b3ccf25ed611d36ecbb1ba39ac66f&amp;idx=1&amp;mid=2247498371&amp;scene=21&amp;sn=0288eaf2cba474b82acc7f4db3020033#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Junnplus/awesome-python-books">awesome-python-books</a> - 开源的 Python 电子书籍。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/realpython/python-guide">python-guide</a> - 关于 Python 日常安装、配置和使用的最佳实践手册，包括 pip、numpy、virtualenv等的介绍。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/swaroopch/byte-of-python">byte-of-python</a> - 面向 Python 小白的教程，你只需要知道如何保存一个保存文本文件即可开始学习。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/StBogdan/CTCI_python">CTCI_python</a> - Python 高赞面试题。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/sigmavirus24/python-interview-questions">python-interview-questions</a> - Python 高赞面试题。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/learning-zone/python-interview-questions">python-interview-questions</a> - 描述。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/keon/algorithms">algorithms</a> - 基于 Python 3 的数据结构与算法实现。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/gregmalcolm/python_koans">python_koans</a> - 交互式学习 Python ，学习更高效。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/tuvtran/project-based-learning#python">project-based-learning</a> - 教你搞个爬虫、做个机器人、搞个 Web项目。从项目入手，快速学习 Python。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/jerry-git/learn-python3">learn-python3</a> - 通过案例学习 Python 3：基于 Jupyter Notebook 的案例学习 Python 。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/leisurelicht/wtfpython-cn">wtfpython-cn</a> - 作者收集了一些奇怪的 Python 代码片段，当你敲完这些代码片段，运行看到结果，会惊呼：What the f*ck！因为这些代码的输出结果会和你想象中的不太一样。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="电子书籍"><a href="#电子书籍" class="headerlink" title="电子书籍"></a>电子书籍</h3><ul><li><a href="https://github.com/EbookFoundation/free-programming-books">free-programming-books</a> - 收集了特别多免费的编程电子书、编程课程、播客、网站等学习资源。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247498782&amp;idx=1&amp;sn=bcc67c9f56a0765b0c4e7e3ce67f9f06&amp;chksm=f9a22fd7ced5a6c1a61c9eb154dcb60d3d1fd4d46536588140e3293d34c22bccf0dfcb4ec0d0&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="Linux学习项目"><a href="#Linux学习项目" class="headerlink" title="Linux学习项目"></a>Linux学习项目</h3><ul><li><a href="dunwu.github.io/linux-tutorial/">linux-tutorial</a> - 项目包括 Linux 命令、运维管理、开发环境配置、中间件服务配置、服务器运维、Docker、Shell 脚本等等相关教程。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247498968&amp;idx=1&amp;sn=51fbaaeb9f1b49faa4089271b1b76ea4&amp;chksm=f9a22f11ced5a6070c95e2f812b227dcb753603d31824e949fafbd905071c161f1c926ddc349&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="wangchujiang.com/linux-command/">linux-command</a> - 这个仓库搜集了 570 多个 Linux 命令，内容包含 Linux 命令手册、详解、学习，是一个非常值得收藏的 Linux 命令速查手册。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247498968&amp;idx=1&amp;sn=51fbaaeb9f1b49faa4089271b1b76ea4&amp;chksm=f9a22f11ced5a6070c95e2f812b227dcb753603d31824e949fafbd905071c161f1c926ddc349&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/judasn/Linux-Tutorial">Linux-Tutorial</a> - 如果你是一个 Java后端开发者，具有了一定的 Linux 基础。这个 GitHub 项目你不能错过。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247498968&amp;idx=1&amp;sn=51fbaaeb9f1b49faa4089271b1b76ea4&amp;chksm=f9a22f11ced5a6070c95e2f812b227dcb753603d31824e949fafbd905071c161f1c926ddc349&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/me115/linuxtools_rst">linuxtools_rst</a>  - 专注于 Linux 工具的最常用用法，以便读者能以最快时间掌握，并在工作中应用。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247498968&amp;idx=1&amp;sn=51fbaaeb9f1b49faa4089271b1b76ea4&amp;chksm=f9a22f11ced5a6070c95e2f812b227dcb753603d31824e949fafbd905071c161f1c926ddc349&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="计算机考研项目"><a href="#计算机考研项目" class="headerlink" title="计算机考研项目"></a>计算机考研项目</h3><ul><li><p><a href="https://github.com/hao14293/2021-Postgraduate-408">2021-Postgraduate-408</a> - 各个学校近几年考研初试真题（包括 408）。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23a4dced5b35b8319d4b9607528f6ea62287edf39c289f714b50352121a082ea3de1a5c31&amp;idx=1&amp;mid=2247494020&amp;scene=21&amp;sn=0e13760ed2dc13144a8f44b27c6bb9ef#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></p></li><li><p><a href="https://github.com/xiaolei565/aimto408">aimto408</a> -  408 统考资料和信息汇总。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23a4dced5b35b8319d4b9607528f6ea62287edf39c289f714b50352121a082ea3de1a5c31&amp;idx=1&amp;mid=2247494020&amp;scene=21&amp;sn=0e13760ed2dc13144a8f44b27c6bb9ef#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></p></li><li><p><a href="https://github.com/KimYangOfCat/CSPostgraduate-408-2021">CSPostgraduate-408-2021</a> - 408 统考资料和信息汇总。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23a4dced5b35b8319d4b9607528f6ea62287edf39c289f714b50352121a082ea3de1a5c31&amp;idx=1&amp;mid=2247494020&amp;scene=21&amp;sn=0e13760ed2dc13144a8f44b27c6bb9ef#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></p></li><li><p>北邮考研资料及信息汇总</p><ul><li><a href="https://github.com/ningzimu/See_you_in_BUPT">See_you_in_BUPT</a> </li><li><a href="https://github.com/ImportMengjie/KaoYan_807">KaoYan_807</a> </li><li><a href="https://github.com/Rvien/BUAA-National-post-graduate-entrance-examination">BUAA-National-post-graduate-entrance-examination</a> </li></ul></li><li><p>杭电考研资料及信息汇总</p><ul><li><a href="https://github.com/ztygalaxy/Hello_HDU">Hello_HDU</a> </li><li><a href="https://github.com/lambdacat94/HDUDS">HDUDS</a> </li></ul></li><li><p>南软考研资料及信息汇总</p><ul><li><a href="https://github.com/staresgroup/NJU-SE-GraduateEntrance">NJU-SE-GraduateEntrance</a></li></ul></li><li><p>南京大学考研资料及信息汇总</p><ul><li><a href="https://github.com/ThyrixYang/nju_cs_kaoyan_19">nju_cs_kaoyan_19</a></li><li><a href="https://github.com/nju-kaoyan/nju_csai_kaoyan">nju_csai_kaoyan</a></li><li><a href="https://github.com/JackeyLea/NJUCS">NJUCS</a></li></ul></li><li><p>北京大学考研资料及信息汇总</p><ul><li><a href="https://github.com/wenyiyi/PKU">PKU</a></li><li><a href="https://github.com/sdmengxiangyu/kao_yan">kao_yan</a></li></ul></li><li><p>南航考研资料及信息汇总</p><ul><li><a href="https://github.com/nuaa-cs-kaoyan/awesome-nuaa-cs-kaoyan">awesome-nuaa-cs-kaoyan</a></li></ul></li><li><p>清华大学考研资料及信息汇总</p><ul><li><a href="https://github.com/stellarkey/912_project">912_project</a></li><li><a href="https://github.com/xUhEngwAng/912-notes">912-notes</a></li></ul></li><li><p>华中科技大学考研资料及信息汇总</p><ul><li><a href="https://github.com/janglucky/KAOYAN">KAOYAN</a></li></ul></li><li><p>湖南大学考研资料及信息汇总</p><ul><li><a href="https://github.com/ZSCDumin/HunanUniversity">HunanUniversity</a></li></ul></li><li><p>哈工大考研资料及信息汇总</p><ul><li><a href="https://github.com/guoJohnny/-837-">-837-</a></li><li><a href="https://github.com/hakulamtta/HIT-C-language-review">HIT_C_language-review</a></li></ul></li><li><p>西工大考研资料及信息汇总</p><ul><li><a href="https://github.com/Scorpio-xu/2017NPU-Exam">2017NPU-Exam</a></li></ul></li><li><p>电子科技大学考研资料及信息汇总</p><ul><li><a href="https://github.com/Leslan/uestc_master_interview">uestc_master_interview</a></li></ul></li><li><p>上海交大考研资料及信息汇总</p><ul><li><a href="https://github.com/zakiso/Postgraduate_notebook_for_SJTU_CS">Postgraduate_notebook_for_SJTU_CS</a></li></ul></li><li><p>北航考研资料及信息汇总</p><ul><li><a href="https://github.com/finlay-liu/BuaaMasterQuestion">BuaaMasterQuestion</a></li><li><a href="https://github.com/chengyong1/beihang-university">beihang-university</a></li></ul></li><li><p>数一、数二解析</p><ul><li><a href="https://github.com/fjh1997/China-NPEE-math">China-NPEE-math</a></li></ul></li></ul><h2 id="大厂开源"><a href="#大厂开源" class="headerlink" title="大厂开源"></a>大厂开源</h2><h3 id="百度开源"><a href="#百度开源" class="headerlink" title="百度开源"></a>百度开源</h3><ul><li><a href="https://github.com/apache/echarts">echarts</a> - ECharts 是国内应用最广泛的前端可视化生成工具，像素级的渲染效果使得绘制的图像几近完美。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22929ced5a03ffded2c41fd257d3eb96be02195de3ca66a083177bf5f73e2f418728f7f06&amp;idx=1&amp;mid=2247498464&amp;scene=21&amp;sn=4f85123d6ca67578ca7bad8f7dc71453#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/PaddlePaddle/PaddleHub">PaddleHub</a> - 一个深度学习模型开发工具，它提供了很多训练好的人工智能算法模型。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22929ced5a03ffded2c41fd257d3eb96be02195de3ca66a083177bf5f73e2f418728f7f06&amp;idx=1&amp;mid=2247498464&amp;scene=21&amp;sn=4f85123d6ca67578ca7bad8f7dc71453#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/ksky521/nodePPT">nodePPT</a> - 迄今为止最好的网页版 PPT，基于 markdown 语法编写。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22929ced5a03ffded2c41fd257d3eb96be02195de3ca66a083177bf5f73e2f418728f7f06&amp;idx=1&amp;mid=2247498464&amp;scene=21&amp;sn=4f85123d6ca67578ca7bad8f7dc71453#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://www.minimamente.com/project/magic/">magic</a> - Magic 是一个轻量级 UI 组件，具有性能高效、代码量小等优势。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22929ced5a03ffded2c41fd257d3eb96be02195de3ca66a083177bf5f73e2f418728f7f06&amp;idx=1&amp;mid=2247498464&amp;scene=21&amp;sn=4f85123d6ca67578ca7bad8f7dc71453#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="腾讯开源"><a href="#腾讯开源" class="headerlink" title="腾讯开源"></a>腾讯开源</h3><ul><li><a href="https://github.com/Tencent/APIJSON">APIJSON</a> - APIJSON 是一种专为 API 而生的 JSON 网络传输协议以及基于这套协议实现的 ORM 库。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Tencent/wepy">wepy</a> - WePY 是一款让小程序支持组件化开发的框架，类似于 Vue 开发风格，它可以很方便的让开发者选择自己喜欢的开发风格去开发小程序。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Tencent/Tendis">Tendis</a> - 腾讯互娱 CROS DBA 团队和腾讯云数据库团队自主设计和研发的开源分布式高性能 KV 存储，推出了 Tendis。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Tencent/kbone">kbone</a> - kbone 实现了一个适配器，在适配层里模拟出了浏览器环境，让 Web 端的代码可以不做什么改动便可运行在小程序里。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Tencent/TencentOS-tiny">TencentOS-tiny</a> - 腾讯面向物联网领域开发的实时操作系统，具有低功耗、低资源占用、模块化、安全可靠等优点，可有效提升物联网终端产品开发效率。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Tencent/Hippy">Hippy</a> - Hippy 是一个跨端开发框架，开发者只写一套代码就直接运行于三个平台（iOS、Android 和 Web）。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Tencent/kbone">kbone</a> - kbone 实现了一个适配器，在适配层里模拟出了浏览器环境，让 Web 端的代码可以不做什么改动便可运行在小程序里。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="www.github.com/Tencent/secguide">secguides</a> - 面向开发人员梳理的代码安全指南，旨在梳理 API 层面的风险点并提供详实可行的安全编码方案。</li></ul><h3 id="阿里开源"><a href="#阿里开源" class="headerlink" title="阿里开源"></a>阿里开源</h3><ul><li><a href="https://github.com/alibaba/arthas">arthas</a> - Arthas 是阿里巴巴开源的 Java 诊断工具，深受开发者喜爱。<a href="https://github.com/alibaba/arthas"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://arthas.aliyun.com/doc/"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="github.com/alibaba/fastjson">fastjson</a> - fastjson 是一个 Java 库，可将 Java 对象转换为其 JSON 表示形式。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="github.com/alibaba/fastjson/wiki/Quick-Start-CN"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/druid">druid</a> - Druid 是一款强大的数据库连接池。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://github.com/alibaba/druid/wiki"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/ant-design/ant-design">ant-design</a> - 蚂蚁金服开源的一套企业级的前端设计语言和基于 React 的前端框架实现。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://ant.design/docs/react/introduce-cn"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/spring-cloud-incubator/spring-cloud-alibaba">spring-cloud-alibaba</a> - 微服务开发一站式解决方案，可以帮助阿里巴巴开源中间件与 Spring Cloud 体系更好的融合。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alipay/sofa-boot">sofa-boot</a> - 蚂蚁金服团队开源的基于 Spring Boot 的研发框架。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/dubbo">dubbo</a> - Dubbo 是阿里巴巴的一款高性能、轻量级的开源 Java RPC框架，可以和 Spring 框架无缝集成。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://dubbo.apache.org/zh/"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/easyexcel">easyexcel</a> - easyexcel 重写了 poi 对 07 版 Excel 的解析，大大降低了内存功耗。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/taobao/nginx-book">nginx-book</a> - Nginx 开发从入门到精通。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/antvis/g2">g2</a> - 数据驱动的高交互可视化图形语法，一条语句即可构建出各种各样的可交互的统计图表。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://fusion.design/">fusion</a> - 企业级中后台 UI 解决方案，旨在提升设计与开发之间 UI 构建效率的工作方式。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/BizCharts">BizCharts</a> - 基于 G2 封装的 React 图表库，数据可视化项目可能会用到。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/eggjs/egg">egg</a> - 企业级 Node.js 框架 。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/umijs/umi">umi</a> - 基于 React 的前端框架 。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://alibaba.github.io/dawn/">dawn</a> - 前端构建和工程化工具，简化并统一了开发人员的日常构建与开发相关的工作。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="http://ux.ant.design/">Ant UX</a> - 页面逻辑原型 ,可以用它来绘制页面与页面之间的逻辑图。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://alibaba.github.io/G3D/">G3D</a> - 一个基于 WebGL 的 Javascript 3D 绘图引擎。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/apache/incubator-weex/">Weex</a> - 跨平台移动开发工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/weex-ui">Weex Ui</a> - 基于 Weex 的 UI 组件库 。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://motion.ant.design/">Ant Motion</a> - 动效语言&amp; React 框架动效解决方案。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/hiloteam/Hilo">Hilo</a> - HTML5 互动游戏引擎。这个项目可以帮助开发者快速创建HTML5游戏。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/shepherdwind/velocity.js">Velocity.js</a> - JavaScript 模板引擎。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/taobaofed/react-web">React Web</a> - 通过与 React Native 一致的 API 构建 Web 应用。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/nuysoft/Mock">Mock.js</a> - 模拟数据生成器，帮助前端开发者独立于后端进行开发，帮助编写单元测试。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/noform">noForm</a> - 基于React的表单解决方案。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/jstorm">Jstorm</a> - 企业级流式计算引擎 。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/simpleimage">SimpleImage</a> - 一个 Java 图片处理的类库，包含功能有图片缩略、水印等。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/justified/tedis">tedis</a> - redis 的 java 客户端 。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alipay/sofa-rpc">sofa-rpc</a> - 高性能 Java RPC 框架。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/p3c">p3c</a> - Java 代码规约扫描插件，IntelliJ IDEA  搜索这款插件安装，时刻监控你写的代码规不规范。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/AliSQL">AliSQL</a> - 开源数据库，适合电商、云计算以及金融等行业环境。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/oceanbase">oceanbase</a> - 分布式数据库。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/happyfish100/fastdfs">fastdfs</a> - 分布式文件系统 。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/apache/rocketmq/">rocketmq</a> - RocketMQ 是一款分布式、队列模型的消息中间件。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/killme2008/Metamorphosis">Metamorphosis</a> - 分布式消息中间件。这是一个高性能、高可用、可扩展的分布式消息中间件。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/tengine">tengine</a> - 淘宝 Web 服务器。在Nginx的基础上，针对大访问量网站的需求，添加了很多高级功能和特性。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/tfs">tfs</a> - 分布式文件系统。这是一个高可扩展、高可用、高性能、面向互联网服务的分布式文件系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="字节开源"><a href="#字节开源" class="headerlink" title="字节开源"></a>字节开源</h3><ul><li><a href="www.github.com/DouyinFE/semi-design">semi-design</a> - 抖音企业级应用 UI 解决方案 Semi Design，由字节跳动抖音前端与 UED 团队设计、开发并维护，是一款包含设计语言、React 组件、主题等开箱即用的中后台解决方案，可用于快速搭建美观的 React 应用。</li></ul>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三光年</title>
      <link href="/posts/60b29a37.html"/>
      <url>/posts/60b29a37.html</url>
      
        <content type="html"><![CDATA[<p><strong>三年，三十年，三光年，在这些日子里勿忘我。</strong></p><p><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b8700535cd.jpg" alt="微信图片\_20231210232854.jpg" title="微信图片\_20231210232854.jpg"></p><p>时令该是小阳春，但我的严冬已然到来，命运大概确实热衷于同你我开玩笑。</p><p>至少你还在另一端，这个事实仍然让我心安。</p><p>我始终为你骄傲。即使有时候，你的存在对我而言已经有些像梦中在风里摇曳的风信子。</p><p>你早就能够独当一面，也完全有能力和决心去做出你想做的任何事情。</p><p>我又想起落雪了。当时二月初，站点的行道树全然白头，你把我从实验室里拽出来去公园散步。说将来可能看不到这种景致了，要多看看。</p><p>数支葡萄风信子都堆在我身侧，我忽然有些后悔那时没有多再看看你。</p><p>将来化作尘埃，能够伴随破碎的粒子流，在接下来无限的时间里，跨过那一点五光年的距离，缥缈银河，也算得上归宿吧。</p><p>至少那时不会再分别。</p>]]></content>
      
      
      <categories>
          
          <category> 随记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CHATGLM-6B清华AI语言模型</title>
      <link href="/posts/8d07c4e7.html"/>
      <url>/posts/8d07c4e7.html</url>
      
        <content type="html"><![CDATA[<p><del>猜猜我在清华找到了什么好东西</del><br><del>模型可以装在电脑里跑的，然后发现电脑带不动（悲）</del><br><span id="more"></span></p><h1 id="ChatGLM-6B"><a href="#ChatGLM-6B" class="headerlink" title="ChatGLM-6B"></a>ChatGLM-6B</h1><h1 id="https-gitclone-com-aiit-chat"><a href="#https-gitclone-com-aiit-chat" class="headerlink" title="https://gitclone.com/aiit/chat/"></a><a href="https://gitclone.com/aiit/chat/">https://gitclone.com/aiit/chat/</a></h1><p><del>页面嵌入各种bug</del></p><p>新一代开源模型 <a href="https://github.com/THUDM/ChatGLM3">ChatGLM3-6B</a> 已发布，拥有10B以下最强的基础模型，支持工具调用（Function Call）、代码执行（Code Interpreter）、Agent 任务等功能。</p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>ChatGLM-6B 是一个开源的、支持中英双语的对话语言模型，基于 <a href="https://github.com/THUDM/GLM">General Language Model (GLM)</a> 架构，具有 62 亿参数。结合模型量化技术，用户可以在消费级的显卡上进行本地部署（INT4 量化级别下最低只需 6GB 显存）。<br>ChatGLM-6B 使用了和 ChatGPT 相似的技术，针对中文问答和对话进行了优化。经过约 1T 标识符的中英双语训练，辅以监督微调、反馈自助、人类反馈强化学习等技术的加持，62 亿参数的 ChatGLM-6B 已经能生成相当符合人类偏好的回答，更多信息请参考我们的<a href="https://chatglm.cn/blog">博客</a>。欢迎通过 <a href="https://chatglm.cn">chatglm.cn</a> 体验更大规模的 ChatGLM 模型。</p><p>为了方便下游开发者针对自己的应用场景定制模型，我们同时实现了基于 <a href="https://github.com/THUDM/P-tuning-v2">P-Tuning v2</a> 的高效参数微调方法 <a href="ptuning/README.md">(使用指南)</a> ，INT4 量化级别下最低只需 7GB 显存即可启动微调。</p><p>ChatGLM-6B 权重对学术研究<strong>完全开放</strong>，在填写<a href="https://open.bigmodel.cn/mla/form">问卷</a>进行登记后<strong>亦允许免费商业使用</strong>。</p><hr><p>ChatGLM-6B 开源模型旨在与开源社区一起推动大模型技术发展，恳请开发者和大家遵守<a href="MODEL_LICENSE">开源协议</a>，勿将开源模型和代码及基于开源项目产生的衍生物用于任何可能给国家和社会带来危害的用途以及用于任何未经过安全评估和备案的服务。<strong>目前，本项目团队未基于 ChatGLM-6B 开发任何应用，包括网页端、安卓、苹果 iOS 及 Windows App 等应用。</strong></p><p>尽管模型在训练的各个阶段都尽力确保数据的合规性和准确性，但由于 ChatGLM-6B 模型规模较小，且模型受概率随机性因素影响，无法保证输出内容的准确性，且模型易被误导（详见<a href="README.md#局限性">局限性</a>）。<strong>本项目不承担开源模型和代码导致的数据安全、舆情风险或发生任何模型被误导、滥用、传播、不当利用而产生的风险和责任。</strong></p><h2 id="更新信息"><a href="#更新信息" class="headerlink" title="更新信息"></a>更新信息</h2><p><strong>[2023/07/25]</strong> 发布 <a href="https://github.com/THUDM/CodeGeeX2">CodeGeeX2</a> ，基于 ChatGLM2-6B 的代码生成模型，代码能力全面提升，更多特性包括：</p><ul><li><strong>更强大的代码能力</strong>：CodeGeeX2-6B 进一步经过了 600B 代码数据预训练，相比 CodeGeeX 一代模型，在代码能力上全面提升，<a href="https://huggingface.co/datasets/THUDM/humaneval-x">HumanEval-X</a> 评测集的六种编程语言均大幅提升 (Python +57%, C++ +71%, Java +54%, JavaScript +83%, Go +56%, Rust +321\%)，在Python上达到 35.9\% 的 Pass@1 一次通过率，超越规模更大的 StarCoder-15B。</li><li><strong>更优秀的模型特性</strong>：继承 ChatGLM2-6B 模型特性，CodeGeeX2-6B 更好支持中英文输入，支持最大 8192 序列长度，推理速度较一代 大幅提升，量化后仅需6GB显存即可运行，支持轻量级本地化部署。</li><li><strong>更全面的AI编程助手</strong>：CodeGeeX插件（<a href="https://marketplace.visualstudio.com/items?itemName=aminer.codegeex">VS Code</a>, <a href="https://plugins.jetbrains.com/plugin/20587-codegeex">Jetbrains</a>）后端升级，支持超过100种编程语言，新增上下文补全、跨文件补全等实用功能。结合 Ask CodeGeeX 交互式AI编程助手，支持中英文对话解决各种编程问题，包括且不限于代码解释、代码翻译、代码纠错、文档生成等，帮助程序员更高效开发。</li></ul><p><strong>[2023/06/25]</strong> 发布 <a href="https://github.com/THUDM/ChatGLM2-6B">ChatGLM2-6B</a>，ChatGLM-6B 的升级版本，在保留了了初代模型对话流畅、部署门槛较低等众多优秀特性的基础之上，ChatGLM<strong>2</strong>-6B 引入了如下新特性：</p><ol><li><strong>更强大的性能</strong>：基于 ChatGLM 初代模型的开发经验，我们全面升级了 ChatGLM2-6B 的基座模型。ChatGLM2-6B 使用了 <a href="https://github.com/THUDM/GLM">GLM</a> 的混合目标函数，经过了 1.4T 中英标识符的预训练与人类偏好对齐训练，<a href="#评测结果">评测结果</a>显示，相比于初代模型，ChatGLM2-6B 在 MMLU（+23%）、CEval（+33%）、GSM8K（+571%） 、BBH（+60%）等数据集上的性能取得了大幅度的提升，在同尺寸开源模型中具有较强的竞争力。</li><li><strong>更长的上下文</strong>：基于 <a href="https://github.com/HazyResearch/flash-attention">FlashAttention</a> 技术，我们将基座模型的上下文长度（Context Length）由 ChatGLM-6B 的 2K 扩展到了 32K，并在对话阶段使用 8K 的上下文长度训练，允许更多轮次的对话。但当前版本的 ChatGLM2-6B 对单轮超长文档的理解能力有限，我们会在后续迭代升级中着重进行优化。</li><li><strong>更高效的推理</strong>：基于 <a href="http://arxiv.org/abs/1911.02150">Multi-Query Attention</a> 技术，ChatGLM2-6B 有更高效的推理速度和更低的显存占用：在官方的模型实现下，推理速度相比初代提升了 42%，INT4 量化下，6G 显存支持的对话长度由 1K 提升到了 8K。</li></ol><p>更多信息参见 <a href="https://github.com/THUDM/ChatGLM2-6B">ChatGLM2-6B</a>。</p><p><strong>[2023/06/14]</strong> 发布 <a href="https://github.com/THUDM/WebGLM">WebGLM</a>，一项被接受于KDD 2023的研究工作，支持利用网络信息生成带有准确引用的长回答。</p><p><strong>[2023/05/17]</strong> 发布 <a href="https://github.com/THUDM/VisualGLM-6B">VisualGLM-6B</a>，一个支持图像理解的多模态对话语言模型。</p><p>可以通过本仓库中的 <a href="cli_demo_vision.py">cli_demo_vision.py</a> 和 <a href="web_demo_vision.py">web_demo_vision.py</a> 来运行命令行和网页 Demo。注意 VisualGLM-6B 需要额外安装 <a href="https://github.com/THUDM/SwissArmyTransformer/">SwissArmyTransformer</a> 和 torchvision。更多信息参见 <a href="https://github.com/THUDM/VisualGLM-6B">VisualGLM-6B</a>。</p><p><strong>[2023/05/15]</strong> 更新 v1.1 版本 checkpoint，训练数据增加英文指令微调数据以平衡中英文数据比例，解决英文回答中夹杂中文词语的现象。</p><h2 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h2><p>对 ChatGLM 进行加速的开源项目：</p><ul><li><a href="https://huggingface.co/TMElyralab/lyraChatGLM">lyraChatGLM</a>: 对 ChatGLM-6B 进行推理加速，最高可以实现 9000+ tokens/s 的推理速度</li><li><a href="https://github.com/wangzhaode/ChatGLM-MNN">ChatGLM-MNN</a>: 一个基于 MNN 的 ChatGLM-6B C++ 推理实现，支持根据显存大小自动分配计算任务给 GPU 和 CPU</li><li><a href="https://github.com/Jittor/JittorLLMs">JittorLLMs</a>：最低3G显存或者没有显卡都可运行 ChatGLM-6B FP16， 支持Linux、windows、Mac部署</li><li><a href="https://github.com/MegEngine/InferLLM">InferLLM</a>：轻量级 C++ 推理，可以实现本地 x86，Arm 处理器上实时聊天，手机上也同样可以实时运行，运行内存只需要 4G</li></ul><p>基于或使用了 ChatGLM-6B 的开源项目：</p><ul><li><a href="https://github.com/imClumsyPanda/langchain-ChatGLM">langchain-ChatGLM</a>：基于 langchain 的 ChatGLM 应用，实现基于可扩展知识库的问答</li><li><a href="https://github.com/l15y/wenda">闻达</a>：大型语言模型调用平台，基于 ChatGLM-6B 实现了类 ChatPDF 功能</li><li><a href="https://github.com/initialencounter/glm-bot">glm-bot</a>：将ChatGLM接入Koishi可在各大聊天平台上调用ChatGLM</li><li><a href="https://github.com/GaiZhenbiao/ChuanhuChatGPT">Chuanhu Chat</a>: 为各个大语言模型和在线模型API提供美观易用、功能丰富、快速部署的用户界面，支持ChatGLM-6B。</li></ul><p>支持 ChatGLM-6B 和相关应用在线训练的示例项目：</p><ul><li><a href="https://www.heywhale.com/mw/project/6436d82948f7da1fee2be59e">ChatGLM-6B 的部署与微调教程</a></li><li><a href="https://www.heywhale.com/mw/project/643977aa446c45f4592a1e59">ChatGLM-6B 结合 langchain 实现本地知识库 QA Bot</a></li></ul><p>第三方评测：</p><ul><li><a href="https://arxiv.org/abs/2304.12986">Measuring Massive Multitask Chinese Understanding</a></li></ul><p>更多开源项目参见 <a href="PROJECT.md">PROJECT.md</a></p><h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><h3 id="硬件需求"><a href="#硬件需求" class="headerlink" title="硬件需求"></a>硬件需求</h3><div class="table-container"><table><thead><tr><th><strong>量化等级</strong></th><th><strong>最低 GPU 显存</strong>（推理）</th><th><strong>最低 GPU 显存</strong>（高效参数微调）</th></tr></thead><tbody><tr><td>FP16（无量化）</td><td>13 GB</td><td>14 GB</td></tr><tr><td>INT8</td><td>8 GB</td><td>9 GB</td></tr><tr><td>INT4</td><td>6 GB</td><td>7 GB</td></tr></tbody></table></div><h3 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h3><p>使用 pip 安装依赖：<code>pip install -r requirements.txt</code>，其中 <code>transformers</code> 库版本推荐为 <code>4.27.1</code>，但理论上不低于 <code>4.23.1</code> 即可。</p><p>此外，如果需要在 cpu 上运行量化后的模型，还需要安装 <code>gcc</code> 与 <code>openmp</code>。多数 Linux 发行版默认已安装。对于 Windows ，可在安装 <a href="https://jmeubank.github.io/tdm-gcc/">TDM-GCC</a> 时勾选 <code>openmp</code>。 Windows 测试环境 <code>gcc</code> 版本为 <code>TDM-GCC 10.3.0</code>， Linux 为 <code>gcc 11.3.0</code>。在 MacOS 上请参考 <a href="FAQ.md#q1">Q1</a>。</p><h3 id="代码调用"><a href="#代码调用" class="headerlink" title="代码调用"></a>代码调用</h3><p>可以通过如下代码调用 ChatGLM-6B 模型来生成对话：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> transformers <span class="keyword">import</span> AutoTokenizer, AutoModel</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tokenizer = AutoTokenizer.from_pretrained(<span class="string">&quot;THUDM/chatglm-6b&quot;</span>, trust_remote_code=<span class="literal">True</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>model = AutoModel.from_pretrained(<span class="string">&quot;THUDM/chatglm-6b&quot;</span>, trust_remote_code=<span class="literal">True</span>).half().cuda()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>model = model.<span class="built_in">eval</span>()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>response, history = model.chat(tokenizer, <span class="string">&quot;你好&quot;</span>, history=[])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(response)</span><br><span class="line">你好👋!我是人工智能助手 ChatGLM-6B,很高兴见到你,欢迎问我任何问题。</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>response, history = model.chat(tokenizer, <span class="string">&quot;晚上睡不着应该怎么办&quot;</span>, history=history)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(response)</span><br><span class="line">晚上睡不着可能会让你感到焦虑或不舒服,但以下是一些可以帮助你入睡的方法:</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> 制定规律的睡眠时间表:保持规律的睡眠时间表可以帮助你建立健康的睡眠习惯,使你更容易入睡。尽量在每天的相同时间上床,并在同一时间起床。</span><br><span class="line"><span class="number">2.</span> 创造一个舒适的睡眠环境:确保睡眠环境舒适,安静,黑暗且温度适宜。可以使用舒适的床上用品,并保持房间通风。</span><br><span class="line"><span class="number">3.</span> 放松身心:在睡前做些放松的活动,例如泡个热水澡,听些轻柔的音乐,阅读一些有趣的书籍等,有助于缓解紧张和焦虑,使你更容易入睡。</span><br><span class="line"><span class="number">4.</span> 避免饮用含有咖啡因的饮料:咖啡因是一种刺激性物质,会影响你的睡眠质量。尽量避免在睡前饮用含有咖啡因的饮料,例如咖啡,茶和可乐。</span><br><span class="line"><span class="number">5.</span> 避免在床上做与睡眠无关的事情:在床上做些与睡眠无关的事情,例如看电影,玩游戏或工作等,可能会干扰你的睡眠。</span><br><span class="line"><span class="number">6.</span> 尝试呼吸技巧:深呼吸是一种放松技巧,可以帮助你缓解紧张和焦虑,使你更容易入睡。试着慢慢吸气,保持几秒钟,然后缓慢呼气。</span><br><span class="line"></span><br><span class="line">如果这些方法无法帮助你入睡,你可以考虑咨询医生或睡眠专家,寻求进一步的建议。</span><br></pre></td></tr></table></figure><p>模型的实现仍然处在变动中。如果希望固定使用的模型实现以保证兼容性，可以在 <code>from_pretrained</code> 的调用中增加 <code>revision=&quot;v1.1.0&quot;</code> 参数。<code>v1.1.0</code> 是当前最新的版本号，完整的版本列表参见 <a href="https://huggingface.co/THUDM/chatglm-6b#change-log">Change Log</a>。</p><h3 id="从本地加载模型"><a href="#从本地加载模型" class="headerlink" title="从本地加载模型"></a>从本地加载模型</h3><p>以上代码会由 <code>transformers</code> 自动下载模型实现和参数。完整的模型实现可以在 <a href="https://huggingface.co/THUDM/chatglm-6b">Hugging Face Hub</a>。如果你的网络环境较差，下载模型参数可能会花费较长时间甚至失败。此时可以先将模型下载到本地，然后从本地加载。</p><p>从 Hugging Face Hub 下载模型需要先<a href="https://docs.github.com/zh/repositories/working-with-files/managing-large-files/installing-git-large-file-storage">安装Git LFS</a>，然后运行<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://huggingface.co/THUDM/chatglm-6b</span><br></pre></td></tr></table></figure></p><p>如果你从 Hugging Face Hub 上下载 checkpoint 的速度较慢，可以只下载模型实现<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GIT_LFS_SKIP_SMUDGE=1 git clone https://huggingface.co/THUDM/chatglm-6b</span><br></pre></td></tr></table></figure><br>然后从<a href="https://cloud.tsinghua.edu.cn/d/fb9f16d6dc8f482596c2/">这里</a>手动下载模型参数文件，并将下载的文件替换到本地的 <code>chatglm-6b</code> 目录下。</p><p>将模型下载到本地之后，将以上代码中的 <code>THUDM/chatglm-6b</code> 替换为你本地的 <code>chatglm-6b</code> 文件夹的路径，即可从本地加载模型。</p><p><strong>Optional</strong> 模型的实现仍然处在变动中。如果希望固定使用的模型实现以保证兼容性，可以执行<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout v1.1.0</span><br></pre></td></tr></table></figure></p><h2 id="Demo-amp-API"><a href="#Demo-amp-API" class="headerlink" title="Demo &amp; API"></a>Demo &amp; API</h2><p>我们提供了一个基于 <a href="https://gradio.app">Gradio</a> 的网页版 Demo 和一个命令行 Demo。使用时首先需要下载本仓库：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/THUDM/ChatGLM-6B</span><br><span class="line">cd ChatGLM-6B</span><br></pre></td></tr></table></figure><h3 id="网页版-Demo"><a href="#网页版-Demo" class="headerlink" title="网页版 Demo"></a>网页版 Demo</h3><p><img src="./CHATGLM-6B/resources/web-demo.gif" alt="web-demo.gif"></p><p>首先安装 Gradio：<code>pip install gradio</code>，然后运行仓库中的 <a href="web_demo.py">web_demo.py</a>： </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python web_demo.py</span><br></pre></td></tr></table></figure><p>程序会运行一个 Web Server，并输出地址。在浏览器中打开输出的地址即可使用。最新版 Demo 实现了打字机效果，速度体验大大提升。注意，由于国内 Gradio 的网络访问较为缓慢，启用 <code>demo.queue().launch(share=True, inbrowser=True)</code> 时所有网络会经过 Gradio 服务器转发，导致打字机体验大幅下降，现在默认启动方式已经改为 <code>share=False</code>，如有需要公网访问的需求，可以重新修改为 <code>share=True</code> 启动。</p><p>感谢 <a href="https://github.com/AdamBear">@AdamBear</a> 实现了基于 Streamlit 的网页版 Demo，运行方式见<a href="https://github.com/THUDM/ChatGLM-6B/pull/117">#117</a>.</p><h3 id="命令行-Demo"><a href="#命令行-Demo" class="headerlink" title="命令行 Demo"></a>命令行 Demo</h3><p><img src="./CHATGLM-6B/resources/cli-demo.png" alt="cli-demo.png"></p><p>运行仓库中 <a href="cli_demo.py">cli_demo.py</a>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python cli_demo.py</span><br></pre></td></tr></table></figure><p>程序会在命令行中进行交互式的对话，在命令行中输入指示并回车即可生成回复，输入 <code>clear</code> 可以清空对话历史，输入 <code>stop</code> 终止程序。</p><h3 id="API部署"><a href="#API部署" class="headerlink" title="API部署"></a>API部署</h3><p>首先需要安装额外的依赖 <code>pip install fastapi uvicorn</code>，然后运行仓库中的 <a href="api.py">api.py</a>：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python api.py</span><br></pre></td></tr></table></figure><br>默认部署在本地的 8000 端口，通过 POST 方法进行调用<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST &quot;http://127.0.0.1:8000&quot; \</span><br><span class="line">     -H &#x27;Content-Type: application/json&#x27; \</span><br><span class="line">     -d &#x27;&#123;&quot;prompt&quot;: &quot;你好&quot;, &quot;history&quot;: []&#125;&#x27;</span><br></pre></td></tr></table></figure><br>得到的返回值为<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;response&quot;:&quot;你好👋！我是人工智能助手 ChatGLM-6B，很高兴见到你，欢迎问我任何问题。&quot;,</span><br><span class="line">  &quot;history&quot;:[[&quot;你好&quot;,&quot;你好👋！我是人工智能助手 ChatGLM-6B，很高兴见到你，欢迎问我任何问题。&quot;]],</span><br><span class="line">  &quot;status&quot;:200,</span><br><span class="line">  &quot;time&quot;:&quot;2023-03-23 21:38:40&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="低成本部署"><a href="#低成本部署" class="headerlink" title="低成本部署"></a>低成本部署</h2><h3 id="模型量化"><a href="#模型量化" class="headerlink" title="模型量化"></a>模型量化</h3><p>默认情况下，模型以 FP16 精度加载，运行上述代码需要大概 13GB 显存。如果你的 GPU 显存有限，可以尝试以量化方式加载模型，使用方法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按需修改，目前只支持 4/8 bit 量化</span></span><br><span class="line">model = AutoModel.from_pretrained(<span class="string">&quot;THUDM/chatglm-6b&quot;</span>, trust_remote_code=<span class="literal">True</span>).quantize(<span class="number">8</span>).half().cuda()</span><br></pre></td></tr></table></figure><p>进行 2 至 3 轮对话后，8-bit 量化下 GPU 显存占用约为 10GB，4-bit 量化下仅需 6GB 占用。随着对话轮数的增多，对应消耗显存也随之增长，由于采用了相对位置编码，理论上 ChatGLM-6B 支持无限长的 context-length，但总长度超过 2048（训练长度）后性能会逐渐下降。</p><p>模型量化会带来一定的性能损失，经过测试，ChatGLM-6B 在 4-bit 量化下仍然能够进行自然流畅的生成。使用 <a href="https://arxiv.org/abs/2210.17323">GPT-Q</a> 等量化方案可以进一步压缩量化精度/提升相同量化精度下的模型性能，欢迎大家提出对应的 Pull Request。</p><p>量化过程需要在内存中首先加载 FP16 格式的模型，消耗大概 13GB 的内存。如果你的内存不足的话，可以直接加载量化后的模型，INT4 量化后的模型仅需大概 5.2GB 的内存：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># INT8 量化的模型将&quot;THUDM/chatglm-6b-int4&quot;改为&quot;THUDM/chatglm-6b-int8&quot;</span></span><br><span class="line">model = AutoModel.from_pretrained(<span class="string">&quot;THUDM/chatglm-6b-int4&quot;</span>, trust_remote_code=<span class="literal">True</span>).half().cuda()</span><br></pre></td></tr></table></figure><br>量化模型的参数文件也可以从<a href="https://cloud.tsinghua.edu.cn/d/674208019e314311ab5c/">这里</a>手动下载。</p><h3 id="CPU-部署"><a href="#CPU-部署" class="headerlink" title="CPU 部署"></a>CPU 部署</h3><p>如果你没有 GPU 硬件的话，也可以在 CPU 上进行推理，但是推理速度会更慢。使用方法如下（需要大概 32GB 内存）<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model = AutoModel.from_pretrained(<span class="string">&quot;THUDM/chatglm-6b&quot;</span>, trust_remote_code=<span class="literal">True</span>).<span class="built_in">float</span>()</span><br></pre></td></tr></table></figure></p><p>如果你的内存不足，可以直接加载量化后的模型：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># INT8 量化的模型将&quot;THUDM/chatglm-6b-int4&quot;改为&quot;THUDM/chatglm-6b-int8&quot;</span></span><br><span class="line">model = AutoModel.from_pretrained(<span class="string">&quot;THUDM/chatglm-6b-int4&quot;</span>,trust_remote_code=<span class="literal">True</span>).<span class="built_in">float</span>()</span><br></pre></td></tr></table></figure></p><p>如果遇到了报错 <code>Could not find module &#39;nvcuda.dll&#39;</code> 或者 <code>RuntimeError: Unknown platform: darwin</code> (MacOS) ，请<a href="README.md#从本地加载模型">从本地加载模型</a></p><h3 id="Mac-部署"><a href="#Mac-部署" class="headerlink" title="Mac 部署"></a>Mac 部署</h3><p>对于搭载了 Apple Silicon 或者 AMD GPU 的Mac，可以使用 MPS 后端来在 GPU 上运行 ChatGLM-6B。需要参考 Apple 的 <a href="https://developer.apple.com/metal/pytorch">官方说明</a> 安装 PyTorch-Nightly（正确的版本号应该是2.1.0.dev2023xxxx，而不是2.0.0）。</p><p>目前在 MacOS 上只支持<a href="README.md#从本地加载模型">从本地加载模型</a>。将代码中的模型加载改为从本地加载，并使用 mps 后端：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model = AutoModel.from_pretrained(<span class="string">&quot;your local path&quot;</span>, trust_remote_code=<span class="literal">True</span>).half().to(<span class="string">&#x27;mps&#x27;</span>)</span><br></pre></td></tr></table></figure></p><p>加载半精度的 ChatGLM-6B 模型需要大概 13GB 内存。内存较小的机器（比如 16GB 内存的 MacBook Pro），在空余内存不足的情况下会使用硬盘上的虚拟内存，导致推理速度严重变慢。此时可以使用量化后的模型如 chatglm-6b-int4。因为 GPU 上量化的 kernel 是使用 CUDA 编写的，因此无法在 MacOS 上使用，只能使用 CPU 进行推理。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># INT8 量化的模型将&quot;THUDM/chatglm-6b-int4&quot;改为&quot;THUDM/chatglm-6b-int8&quot;</span></span><br><span class="line">model = AutoModel.from_pretrained(<span class="string">&quot;THUDM/chatglm-6b-int4&quot;</span>,trust_remote_code=<span class="literal">True</span>).<span class="built_in">float</span>()</span><br></pre></td></tr></table></figure><br>为了充分使用 CPU 并行，还需要<a href="FAQ.md#q1">单独安装 OpenMP</a>。</p><h3 id="多卡部署"><a href="#多卡部署" class="headerlink" title="多卡部署"></a>多卡部署</h3><p>如果你有多张 GPU，但是每张 GPU 的显存大小都不足以容纳完整的模型，那么可以将模型切分在多张GPU上。首先安装 accelerate: <code>pip install accelerate</code>，然后通过如下方法加载模型：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> utils <span class="keyword">import</span> load_model_on_gpus</span><br><span class="line">model = load_model_on_gpus(<span class="string">&quot;THUDM/chatglm-6b&quot;</span>, num_gpus=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><br>即可将模型部署到两张 GPU 上进行推理。你可以将 <code>num_gpus</code> 改为你希望使用的 GPU 数。默认是均匀切分的，你也可以传入 <code>device_map</code> 参数来自己指定。 </p><h2 id="高效参数微调"><a href="#高效参数微调" class="headerlink" title="高效参数微调"></a>高效参数微调</h2><p>基于 <a href="https://github.com/THUDM/P-tuning-v2">P-tuning v2</a> 的高效参数微调。具体使用方法详见 <a href="ptuning/README.md">ptuning/README.md</a>。</p><h2 id="ChatGLM-6B-示例"><a href="#ChatGLM-6B-示例" class="headerlink" title="ChatGLM-6B 示例"></a>ChatGLM-6B 示例</h2><p>以下是一些使用 <code>web_demo.py</code> 得到的示例截图。<br><img src="./CHATGLM-6B/examples/ad-writing-2.png" alt="ad-writing-2.png"><br><img src="./CHATGLM-6B/examples/blog-outline.png" alt="blog-outline.png"><br><img src="./CHATGLM-6B/examples/comments-writing.png" alt="comments-writing.png"><br><img src="./CHATGLM-6B/examples/email-writing-1.png" alt="email-writing-1.png"><br><img src="./CHATGLM-6B/examples/email-writing-2.png" alt="email-writing-2.png"><br><img src="./CHATGLM-6B/examples/information-extraction.png" alt="information-extraction.png"><br><img src="./CHATGLM-6B/examples/role-play.png" alt="role-play.png"><br><img src="./CHATGLM-6B/examples/self-introduction.png" alt="self-introduction.png"><br><img src="./CHATGLM-6B/examples/sport.png" alt="sport.png"><br><img src="./CHATGLM-6B/examples/tour-guide.png" alt="tour-guide.png"></p><h2 id="局限性"><a href="#局限性" class="headerlink" title="局限性"></a>局限性</h2><p>由于 ChatGLM-6B 的小规模，其能力仍然有许多局限性。以下是我们目前发现的一些问题：</p><ul><li><p>模型容量较小：6B 的小容量，决定了其相对较弱的模型记忆和语言能力。在面对许多事实性知识任务时，ChatGLM-6B 可能会生成不正确的信息；它也不擅长逻辑类问题（如数学、编程）的解答。</p><p> <img src="./CHATGLM-6B/limitations/factual_error.png" alt="factual_error.png"><br><img src="./CHATGLM-6B/limitations/math_error.png" alt="math_error.png"></p></li><li><p>产生有害说明或有偏见的内容：ChatGLM-6B 只是一个初步与人类意图对齐的语言模型，可能会生成有害、有偏见的内容。（内容可能具有冒犯性，此处不展示）</p></li><li><p>英文能力不足：ChatGLM-6B 训练时使用的指示/回答大部分都是中文的，仅有极小一部分英文内容。因此，如果输入英文指示，回复的质量远不如中文，甚至与中文指示下的内容矛盾，并且出现中英夹杂的情况。</p></li><li><p>易被误导，对话能力较弱：ChatGLM-6B 对话能力还比较弱，而且 “自我认知” 存在问题，并很容易被误导并产生错误的言论。例如当前版本的模型在被误导的情况下，会在自我认知上发生偏差。</p><p> <img src="./CHATGLM-6B/limitations/self-confusion_google.jpg" alt="self-confusion_google.jpg"><br><img src="./CHATGLM-6B/limitations/self-confusion_openai.jpg" alt="self-confusion_openai.jpg"><br><img src="./CHATGLM-6B/limitations/self-confusion_tencent.jpg" alt="self-confusion_tencent.jpg"></p></li></ul><h2 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h2><p>本仓库的代码依照 <a href="LICENSE">Apache-2.0</a> 协议开源，ChatGLM-6B 模型的权重的使用则需要遵循 <a href="MODEL_LICENSE">Model License</a>。ChatGLM-6B 权重对学术研究<strong>完全开放</strong>，在填写<a href="https://open.bigmodel.cn/mla/form">问卷</a>进行登记后<strong>亦允许免费商业使用</strong>。</p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>如果你觉得我们的工作有帮助的话，请考虑引用下列论文</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@article&#123;zeng2022glm,</span><br><span class="line">  title=&#123;Glm<span class="number">-130</span>b: An open <span class="keyword">bilingual </span>pre-trained model&#125;,</span><br><span class="line">  author=&#123;Zeng, Aohan <span class="keyword">and </span>Liu, Xiao <span class="keyword">and </span>Du, Zhengxiao <span class="keyword">and </span>Wang, Zihan <span class="keyword">and </span>Lai, Hanyu <span class="keyword">and </span><span class="keyword">Ding, </span>Ming <span class="keyword">and </span>Yang, Zhuoyi <span class="keyword">and </span>Xu, Yifan <span class="keyword">and </span>Zheng, Wendi <span class="keyword">and </span>Xia, Xiao <span class="keyword">and </span>others&#125;,</span><br><span class="line">  <span class="keyword">journal=&#123;arXiv </span>preprint arXiv:<span class="number">2210</span>.<span class="number">02414</span>&#125;,</span><br><span class="line">  year=&#123;<span class="number">2022</span>&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@inproceedings&#123;du2022glm,</span><br><span class="line">  title=&#123;GLM: General Language Model Pretraining with Autoregressive <span class="keyword">Blank </span>Infilling&#125;,</span><br><span class="line">  author=&#123;Du, Zhengxiao <span class="keyword">and </span>Qian, Yujie <span class="keyword">and </span>Liu, Xiao <span class="keyword">and </span><span class="keyword">Ding, </span>Ming <span class="keyword">and </span>Qiu, <span class="keyword">Jiezhong </span><span class="keyword">and </span>Yang, Zhilin <span class="keyword">and </span>Tang, <span class="keyword">Jie&#125;,</span></span><br><span class="line"><span class="keyword"></span>  <span class="keyword">booktitle=&#123;Proceedings </span>of the <span class="number">60</span>th Annual Meeting of the Association for Computational Linguistics (Volume <span class="number">1</span>: Long Papers)&#125;,</span><br><span class="line">  pages=&#123;<span class="number">320</span>--<span class="number">335</span>&#125;,</span><br><span class="line">  year=&#123;<span class="number">2022</span>&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> AI工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页嵌套</title>
      <link href="/posts/54821428.html"/>
      <url>/posts/54821428.html</url>
      
        <content type="html"><![CDATA[<h1 id="如何将一个HTML页面嵌套在另一个页面中"><a href="#如何将一个HTML页面嵌套在另一个页面中" class="headerlink" title="如何将一个HTML页面嵌套在另一个页面中"></a><a href="https://www.cnblogs.com/Tanghongchang/p/7194180.html">如何将一个HTML页面嵌套在另一个页面中</a></h1><p><strong>一 在原页面嵌入其他页面</strong></p><p>1、使用<strong>iframe</strong>框架</p><p>客户端页面嵌套可以使用iframe的方法，弊端是必须事先想好被嵌套的页面在首页中要占多大的位置。</p><p>如果被嵌套页面太大，超过事先定义的宽度或高度，则首页会出现滚动条。这也许正是你所需要的，</p><p>但也许会完全破坏主页的设计。</p><p>  <strong> &lt; iframe &gt;——— &lt; / iframe &gt;</strong></p><p><strong>\<iframe  src="要放在框架里面的网址或文件" height="" width=""></strong>  <strong>\&lt;/ifrmae&gt;</strong>\</p><pre><code> 例：** \&lt;iframe src=&quot;text.asp&quot; height=&quot;200&quot; width=&quot;600&quot;&gt;   **</code></pre><p><strong>                       \&lt;a href=”</strong>text.asp<strong>“&gt;</strong></p><p><strong>                          你的浏览器不支持iframe页面嵌套，请点击这里访问页面内容。</strong></p><p><strong>                       \&lt;/a&gt;</strong></p><p><strong>              \&lt;/ifrmae &gt;</strong></p><pre><code>         可加属性    scrolling=&quot;No&quot;     意为滚动条不随内容改变而出现      -- 多余的内容会被自动隐藏！                         frameborder=&quot;0&quot;   嵌套页面边框                         leftmargin=&quot;0&quot;      左边距                         topmargin=&quot;0&quot;      上边距                         onscroll=&quot;true&quot;      当元素滚动条被滚动时执行脚本 ,在HTML 5 中定义了该元素</code></pre><p>  插入\<a>，是因为老版本的浏览器和搜索引擎不支持iframe，虽然现在已经</p><p>很少有人还会使用Netscape 4这样老的浏览器了，但是几乎所有人都会使用象Google这样的搜索引擎。</p><p>在iframe里面加上超级链接可以帮助搜索引擎找到网页的内容。</p><p><strong>2、SSI (Server Side Include)</strong></p><p>SSI是一种简单的动态网页制作技术，但是有些服务器要求网页文件扩展名为.shtml才能识别文件中SSI命令。所以如果你的SSI命令看起来不工作，先别放弃，试着把文件扩展名改为.shtml，也许会成功。如果知道自己的服务器是否支持SSI，请看另一篇文章。</p><p>使用SSI一个局限性是页面一定要放在网页服务器上才能看到效果，在本地是不好调试的。当然，如果非要在本地调试，就本地装一个Apache服务器好了。</p><p>比如你想在每个网页的底部加上同样的版权信息，像</p><blockquote><p>© 2009 程序员实验室 版权所有</p></blockquote><p>可以把这行信息放到一个叫做footer.html的文件里，footer.html的内容为：</p><blockquote><p><strong>\<center> \&copy; 程序员实验室 版权所有\</center>;</strong></p></blockquote><p>这样同一路径下的其他页面文件要包含footer.html的SSI命令是：</p><p><strong>         \&lt;!- #include virtual=”footer.html” -&gt;（常用）</strong></p><p>或者</p><p><strong><code>&lt;!- #include file=&quot;footer.html&quot; -&gt;</code></strong></p><p>这两者的几乎是一样的，不同之处在于include virtual后面取的是一个URL形式的路径，甚至还可以执行一个CGI程序并包含其输出结果，如果你的服务器支持CGI的话。而include file后面取的是一个文件系统路径，并且不能执行CGI程序。两者都可以接受相对路径，所以对上面这个简单例子，两者的效果是一样的。如果你不知道URL路径与文件系统路径两者的区别的话，就用include virtual</p><p><strong>3、ASP和ASP<a href="http://lib.csdn.net/base/dotnet" title=".NET知识库">.Net</a></strong></p><p>如果你使用的是老式的ASP，则语法是与上面SSI一样的，不需要任何修改，只要把命令所在文件的扩展名改为.asp即可。</p><p>对于ASP.NET，也是类似，不同之处在于，因为SSI命令是在ASP命令运行之前被首先编译，所以文件名中不能够使用ASP.NET的变量。如果一定要用的话，就用ASP.NET的命令来做文件嵌套吧。</p><p>比如：</p><pre><code>&lt;%          Response.WriteFile (&quot;footer.html&quot;)%&gt;</code></pre><p>更多关于怎样在ASP.NET中实现动态文件嵌套，请参考<a href="http://support.microsoft.com/kb/306575/EN-US/">微软的这篇文章</a>。</p><p><strong>4、PHP</strong></p><p>如果你的服务器支持PHP的话，用PHP引用footer.html文件的写法如下：</p><p><code>&lt;?php include(&quot;footer.html&quot;); ?&gt;</code></p><p>这句命令所在的文件扩展名必须被为.php。</p><p>除了引用本服务器上的文件，PHP的include命令还可以用来引用其它网站上的html文件，比如：</p><p><code>&lt;?php include(http://www.prglab.com/examples/footer.html); ?&gt;</code></p><p>当然你要得到其它网站的允许才能引用别人的文件。</p><p><strong>5、JSP （<a href="http://lib.csdn.net/base/java" title="Java 知识库">Java </a>Server Page)</strong></p><p>JSP文件需要在基于<a href="http://lib.csdn.net/base/java" title="Java 知识库">Java</a>的服务器上运行，比如<a href="http://tomcat.apache.org/">Apache Tomcat</a>。JSP包含文件的语法是：</p><p><code>&lt;%@ include file=&quot;footer.html&quot; %&gt;</code></p><p> <img src="./网页嵌套/s122.png" alt="s122.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SD模型原理</title>
      <link href="/posts/3c803fb8.html"/>
      <url>/posts/3c803fb8.html</url>
      
        <content type="html"><![CDATA[<h2 id="SD模型原理"><a href="#SD模型原理" class="headerlink" title="SD模型原理"></a><strong>SD模型原理</strong></h2><p>SD是<a href="https://link.zhihu.com/?target=https%3A//github.com/CompVis">CompVis</a>、<a href="https://link.zhihu.com/?target=https%3A//stability.ai/">Stability AI</a>和<a href="https://link.zhihu.com/?target=https%3A//laion.ai/">LAION</a>等公司研发的一个文生图模型，它的模型和代码是开源的，而且训练数据<a href="https://link.zhihu.com/?target=https%3A//laion.ai/blog/laion-5b/">LAION-5B</a>也是开源的。SD在开源90天github仓库就收获了<strong>33K的stars</strong>，可见这个模型是多受欢迎。</p><p><img src="https://pic2.zhimg.com/80/v2-45c26a5ea3556598b5ce39348f672af5_1440w.webp" alt=""></p><p>SD是一个<strong>基于latent的扩散模型</strong>，它在UNet中引入text condition来实现基于文本生成图像。SD的核心来源于<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2112.10752">Latent Diffusion</a>这个工作，常规的扩散模型是基于pixel的生成模型，而Latent Diffusion是基于latent的生成模型，它先采用一个autoencoder将图像压缩到latent空间，然后用扩散模型来生成图像的latents，最后送入autoencoder的decoder模块就可以得到生成的图像。</p><p><img src="https://pic4.zhimg.com/80/v2-649a55e230feba6997604da9724db197_1440w.webp" alt=""></p><p><strong>基于latent的扩散模型的优势在于计算效率更高效，因为图像的latent空间要比图像pixel空间要小，这也是SD的核心优势</strong>。文生图模型往往参数量比较大，基于pixel的方法往往限于算力只生成64x64大小的图像，比如OpenAI的DALL-E2和谷歌的Imagen，然后再通过超分辨模型将图像分辨率提升至256x256和1024x1024；而基于latent的SD是在latent空间操作的，它可以直接生成256x256和512x512甚至更高分辨率的图像。</p><p>SD模型的主体结构如下图所示，主要包括三个模型：</p><ul><li><strong>autoencoder</strong>：encoder将图像压缩到latent空间，而decoder将latent解码为图像；</li><li><strong>CLIP text encoder</strong>：提取输入text的text embeddings，通过cross attention方式送入扩散模型的UNet中作为condition；</li><li><strong>UNet</strong>：扩散模型的主体，用来实现文本引导下的latent生成。</li></ul><p><img src="https://pic1.zhimg.com/80/v2-fddf45ed17a509336d1550833a257684_1440w.webp" alt=""></p><p>对于SD模型，其autoencoder模型参数大小为84M，CLIP text encoder模型大小为123M，而UNet参数大小为860M，所以<strong>SD模型的总参数量约为1B</strong>。</p><h3 id="autoencoder"><a href="#autoencoder" class="headerlink" title="autoencoder"></a><strong>autoencoder</strong></h3><p>autoencoder是一个基于encoder-decoder架构的图像压缩模型，对于一个大小为的输入图像，encoder模块将其编码为一个大小为的latent，其中为下采样率（downsampling factor）。在训练autoencoder过程中，除了采用<strong>L1重建损失</strong>外，还增加了<strong>感知损失</strong>（perceptual loss，即LPIPS，具体见论文<a href="https://link.zhihu.com/?target=https%3A//richzhang.github.io/PerceptualSimilarity/">The Unreasonable Effectiveness of Deep Features as a Perceptual Metric</a>）以及<strong>基于patch的对抗训练</strong>。辅助loss主要是为了确保重建的图像局部真实性以及避免模糊，具体损失函数见<a href="https://link.zhihu.com/?target=https%3A//github.com/CompVis/latent-diffusion/tree/main/ldm/modules/losses">latent diffusion的loss部分</a>。同时为了防止得到的latent的标准差过大，采用了两种正则化方法：第一种是<strong>KL-reg</strong>，类似VAE增加一个latent和标准正态分布的KL loss，不过这里为了保证重建效果，采用比较小的权重（～10e-6）；第二种是<strong>VQ-reg</strong>，引入一个VQ （vector quantization）layer，此时的模型可以看成是一个VQ-GAN，不过VQ层是在decoder模块中，这里VQ的codebook采样较高的维度（8192）来降低正则化对重建效果的影响。 latent diffusion论文中实验了不同参数下的autoencoder模型，如下表所示，可以看到当较小和较大时，重建效果越好（PSNR越大），这也比较符合预期，毕竟此时压缩率小。</p><p><img src="https://pic3.zhimg.com/80/v2-e4e760f8a0762f1cb7130e9d99b602d6_1440w.webp" alt=""></p><p>论文进一步将不同的autoencoder在扩散模型上进行实验，在ImageNet数据集上训练同样的步数（2M steps），其训练过程的生成质量如下所示，可以看到过小的（比如1和2）下收敛速度慢，此时图像的感知压缩率较小，扩散模型需要较长的学习；而过大的其生成质量较差，此时压缩损失过大。</p><p><img src="https://pic2.zhimg.com/80/v2-e35e58a520fa825f64e89eea4422ea89_1440w.webp" alt=""></p><p>当在4～16时，可以取得相对好的效果。SD采用基于KL-reg的autoencoder，其中下采样率，特征维度为，当输入图像为512x512大小时将得到64x64x4大小的latent。 autoencoder模型时在OpenImages数据集上基于256x256大小训练的，但是由于autoencoder的模型是全卷积结构的（基于ResnetBlock，只有模型的中间存在两个self attention层），所以它可以扩展应用在尺寸&gt;256的图像上。下面我们给出使用diffusers库来加载autoencoder模型，并使用autoencoder来实现图像的压缩和重建，代码如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> AutoencoderKL</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment">#加载模型: autoencoder可以通过SD权重指定subfolder来单独加载</span></span><br><span class="line">autoencoder = AutoencoderKL.from_pretrained(<span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span>, subfolder=<span class="string">&quot;vae&quot;</span>)</span><br><span class="line">autoencoder.to(<span class="string">&quot;cuda&quot;</span>, dtype=torch.float16)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取图像并预处理</span></span><br><span class="line">raw_image = Image.<span class="built_in">open</span>(<span class="string">&quot;boy.png&quot;</span>).convert(<span class="string">&quot;RGB&quot;</span>).resize((<span class="number">256</span>, <span class="number">256</span>))</span><br><span class="line">image = np.array(raw_image).astype(np.float32) / <span class="number">127.5</span> - <span class="number">1.0</span></span><br><span class="line">image = image[<span class="literal">None</span>].transpose(<span class="number">0</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">image = torch.from_numpy(image)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩图像为latent并重建</span></span><br><span class="line"><span class="keyword">with</span> torch.inference_mode():</span><br><span class="line">    latent = autoencoder.encode(image.to(<span class="string">&quot;cuda&quot;</span>, dtype=torch.float16)).latent_dist.sample()</span><br><span class="line">    rec_image = autoencoder.decode(latent).sample</span><br><span class="line">    rec_image = (rec_image / <span class="number">2</span> + <span class="number">0.5</span>).clamp(<span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">    rec_image = rec_image.cpu().permute(<span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>).numpy()</span><br><span class="line">    rec_image = (rec_image * <span class="number">255</span>).<span class="built_in">round</span>().astype(<span class="string">&quot;uint8&quot;</span>)</span><br><span class="line">    rec_image = Image.fromarray(rec_image[<span class="number">0</span>])</span><br><span class="line">rec_image</span><br></pre></td></tr></table></figure><p>这里我们给出了两张图片在256x256和512x512下的重建效果对比，如下所示，第一列为原始图片，第二列为512x512尺寸下的重建图，第三列为256x256尺寸下的重建图。对比可以看出，autoencoder将图片压缩到latent后再重建其实是有损的，比如会出现文字和人脸的畸变，在256x256分辨率下是比较明显的，512x512下效果会好很多。</p><p><img src="https://pic3.zhimg.com/80/v2-2f439931568ec63d03e40c1735f9264e_1440w.webp" alt=""></p><p><img src="https://pic3.zhimg.com/80/v2-cb198cc9134f4dab69ec7365b90078e6_1440w.webp" alt=""></p><p>这种有损压缩肯定是对SD的生成图像质量是有一定影响的，不过好在SD模型基本上是在512x512以上分辨率下使用的。为了改善这种畸变，stabilityai在发布SD 2.0时同时发布了两个在LAION子数据集上<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/sd-vae-ft-mse-original">精调的autoencoder</a>，注意这里只精调autoencoder的decoder部分，SD的UNet在训练过程只需要encoder部分，所以这样精调后的autoencoder可以直接用在先前训练好的UNet上（这种技巧还是比较通用的，比如谷歌的<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2206.10789">Parti</a>也是在训练好后自回归生成模型后，扩大并精调ViT-VQGAN的decoder模块来提升生成质量）。我们也可以直接在diffusers中使用这些autoencoder，比如mse版本（采用mse损失来finetune的模型）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">autoencoder = AutoencoderKL.from_pretrained(<span class="string">&quot;stabilityai/sd-vae-ft-mse/&quot;</span>)</span><br></pre></td></tr></table></figure><p>对于同样的两张图，这个mse版本的重建效果如下所示，可以看到相比原始版本的autoencoder，畸变是有一定改善的。</p><p><img src="https://pic4.zhimg.com/80/v2-ee18f2e828fd1357b2c29c2355439fcb_1440w.webp" alt=""></p><p><img src="https://pic3.zhimg.com/80/v2-818195b8ac7730ab632ae32b47f9272e_1440w.webp" alt=""></p><p>由于SD采用的autoencoder是基于KL-reg的，所以这个autoencoder在编码图像时其实得到的是一个高斯分布<a href="https://link.zhihu.com/?target=https%3A//github.com/huggingface/diffusers/blob/bbab8553224d12f7fd58b0e65b0daf899769ef0b/src/diffusers/models/vae.py%23L312">DiagonalGaussianDistribution</a>（分布的均值和标准差），然后通过调用sample方法来采样一个具体的latent（调用mode方法可以得到均值）。由于KL-reg的权重系数非常小，实际得到latent的标准差还是比较大的，latent diffusion论文中提出了一种rescaling方法：首先计算出第一个batch数据中的latent的标准差，然后采用的系数来rescale latent，这样就尽量保证latent的标准差接近1（防止扩散过程的SNR较高，影响生成效果，具体见latent diffusion论文的D1部分讨论），然后扩散模型也是应用在rescaling的latent上，在解码时只需要将生成的latent除以，然后再送入autoencoder的decoder即可。对于SD所使用的autoencoder，这个rescaling系数为0.18215。</p><h3 id="CLIP-text-encoder"><a href="#CLIP-text-encoder" class="headerlink" title="CLIP text encoder"></a><strong>CLIP text encoder</strong></h3><p>SD<strong>采用CLIP text encoder来对输入text提取text embeddings</strong>，具体的是采用目前OpenAI所开源的最大CLIP模型：<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/openai/clip-vit-large-patch14">clip-vit-large-patch14</a>，这个CLIP的text encoder是一个transformer模型（只有encoder模块）：层数为12，特征维度为768，模型参数大小是123M。对于输入text，送入CLIP text encoder后得到最后的hidden states（即最后一个transformer block得到的特征），其特征维度大小为77x768（77是token的数量），<strong>这个细粒度的text embeddings将以cross attention的方式送入UNet中</strong>。在transofmers库中，可以如下使用CLIP text encoder：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> CLIPTextModel, CLIPTokenizer</span><br><span class="line"></span><br><span class="line">text_encoder = CLIPTextModel.from_pretrained(<span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span>, subfolder=<span class="string">&quot;text_encoder&quot;</span>).to(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line"><span class="comment"># text_encoder = CLIPTextModel.from_pretrained(&quot;openai/clip-vit-large-patch14&quot;).to(&quot;cuda&quot;)</span></span><br><span class="line">tokenizer = CLIPTokenizer.from_pretrained(<span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span>, subfolder=<span class="string">&quot;tokenizer&quot;</span>)</span><br><span class="line"><span class="comment"># tokenizer = CLIPTokenizer.from_pretrained(&quot;openai/clip-vit-large-patch14&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对输入的text进行tokenize，得到对应的token ids</span></span><br><span class="line">prompt = <span class="string">&quot;a photograph of an astronaut riding a horse&quot;</span></span><br><span class="line">text_input_ids = text_tokenizer(</span><br><span class="line">    prompt,</span><br><span class="line">    padding=<span class="string">&quot;max_length&quot;</span>,</span><br><span class="line">    max_length=tokenizer.model_max_length,</span><br><span class="line">    truncation=<span class="literal">True</span>,</span><br><span class="line">    return_tensors=<span class="string">&quot;pt&quot;</span></span><br><span class="line">).input_ids</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将token ids送入text model得到77x768的特征</span></span><br><span class="line">text_embeddings = text_encoder(text_input_ids.to(<span class="string">&quot;cuda&quot;</span>))[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><p>值得注意的是，这里的tokenizer最大长度为77（CLIP训练时所采用的设置），当输入text的tokens数量超过77后，将进行截断，如果不足则进行paddings，这样将保证无论输入任何长度的文本（甚至是空文本）都得到77x768大小的特征。 在训练SD的过程中，<strong>CLIP text encoder模型是冻结的</strong>。在早期的工作中，比如OpenAI的<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2112.10741">GLIDE</a>和latent diffusion中的LDM均采用一个随机初始化的tranformer模型来提取text的特征，但是最新的工作都是采用预训练好的text model。比如谷歌的Imagen采用纯文本模型T5 encoder来提出文本特征，而SD则采用CLIP text encoder，预训练好的模型往往已经在大规模数据集上进行了训练，它们要比直接采用一个从零训练好的模型要好。</p><h3 id="UNet"><a href="#UNet" class="headerlink" title="UNet"></a><strong>UNet</strong></h3><p>SD的扩散模型是一个860M的UNet，其主要结构如下图所示（这里以输入的latent为64x64x4维度为例），其中encoder部分包括3个CrossAttnDownBlock2D模块和1个DownBlock2D模块，而decoder部分包括1个UpBlock2D模块和3个CrossAttnUpBlock2D模块，中间还有一个UNetMidBlock2DCrossAttn模块。encoder和decoder两个部分是完全对应的，中间存在skip connection。注意3个CrossAttnDownBlock2D模块最后均有一个2x的downsample操作，而DownBlock2D模块是不包含下采样的。</p><p><img src="https://pic3.zhimg.com/80/v2-2c71f809868ea14d0e2f8caa024781e2_1440w.webp" alt=""></p><p>其中CrossAttnDownBlock2D模块的主要结构如下图所示，text condition将通过CrossAttention模块嵌入进来，此时Attention的query是UNet的中间特征，而key和value则是text embeddings。 CrossAttnUpBlock2D模块和CrossAttnDownBlock2D模块是一致的，但是就是总层数为3。</p><p><img src="https://pic3.zhimg.com/80/v2-0eff7fa232e2d33aeb435132c4cd897a_1440w.webp" alt=""></p><p>SD和DDPM一样采用预测noise的方法来训练UNet，其训练损失也和DDPM一样：  这里的为text embeddings，此时的模型是一个条件扩散模型。基于diffusers库，我们可以很快实现SD的训练，其核心代码如下所示（这里参考diffusers库下examples中的<a href="https://link.zhihu.com/?target=https%3A//github.com/huggingface/diffusers/blob/main/examples/text_to_image/train_text_to_image.py">finetune代码</a>）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> AutoencoderKL, UNet2DConditionModel, DDPMScheduler</span><br><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> CLIPTextModel, CLIPTokenizer</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载autoencoder</span></span><br><span class="line">vae = AutoencoderKL.from_pretrained(<span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span>, subfolder=<span class="string">&quot;vae&quot;</span>)</span><br><span class="line"><span class="comment"># 加载text encoder</span></span><br><span class="line">text_encoder = CLIPTextModel.from_pretrained(<span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span>, subfolder=<span class="string">&quot;text_encoder&quot;</span>)</span><br><span class="line">tokenizer = CLIPTokenizer.from_pretrained(<span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span>, subfolder=<span class="string">&quot;tokenizer&quot;</span>)</span><br><span class="line"><span class="comment"># 初始化UNet</span></span><br><span class="line">unet = UNet2DConditionModel(**model_config) <span class="comment"># model_config为模型参数配置</span></span><br><span class="line"><span class="comment"># 定义scheduler</span></span><br><span class="line">noise_scheduler = DDPMScheduler(</span><br><span class="line">    beta_start=<span class="number">0.00085</span>, beta_end=<span class="number">0.012</span>, beta_schedule=<span class="string">&quot;scaled_linear&quot;</span>, num_train_timesteps=<span class="number">1000</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 冻结vae和text_encoder</span></span><br><span class="line">vae.requires_grad_(<span class="literal">False</span>)</span><br><span class="line">text_encoder.requires_grad_(<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">opt = torch.optim.AdamW(unet.parameters(), lr=<span class="number">1e-4</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> step, batch <span class="keyword">in</span> <span class="built_in">enumerate</span>(train_dataloader):</span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        <span class="comment"># 将image转到latent空间</span></span><br><span class="line">        latents = vae.encode(batch[<span class="string">&quot;image&quot;</span>]).latent_dist.sample()</span><br><span class="line">        latents = latents * vae.config.scaling_factor <span class="comment"># rescaling latents</span></span><br><span class="line">        <span class="comment"># 提取text embeddings</span></span><br><span class="line">        text_input_ids = text_tokenizer(</span><br><span class="line">            batch[<span class="string">&quot;text&quot;</span>],</span><br><span class="line">            padding=<span class="string">&quot;max_length&quot;</span>,</span><br><span class="line">            max_length=tokenizer.model_max_length,</span><br><span class="line">            truncation=<span class="literal">True</span>,</span><br><span class="line">            return_tensors=<span class="string">&quot;pt&quot;</span></span><br><span class="line">  ).input_ids</span><br><span class="line">  text_embeddings = text_encoder(text_input_ids)[<span class="number">0</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 随机采样噪音</span></span><br><span class="line">    noise = torch.randn_like(latents)</span><br><span class="line">    bsz = latents.shape[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 随机采样timestep</span></span><br><span class="line">    timesteps = torch.randint(<span class="number">0</span>, noise_scheduler.num_train_timesteps, (bsz,), device=latents.device)</span><br><span class="line">    timesteps = timesteps.long()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将noise添加到latent上，即扩散过程</span></span><br><span class="line">    noisy_latents = noise_scheduler.add_noise(latents, noise, timesteps)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 预测noise并计算loss</span></span><br><span class="line">    model_pred = unet(noisy_latents, timesteps, encoder_hidden_states=text_embeddings).sample</span><br><span class="line">    loss = F.mse_loss(model_pred.<span class="built_in">float</span>(), noise.<span class="built_in">float</span>(), reduction=<span class="string">&quot;mean&quot;</span>)</span><br><span class="line"></span><br><span class="line"> opt.step()</span><br><span class="line">    opt.zero_grad()</span><br></pre></td></tr></table></figure><p>注意的是SD的noise scheduler虽然也是采用一个1000步长的scheduler，但是不是linear的，而是scaled linear，具体的计算如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">betas = torch.linspace(beta_start**<span class="number">0.5</span>, beta_end**<span class="number">0.5</span>, num_train_timesteps, dtype=torch.float32) ** <span class="number">2</span></span><br></pre></td></tr></table></figure><p>在训练条件扩散模型时，往往会采用<strong>Classifier-Free Guidance</strong>（这里简称为CFG），所谓的CFG简单来说就是在训练条件扩散模型的同时也训练一个无条件的扩散模型，同时在采样阶段将条件控制下预测的噪音和无条件下的预测噪音组合在一起来确定最终的噪音，具体的计算公式如下所示：</p><p>这里的为<strong>guidance scale</strong>，当越大时，condition起的作用越大，即生成的图像其更和输入文本一致。CFG的具体实现非常简单，在训练过程中，我们只需要<strong>以一定的概率（比如10%）随机drop掉text</strong>即可，这里我们可以将text置为空字符串（前面说过此时依然能够提取text embeddings）。这里并没有介绍CLF背后的技术原理，感兴趣的可以阅读CFG的论文<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2207.12598">Classifier-Free Diffusion Guidance</a>以及guided diffusion的论文<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2105.05233">Diffusion Models Beat GANs on Image Synthesis</a>。<strong>CFG对于提升条件扩散模型的图像生成效果是至关重要的</strong>。</p><h3 id="训练细节"><a href="#训练细节" class="headerlink" title="训练细节"></a><strong>训练细节</strong></h3><p>前面我们介绍了SD的模型结构，这里我们也简单介绍一下SD的训练细节，主要包括训练数据和训练资源，这方面也是在SD的<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/runwayml/stable-diffusion-v1-5">Model Card</a>上有说明。 首先是训练数据，SD在<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/datasets/laion/laion2B-en">laion2B-en</a><strong>数据集</strong>上训练的，它是<a href="https://link.zhihu.com/?target=https%3A//laion.ai/blog/laion-5b/">laion-5b</a><strong>数据集</strong>的一个子集，更具体的说它是laion-5b中的英文（文本为英文）数据集。laion-5b数据集是从网页数据Common Crawl中筛选出来的图像-文本对数据集，它包含5.85B的图像-文本对，其中文本为英文的数据量为2.32B，这就是laion2B-en数据集。</p><p><img src="https://pic3.zhimg.com/80/v2-91d5227730b38d1c72d7858d3b67fbba_1440w.webp" alt=""></p><p>下面是laion2B-en数据集的元信息（图片width和height，以及文本长度）统计分析：其中图片的width和height均在256以上的样本量为1324M，在512以上的样本量为488M，而在1024以上的样本为76M；文本的平均长度为67。</p><p><img src="https://pic1.zhimg.com/80/v2-7bc54f633af1760a97b5af05746a74a0_1440w.webp" alt=""></p><p>laion数据集中除了图片（下载URL，图像width和height）和文本（描述文本）的元信息外，还包含以下信息：</p><ul><li>similarity：使用CLIP ViT-B/32计算出来的图像和文本余弦相似度；</li><li>pwatermark：使用一个图片<a href="https://link.zhihu.com/?target=https%3A//github.com/LAION-AI/LAION-5B-WatermarkDetection">水印检测器</a>检测的概率值，表示图片含有水印的概率；</li><li>punsafe：图片是否安全，或者图片是不是NSFW，使用<a href="https://link.zhihu.com/?target=https%3A//github.com/LAION-AI/CLIP-based-NSFW-Detector">基于CLIP的检测器</a>来估计；</li><li>AESTHETIC_SCORE：图片的美学评分（1-10），这个是后来追加的，首先选择一小部分图片数据集让人对图片的美学打分，然后基于这个标注数据集来训练一个<a href="https://link.zhihu.com/?target=https%3A//laion.ai/blog/laion-aesthetics/">打分模型</a>，并对所有样本计算估计的美学评分。</li></ul><p>上面是laion数据集的情况，下面我们来介绍SD训练数据集的具体情况，<strong>SD的训练是多阶段的</strong>（先在256x256尺寸上预训练，然后在512x512尺寸上精调），不同的阶段产生了不同的版本：</p><ul><li>SD v1.1：在laion2B-en数据集上以256x256大小训练237,000步，上面我们已经说了，laion2B-en数据集中256以上的样本量共1324M；然后在laion5B的<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/datasets/laion/laion-high-resolution">高分辨率数据集</a>以512x512尺寸训练194,000步，这里的高分辨率数据集是图像尺寸在1024x1024以上，共170M样本。</li><li>SD v1.2：以SD v1.1为初始权重，在<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/datasets/ChristophSchuhmann/improved_aesthetics_5plus">improved_aesthetics_5plus</a>数据集上以512x512尺寸训练515,000步数，这个improved_aesthetics_5plus数据集上laion2B-en数据集中美学评分在5分以上的子集（共约600M样本），注意这里过滤了含有水印的图片（pwatermark&gt;0.5)以及图片尺寸在512x512以下的样本。</li><li>SD v1.3：以SD v1.2为初始权重，在improved_aesthetics_5plus数据集上继续以512x512尺寸训练195,000步数，不过这里采用了CFG（以10%的概率随机drop掉text）。</li><li>SD v1.4：以SD v1.2为初始权重，在improved_aesthetics_5plus数据集上采用CFG以512x512尺寸训练225,000步数。</li><li>SD v1.5：以SD v1.2为初始权重，在improved_aesthetics_5plus数据集上采用CFG以512x512尺寸训练595,000步数。</li></ul><p>其实可以看到SD v1.3、SD v1.4和SD v1.5其实是以SD v1.2为起点在improved_aesthetics_5plus数据集上采用CFG训练过程中的不同checkpoints，<strong>目前最常用的版本是SD v1.4和SD v1.5</strong>。 SD的训练是<strong>采用了32台8卡的A100机器</strong>（32 x 8 x A100_40GB GPUs），所需要的训练硬件还是比较多的，但是相比语言大模型还好。单卡的训练batch size为2，并采用gradient accumulation，其中gradient accumulation steps=2，那么训练的<strong>总batch size就是32x8x2x2=2048</strong>。训练<strong>优化器采用AdamW</strong>，训练采用warmup，在初始10,000步后<strong>学习速率升到0.0001</strong>，后面保持不变。至于训练时间，文档上只说了用了150,000小时，这个应该是A100卡时，如果按照256卡A100来算的话，那么大约<strong>需要训练25天左右</strong>。</p><h3 id="模型评测"><a href="#模型评测" class="headerlink" title="模型评测"></a><strong>模型评测</strong></h3><p>上面介绍了模型训练细节，那么最后的问题就是模型评测了。对于文生图模型，目前常采用的定量指标是<strong>FID</strong>（Fréchet inception distance）和CLIP score，其中FID可以衡量生成图像的逼真度（image fidelity），而CLIP score评测的是生成的图像与输入文本的一致性，其中FID越低越好，而CLIP score是越大越好。当CFG的gudiance scale参数设置不同时，FID和CLIP score会发生变化，下图为不同的gudiance scale参数下，SD模型在COCO2017验证集上的评测结果，注意这里是zero-shot评测，即SD模型并没有在COCO训练数据集上精调。</p><p><img src="https://pic1.zhimg.com/80/v2-b7ef3c892c5b833191b483932c42fc1c_1440w.webp" alt=""></p><p>可以看到当gudiance scale=3时，FID最低；而当gudiance scale越大时，CLIP score越大，但是FID同时也变大。在实际应用时，往往会采用较大的gudiance scale，比如SD模型默认采用7.5，此时生成的图像和文本有较好的一致性。从不同版本的对比曲线上看，SD的采用CFG训练后三个版本其实差别并没有那么大，其中SD v1.5相对好一点，但是明显要未采用CFG训练的版本要好的多，这说明CFG训练是比较关键的。 目前在模型对比上，大家往往是比较不同模型在COCO验证集上的zero-shot FID-30K（选择30K的样本），大家往往就选择模型所能得到的最小FID来比较，下面为eDiff和GigaGAN两篇论文所报道的不同文生图模型的FID对比（由于SD并没有给出FID-30K，所以大家应该都是自己用开源SD的模型计算的，由于选择样本不同，可能结果存在差异）：</p><p><img src="https://pic1.zhimg.com/80/v2-979a3b11b99fbd854f472e8902f578a0_1440w.webp" alt=""></p><p>可以看到SD虽然FID不是最好的，但是也能达到比较低的FID（大约在8～9之间）。不过虽然学术界常采用FID来定量比较模型，但是FID有很大的局限性，它并不能很好地衡量生成图像的质量，也是因为这个原因，谷歌的Imagen引入了人工评价，先建立一个评测数据集DrawBench（包含200个不同类型的text），然后用不同的模型来生成图像，让人去评价同一个text下不同模型生成的图像，这种评测方式比较直接，但是可能也受一些主观因素的影响。总而言之，目前的评价方式都有一定的局限性，最好还是直接上手使用来比较不同的模型。</p><h2 id="SD的主要应用"><a href="#SD的主要应用" class="headerlink" title="SD的主要应用"></a><strong>SD的主要应用</strong></h2><p>下面来介绍SD的主要应用，这包括<strong>文生图</strong>，<strong>图生图</strong>以及<strong>图像inpainting</strong>。其中文生图是SD的基础功能：根据输入文本生成相应的图像，而图生图和图像inpainting是在文生图的基础上延伸出来的两个功能。</p><h3 id="文生图"><a href="#文生图" class="headerlink" title="文生图"></a><strong>文生图</strong></h3><p>根据文本生成图像这是文生图的最核心的功能，下图为SD的文生图的推理流程图：首先根据输入text用text encoder提取text embeddings，同时初始化一个随机噪音noise（latent上的，512x512图像对应的noise维度为64x64x4），然后将text embeddings和noise送入扩散模型UNet中生成去噪后的latent，最后送入autoencoder的decoder模块得到生成的图像。</p><p><img src="https://pic3.zhimg.com/80/v2-4b69474b69a10f7963cc8a6f68ede756_1440w.webp" alt=""></p><p>使用diffusers库，我们可以直接调用<code>StableDiffusionPipeline</code>来实现文生图，具体代码如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> StableDiffusionPipeline</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment"># 组合图像，生成grid</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">image_grid</span>(<span class="params">imgs, rows, cols</span>):</span><br><span class="line">    <span class="keyword">assert</span> <span class="built_in">len</span>(imgs) == rows*cols</span><br><span class="line"></span><br><span class="line">    w, h = imgs[<span class="number">0</span>].size</span><br><span class="line">    grid = Image.new(<span class="string">&#x27;RGB&#x27;</span>, size=(cols*w, rows*h))</span><br><span class="line">    grid_w, grid_h = grid.size</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i, img <span class="keyword">in</span> <span class="built_in">enumerate</span>(imgs):</span><br><span class="line">        grid.paste(img, box=(i%cols*w, i//cols*h))</span><br><span class="line">    <span class="keyword">return</span> grid</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载文生图pipeline</span></span><br><span class="line">pipe = StableDiffusionPipeline.from_pretrained(</span><br><span class="line">    <span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span>, <span class="comment"># 或者使用 SD v1.4: &quot;CompVis/stable-diffusion-v1-4&quot;</span></span><br><span class="line">    torch_dtype=torch.float16</span><br><span class="line">).to(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入text，这里text又称为prompt</span></span><br><span class="line">prompts = [</span><br><span class="line">    <span class="string">&quot;a photograph of an astronaut riding a horse&quot;</span>,</span><br><span class="line">    <span class="string">&quot;A cute otter in a rainbow whirlpool holding shells, watercolor&quot;</span>,</span><br><span class="line">    <span class="string">&quot;An avocado armchair&quot;</span>,</span><br><span class="line">    <span class="string">&quot;A white dog wearing sunglasses&quot;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">generator = torch.Generator(<span class="string">&quot;cuda&quot;</span>).manual_seed(<span class="number">42</span>) <span class="comment"># 定义随机seed，保证可重复性</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行推理</span></span><br><span class="line">images = pipe(</span><br><span class="line">    prompts,</span><br><span class="line">    height=<span class="number">512</span>,</span><br><span class="line">    width=<span class="number">512</span>,</span><br><span class="line">    num_inference_steps=<span class="number">50</span>,</span><br><span class="line">    guidance_scale=<span class="number">7.5</span>,</span><br><span class="line">    negative_prompt=<span class="literal">None</span>,</span><br><span class="line">    num_images_per_prompt=<span class="number">1</span>,</span><br><span class="line">    generator=generator</span><br><span class="line">).images</span><br><span class="line"></span><br><span class="line">grid = image_grid(images, rows=<span class="number">1</span>, cols=<span class="number">4</span>)</span><br><span class="line">grid</span><br></pre></td></tr></table></figure><p>生成的图像效果如下所示：</p><p><img src="https://pic2.zhimg.com/80/v2-e2da18f32ca57ed37f36d5099da636ad_1440w.webp" alt=""></p><p>这里可以通过指定width和height来决定生成图像的大小，前面说过SD最后是在512x512尺度上训练的，所以生成512x512尺寸效果是最好的，但是实际上SD可以生成任意尺寸的图片：一方面autoencoder支持任意尺寸的图片的编码和解码，另外一方面扩散模型UNet也是支持任意尺寸的latents生成的（UNet是卷积+attention的混合结构）。然而，生成512x512以外的图片会存在一些问题，比如生成低分辨率图像时，图像的质量大幅度下降，下图为同样的文本在256x256尺寸下的生成效果：</p><p><img src="https://pic4.zhimg.com/80/v2-17adfbcb66d31299a2c397c16066c463_1440w.webp" alt=""></p><p>如果是生成512x512以上分辨率的图像，图像质量虽然没问题，但是可能会出现重复物体以及物体被拉长的情况，下图为分别为768x512和512x768尺寸下的生成效果，可以看到部分图像存在一定的问题：</p><p><img src="https://pic1.zhimg.com/80/v2-76de42ced2d2cda89bb0aebe7086bc2c_1440w.webp" alt=""></p><p><img src="https://pic1.zhimg.com/80/v2-6259780a378b797cbb58d12471acbca8_1440w.webp" alt=""></p><p>所以虽然SD的架构上支持任意尺寸的图像生成，但训练是在固定尺寸上（512x512），生成其它尺寸图像还是会存在一定的问题。解决这个问题的办法就相对比较简单，就是采用多尺度策略训练，比如NovelAI提出采用<a href="https://link.zhihu.com/?target=https%3A//github.com/NovelAI/novelai-aspect-ratio-bucketing">Aspect Ratio Bucketing</a>策略来在二次元数据集上精调模型，这样得到的模型就很大程度上避免SD的这个问题，目前大部分开源的基于SD的精调模型往往都采用类似的多尺度策略来精调。比如我们采用开源的<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/dreamlike-art/dreamlike-diffusion-1.0">dreamlike-diffusion-1.0</a>模型（基于SD v1.5精调的），其生成的图像效果在变尺寸上就好很多：</p><p><img src="https://pic3.zhimg.com/80/v2-89b25d80d68f3e818beaa1c909a1b026_1440w.webp" alt=""></p><p><img src="https://pic1.zhimg.com/80/v2-f571223e3f3022460808f6ba072a0934_1440w.webp" alt=""></p><p>另外一个参数是<code>num_inference_steps</code>，它是指<strong>推理过程中的去噪步数或者采样步数</strong>。SD在训练过程采用的是步数为1000的noise scheduler，但是在推理时往往采用速度更快的scheduler：只需要少量的采样步数就能生成不错的图像，比如SD默认采用<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2202.09778">PNDM scheduler</a>，它只需要采样50步就可以出图。当然我们也可以换用其它类型的scheduler，比如<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2010.02502">DDIM scheduler</a>和<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2206.00927">DPM-Solver scheduler</a>。我们可以在diffusers中直接替换scheduler，比如我们想使用DDIM：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> DDIMScheduler</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意这里的clip_sample要关闭，否则生成图像存在问题，因为不能对latent进行clip</span></span><br><span class="line">pipe.scheduler = DDIMScheduler.from_config(pipe.scheduler.config, clip_sample=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p>换成DDIM后，同样的采样步数生成的图像如下所示，在部分细节上和PNDM有差异：</p><p><img src="https://pic3.zhimg.com/80/v2-88ed3ce8a9b3847c8ac90e89faee5e5a_1440w.webp" alt=""></p><p>当然<strong>采样步数越大，生成的图像质量越好，但是相应的推理时间也更久</strong>。这里我们可以试验一下不同采样步数下的生成效果，以宇航员骑马为例，下图展示了采样步数为10，20，30，50，70和100时的生成图像，可以看到采样步数增加后，图像生成质量是有一定的提升的，当采样步数为30时就能生成相对稳定的图像。</p><p><img src="https://pic4.zhimg.com/80/v2-ef712b5422e00d7497ec9afb9822359f_1440w.webp" alt=""></p><p>我们要讨论的第三个参数是<code>guidance_scale</code>，前面说过当CFG的<code>guidance_scale</code>越大时，生成的图像应该会和输入文本更一致，这里我们同样以宇航员骑马为例来测试不同guidance_scale下的图像生成效果。下图为guidance_scale为1，3，5，7，9和11下生成的图像对比，可以看到当guidance_scale较低时生成的图像效果是比较差的，<strong>当guidance_scale在7～9时，生成的图像效果是可以的</strong>，当采用更大的guidance_scale比如11，图像的色彩过饱和而看起来不自然，所以SD<strong>默认采用的guidance_scale为7.5</strong>。</p><p><img src="https://pic4.zhimg.com/80/v2-8337dbec38f8c3e7f684cf49ed64cecf_1440w.webp" alt=""></p><p>过大的guidance_scale之所以出现问题，主要是由于训练和测试的不一致，过大的guidance_scale会导致生成的样本超出范围。谷歌的Imagen论文提出一种dynamic thresholding策略来解决这个问题，所谓的dynamic thresholding是相对于原来的static thresholding，static thresholding策略是直接将生成的样本clip到[-1, 1]范围内（Imagen是基于pixel的扩散模型，这里是将图像像素值归一化到-1到1之间），但是会在过大的guidance_scale时产生很多的饱含像素点。而dynamic thresholding策略是先计算样本在某个百分位下（比如99%）的像素绝对值，然后如果它超过1时就采用来进行clip，这样就可以大大减少过饱和的像素。两种策略的具体实现代码如下所示：</p><p><img src="https://pic2.zhimg.com/80/v2-ab0405eb00a79be6eb953227e565cfcd_1440w.webp" alt=""></p><p>dynamic thresholding策略对于Imagen是比较关键的，它使得Imagen可以采用较大的guidance_scale来生成更自然的图像。下图为两种thresholding策略下生成图像的对比：</p><p><img src="https://pic1.zhimg.com/80/v2-942d6e58a310f24136134fc89f6eac0c_1440w.webp" alt=""></p><p>虽然SD是基于latent的扩散模型，但依然可以采用类似的dynamic thresholding策略，感兴趣的可以参考目前的一个开源实现：<a href="https://link.zhihu.com/?target=https%3A//github.com/mcmonkeyprojects/sd-dynamic-thresholding">sd-dynamic-thresholding</a>，使用dynamic thresholding策略后，SD可以在较大的guidance_scale下生成相对自然的图像。</p><p><img src="https://pic2.zhimg.com/80/v2-b097ffe7c5bcb131341b9b6a6b3241e9_1440w.webp" alt=""></p><p>另外一个比较容易忽略的参数是<code>negative_prompt</code>，这个参数和CFG有关，前面说过，SD采用了CFG来提升生成图像的质量。使用CFG，去噪过程的噪音预测不仅仅依赖条件扩散模型，也依赖无条件扩散模型：  这里的<code>negative_prompt</code>便是无条件扩散模型的text输入，前面说过训练过程中我们将text置为空字符串来实现无条件扩散模型，所以这里：<code>negative_prompt = None = &quot;&quot;</code>。但是有时候我们可以<strong>使用不为空的negative_prompt来避免模型生成的图像包含不想要的东西</strong>，因为从上述公式可以看到这里的无条件扩散模型是我们想远离的部分。下面我们来举几个具体的例子，首先来看生成人物图像的一个例子，这里的输入文本为”a portrait of a beautiful blonde woman”，其生成的图像如下所示：</p><p><img src="https://pic1.zhimg.com/80/v2-477a9a38dfe2ed22e37d39a8021108ac_1440w.webp" alt=""></p><p>可以看到生成的图像效果并不好，比如出现一些脸部的畸变，但是我们可以设置negative_prompt来提升生成效果，这里我们将negative_prompt设置为”cropped, lowres, poorly drawn face, out of frame, poorly drawn hands, blurry”，这些描述都是负面的。改变negative_prompt后，生成的图像效果有一个明显的提升：</p><p><img src="https://pic1.zhimg.com/80/v2-40c14e5aa7d107dec744d8581904db9c_1440w.webp" alt=""></p><p>第二个例子是一个建筑物，这里的输入文本为”A Hyperrealistic photograph of German architectural modern home”，默认图像生成效果如下所示：</p><p><img src="https://pic2.zhimg.com/80/v2-3904adb4555d7461331f9c2f7e600771_1440w.webp" alt=""></p><p>虽然生成的图像效果不错，但是如果只想要一个干净的建筑物，而不想背景中含有树木和草地等，此时我们可以通过设置negative prompt来达到这种效果。这里将negative prompt设为”trees, bushes, leaves, greenery”，其生成的建筑物就干净了很多：</p><p><img src="https://pic3.zhimg.com/80/v2-9cf023a14899f7b60d3edeb360a45616_1440w.webp" alt=""></p><p>可以看到合理使用negative prompt能够帮助我们去除不想要的东西来提升图像生成效果。 一般情况下，输入的text或者prompt我们称之为“<strong>正向提示词</strong>”，而negative prompt称之为“<strong>反向提示词</strong>”，想要生成的好的图像，不仅要选择好的正向提示词，也需要好的反向提示词，这和文本生成模型也比较类似：都需要好的prompt。这里也举一个对正向prompt优化的例子（这个例子来源于微软的工作<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2212.09611">Optimizing Prompts for Text-to-Image Generation</a>），这里的原始prompt为”A rabbit is wearing a space suit”，可以看到直接生成的效果其实是不尽人意的：</p><p><img src="https://pic2.zhimg.com/80/v2-04235db0adbeb2e5f4edab3ded4d5c75_1440w.webp" alt=""></p><p>但是如果我们将prompt改为”A rabbit is wearing a space suit, digital Art, Greg rutkowski, Trending cinematographic artstation”，其生成的效果就大大提升：</p><p><img src="https://pic3.zhimg.com/80/v2-74b0506d89da4ca89e8be8e0b5bf57a2_1440w.webp" alt=""></p><p>这里我们其实只是在原有的prompt基础加上了一些描述词，有时候我们称之为“<strong>魔咒</strong>”，不同的模型可能会有不同的魔咒。 上述我们讨论了SD的文生图的主要参数，这里简单总结一下：</p><ul><li>SD默认生成512x512大小的图像，但实际上可以生成其它分辨率的图像，但是可能会出现不协调，如果采用多尺度策略训练，会改善这种情况；</li><li>采用快速的noise scheduler，SD在去噪步数为30～50步时就能生成稳定的图像；</li><li>SD的guidance_scale设置为7～9是比较稳定的，过小和过大都会出现图像质量下降，实际使用中可以根据具体情况灵活调节；</li><li>可以使用negative prompt来去除不想要的东西来改善图像生成效果；</li><li>好的prompt对图像生成效果是至关重要的。</li></ul><p>上边我们介绍了如何使用SD进行文生图以及一些主要参数，在最后我们也给出文生图这个pipeline的内部流程代码，如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> AutoencoderKL, UNet2DConditionModel, DDIMScheduler</span><br><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> CLIPTextModel, CLIPTokenizer</span><br><span class="line"><span class="keyword">from</span> tqdm.auto <span class="keyword">import</span> tqdm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">model_id = <span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span></span><br><span class="line"><span class="comment"># 1. 加载autoencoder</span></span><br><span class="line">vae = AutoencoderKL.from_pretrained(model_id, subfolder=<span class="string">&quot;vae&quot;</span>)</span><br><span class="line"><span class="comment"># 2. 加载tokenizer和text encoder </span></span><br><span class="line">tokenizer = CLIPTokenizer.from_pretrained(model_id, subfolder=<span class="string">&quot;tokenizer&quot;</span>)</span><br><span class="line">text_encoder = CLIPTextModel.from_pretrained(model_id, subfolder=<span class="string">&quot;text_encoder&quot;</span>)</span><br><span class="line"><span class="comment"># 3. 加载扩散模型UNet</span></span><br><span class="line">unet = UNet2DConditionModel.from_pretrained(model_id, subfolder=<span class="string">&quot;unet&quot;</span>)</span><br><span class="line"><span class="comment"># 4. 定义noise scheduler</span></span><br><span class="line">noise_scheduler = DDIMScheduler(</span><br><span class="line">    num_train_timesteps=<span class="number">1000</span>,</span><br><span class="line">    beta_start=<span class="number">0.00085</span>,</span><br><span class="line">    beta_end=<span class="number">0.012</span>,</span><br><span class="line">    beta_schedule=<span class="string">&quot;scaled_linear&quot;</span>,</span><br><span class="line">    clip_sample=<span class="literal">False</span>, <span class="comment"># don&#x27;t clip sample, the x0 in stable diffusion not in range [-1, 1]</span></span><br><span class="line">    set_alpha_to_one=<span class="literal">False</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将模型复制到GPU上</span></span><br><span class="line">device = <span class="string">&quot;cuda&quot;</span></span><br><span class="line">vae.to(device, dtype=torch.float16)</span><br><span class="line">text_encoder.to(device, dtype=torch.float16)</span><br><span class="line">unet = unet.to(device, dtype=torch.float16)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义参数</span></span><br><span class="line">prompt = [</span><br><span class="line">    <span class="string">&quot;A dragon fruit wearing karate belt in the snow&quot;</span>,</span><br><span class="line">    <span class="string">&quot;A small cactus wearing a straw hat and neon sunglasses in the Sahara desert&quot;</span>,</span><br><span class="line">    <span class="string">&quot;A photo of a raccoon wearing an astronaut helmet, looking out of the window at night&quot;</span>,</span><br><span class="line">    <span class="string">&quot;A cute otter in a rainbow whirlpool holding shells, watercolor&quot;</span></span><br><span class="line">]</span><br><span class="line">height = <span class="number">512</span></span><br><span class="line">width = <span class="number">512</span></span><br><span class="line">num_inference_steps = <span class="number">50</span></span><br><span class="line">guidance_scale = <span class="number">7.5</span></span><br><span class="line">negative_prompt = <span class="string">&quot;&quot;</span></span><br><span class="line">batch_size = <span class="built_in">len</span>(prompt)</span><br><span class="line"><span class="comment"># 随机种子</span></span><br><span class="line">generator = torch.Generator(device).manual_seed(<span class="number">2023</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> torch.no_grad():</span><br><span class="line"> <span class="comment"># 获取text_embeddings</span></span><br><span class="line"> text_input = tokenizer(prompt, padding=<span class="string">&quot;max_length&quot;</span>, max_length=tokenizer.model_max_length, truncation=<span class="literal">True</span>, return_tensors=<span class="string">&quot;pt&quot;</span>)</span><br><span class="line">    text_embeddings = text_encoder(text_input.input_ids.to(device))[<span class="number">0</span>]</span><br><span class="line"> <span class="comment"># 获取unconditional text embeddings</span></span><br><span class="line"> max_length = text_input.input_ids.shape[-<span class="number">1</span>]</span><br><span class="line"> uncond_input = tokenizer(</span><br><span class="line">     [negative_prompt] * batch_size, padding=<span class="string">&quot;max_length&quot;</span>, max_length=max_length, return_tensors=<span class="string">&quot;pt&quot;</span></span><br><span class="line"> )</span><br><span class="line">      uncond_embeddings = text_encoder(uncond_input.input_ids.to(device))[<span class="number">0</span>]</span><br><span class="line"> <span class="comment"># 拼接为batch，方便并行计算</span></span><br><span class="line"> text_embeddings = torch.cat([uncond_embeddings, text_embeddings])</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 生成latents的初始噪音</span></span><br><span class="line"> latents = torch.randn(</span><br><span class="line">     (batch_size, unet.in_channels, height // <span class="number">8</span>, width // <span class="number">8</span>),</span><br><span class="line">     generator=generator, device=device</span><br><span class="line"> )</span><br><span class="line"> latents = latents.to(device, dtype=torch.float16)</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 设置采样步数</span></span><br><span class="line"> noise_scheduler.set_timesteps(num_inference_steps, device=device)</span><br><span class="line"></span><br><span class="line"> <span class="comment"># scale the initial noise by the standard deviation required by the scheduler</span></span><br><span class="line"> latents = latents * noise_scheduler.init_noise_sigma <span class="comment"># for DDIM, init_noise_sigma = 1.0</span></span><br><span class="line"></span><br><span class="line"> timesteps_tensor = noise_scheduler.timesteps</span><br><span class="line"></span><br><span class="line"> <span class="comment"># Do denoise steps</span></span><br><span class="line"> <span class="keyword">for</span> t <span class="keyword">in</span> tqdm(timesteps_tensor):</span><br><span class="line">     <span class="comment"># 这里latens扩展2份，是为了同时计算unconditional prediction</span></span><br><span class="line">     latent_model_input = torch.cat([latents] * <span class="number">2</span>)</span><br><span class="line">     latent_model_input = noise_scheduler.scale_model_input(latent_model_input, t) <span class="comment"># for DDIM, do nothing</span></span><br><span class="line"></span><br><span class="line">     <span class="comment"># 使用UNet预测噪音</span></span><br><span class="line">        noise_pred = unet(latent_model_input, t, encoder_hidden_states=text_embeddings).sample</span><br><span class="line"></span><br><span class="line">     <span class="comment"># 执行CFG</span></span><br><span class="line">     noise_pred_uncond, noise_pred_text = noise_pred.chunk(<span class="number">2</span>)</span><br><span class="line">     noise_pred = noise_pred_uncond + guidance_scale * (noise_pred_text - noise_pred_uncond)</span><br><span class="line"></span><br><span class="line">     <span class="comment"># 计算上一步的noisy latents：x_t -&gt; x_t-1</span></span><br><span class="line">     latents = noise_scheduler.step(noise_pred, t, latents).prev_sample</span><br><span class="line">    </span><br><span class="line"> <span class="comment"># 注意要对latents进行scale</span></span><br><span class="line"> latents = <span class="number">1</span> / <span class="number">0.18215</span> * latents</span><br><span class="line"> <span class="comment"># 使用vae解码得到图像</span></span><br><span class="line">    image = vae.decode(latents).sample</span><br></pre></td></tr></table></figure><h3 id="图生图"><a href="#图生图" class="headerlink" title="图生图"></a><strong>图生图</strong></h3><p><strong>图生图（image2image）是对文生图功能的一个扩展</strong>，这个功能来源于<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2108.01073">SDEdit</a>这个工作，其核心思路也非常简单：给定一个笔画的色块图像，可以先给它加一定的高斯噪音（执行扩散过程）得到噪音图像，然后基于扩散模型对这个噪音图像进行去噪，就可以生成新的图像，但是这个图像在结构和布局和输入图像基本一致。</p><p><img src="https://pic4.zhimg.com/80/v2-88ea5b0999db0f14b270847ab12610b3_1440w.webp" alt=""></p><p>对于SD来说，图生图的流程图如下所示，相比文生图流程来说，这里的初始latent不再是一个随机噪音，而是由初始图像经过autoencoder编码之后的latent加高斯噪音得到，这里的加噪过程就是扩散过程。要注意的是，去噪过程的步数要和加噪过程的步数一致，就是说你加了多少噪音，就应该去掉多少噪音，这样才能生成想要的无噪音图像。</p><p><img src="https://pic4.zhimg.com/80/v2-1f760753b2577060a67963f6532634cb_1440w.webp" alt=""></p><p>在diffusers中，我们可以使用<code>StableDiffusionImg2ImgPipeline</code>来实现文生图，具体代码如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> StableDiffusionImg2ImgPipeline</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载图生图pipeline</span></span><br><span class="line">model_id = <span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span></span><br><span class="line">pipe = StableDiffusionImg2ImgPipeline.from_pretrained(model_id, torch_dtype=torch.float16).to(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取初始图片</span></span><br><span class="line">init_image = Image.<span class="built_in">open</span>(<span class="string">&quot;init_image.png&quot;</span>).convert(<span class="string">&quot;RGB&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推理</span></span><br><span class="line">prompt = <span class="string">&quot;A fantasy landscape, trending on artstation&quot;</span></span><br><span class="line">generator = torch.Generator(device=<span class="string">&quot;cuda&quot;</span>).manual_seed(<span class="number">2023</span>)</span><br><span class="line"></span><br><span class="line">image = pipe(</span><br><span class="line">    prompt=prompt,</span><br><span class="line">    image=init_image,</span><br><span class="line">    strength=<span class="number">0.8</span>,</span><br><span class="line">    guidance_scale=<span class="number">7.5</span>,</span><br><span class="line">    generator=generator</span><br><span class="line">).images[<span class="number">0</span>]</span><br><span class="line">image</span><br></pre></td></tr></table></figure><p>相比文生图的pipeline，图生图的pipeline还多了一个参数<code>strength</code>，这个参数介于0-1之间，表示对输入图片加噪音的程度，这个值越大加的噪音越多，对原始图片的破坏也就越大，当strength=1时，其实就变成了一个随机噪音，此时就相当于纯粹的文生图pipeline了。下面展示了一个具体的实例，这里的第一张图为输入的初始图片，它是一个笔画的色块，我们可以通过图生图将它生成一幅具体的图像，其中第2张图和第3张图的strength分别是0.5和0.8，可以看到当strength=0.5时，生成的图像和原图比较一致，但是就比较简单了，当strength=0.8时，生成的图像偏离原图更多，但是图像的质感有一个明显的提升。</p><p><img src="https://pic3.zhimg.com/80/v2-4e0affea8868b71ca483fc0a4c324b26_1440w.webp" alt=""></p><p>图生图这个功能一个更广泛的应用是在风格转换上，比如给定一张人像，想生成动漫风格的图像。这里我们可以使用动漫风格的开源模型<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/andite/anything-v4.0">anything-v4.0</a>，它是基于SD v1.5在动漫风格数据集上finetune的，使用它可以更好地利用图生图将人物动漫化。下面的第1张为输入人物图像，采用的prompt为”masterpiece, best quality, 1girl, red hair, medium hair, green eyes”，后面的图像是strength分别为0.3-0.9下生成的图像。可以看到在不同的strength下图像有不同的生成效果，其中strength=0.6时我觉得效果是最好的。</p><p><img src="https://pic1.zhimg.com/80/v2-9ff42eb6049882d71ff76c97ce7a8a80_1440w.webp" alt=""></p><p>总结来看，<strong>图生图其实核心也是依赖了文生图的能力，其中strength这个参数需要灵活调节来得到满意的图像</strong>。在最后，我们也给出图生图pipeline的内部主要代码，如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> PIL</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> AutoencoderKL, UNet2DConditionModel, DDIMScheduler</span><br><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> CLIPTextModel, CLIPTokenizer</span><br><span class="line"><span class="keyword">from</span> tqdm.auto <span class="keyword">import</span> tqdm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">model_id = <span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span></span><br><span class="line"><span class="comment"># 1. 加载autoencoder</span></span><br><span class="line">vae = AutoencoderKL.from_pretrained(model_id, subfolder=<span class="string">&quot;vae&quot;</span>)</span><br><span class="line"><span class="comment"># 2. 加载tokenizer和text encoder </span></span><br><span class="line">tokenizer = CLIPTokenizer.from_pretrained(model_id, subfolder=<span class="string">&quot;tokenizer&quot;</span>)</span><br><span class="line">text_encoder = CLIPTextModel.from_pretrained(model_id, subfolder=<span class="string">&quot;text_encoder&quot;</span>)</span><br><span class="line"><span class="comment"># 3. 加载扩散模型UNet</span></span><br><span class="line">unet = UNet2DConditionModel.from_pretrained(model_id, subfolder=<span class="string">&quot;unet&quot;</span>)</span><br><span class="line"><span class="comment"># 4. 定义noise scheduler</span></span><br><span class="line">noise_scheduler = DDIMScheduler(</span><br><span class="line">    num_train_timesteps=<span class="number">1000</span>,</span><br><span class="line">    beta_start=<span class="number">0.00085</span>,</span><br><span class="line">    beta_end=<span class="number">0.012</span>,</span><br><span class="line">    beta_schedule=<span class="string">&quot;scaled_linear&quot;</span>,</span><br><span class="line">    clip_sample=<span class="literal">False</span>, <span class="comment"># don&#x27;t clip sample, the x0 in stable diffusion not in range [-1, 1]</span></span><br><span class="line">    set_alpha_to_one=<span class="literal">False</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将模型复制到GPU上</span></span><br><span class="line">device = <span class="string">&quot;cuda&quot;</span></span><br><span class="line">vae.to(device, dtype=torch.float16)</span><br><span class="line">text_encoder.to(device, dtype=torch.float16)</span><br><span class="line">unet = unet.to(device, dtype=torch.float16)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 预处理init_image</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">preprocess</span>(<span class="params">image</span>):</span><br><span class="line">    w, h = image.size</span><br><span class="line">    w, h = <span class="built_in">map</span>(<span class="keyword">lambda</span> x: x - x % <span class="number">32</span>, (w, h))  <span class="comment"># resize to integer multiple of 32</span></span><br><span class="line">    image = image.resize((w, h), resample=PIL.Image.LANCZOS)</span><br><span class="line">    image = np.array(image).astype(np.float32) / <span class="number">255.0</span></span><br><span class="line">    image = image[<span class="literal">None</span>].transpose(<span class="number">0</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">    image = torch.from_numpy(image)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2.0</span> * image - <span class="number">1.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数设置</span></span><br><span class="line">prompt = [<span class="string">&quot;A fantasy landscape, trending on artstation&quot;</span>]</span><br><span class="line">num_inference_steps = <span class="number">50</span></span><br><span class="line">guidance_scale = <span class="number">7.5</span></span><br><span class="line">strength = <span class="number">0.8</span></span><br><span class="line">batch_size = <span class="number">1</span></span><br><span class="line">negative_prompt = <span class="string">&quot;&quot;</span></span><br><span class="line">generator = torch.Generator(device).manual_seed(<span class="number">2023</span>)</span><br><span class="line"></span><br><span class="line">init_image = PIL.Image.<span class="built_in">open</span>(<span class="string">&quot;init_image.png&quot;</span>).convert(<span class="string">&quot;RGB&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> torch.no_grad():</span><br><span class="line"> <span class="comment"># 获取prompt的text_embeddings</span></span><br><span class="line"> text_input = tokenizer(prompt, padding=<span class="string">&quot;max_length&quot;</span>, max_length=tokenizer.model_max_length, truncation=<span class="literal">True</span>, return_tensors=<span class="string">&quot;pt&quot;</span>)</span><br><span class="line">    text_embeddings = text_encoder(text_input.input_ids.to(device))[<span class="number">0</span>]</span><br><span class="line"> <span class="comment"># 获取unconditional text embeddings</span></span><br><span class="line"> max_length = text_input.input_ids.shape[-<span class="number">1</span>]</span><br><span class="line"> uncond_input = tokenizer(</span><br><span class="line">     [negative_prompt] * batch_size, padding=<span class="string">&quot;max_length&quot;</span>, max_length=max_length, return_tensors=<span class="string">&quot;pt&quot;</span></span><br><span class="line"> )</span><br><span class="line">      uncond_embeddings = text_encoder(uncond_input.input_ids.to(device))[<span class="number">0</span>]</span><br><span class="line"> <span class="comment"># 拼接batch</span></span><br><span class="line"> text_embeddings = torch.cat([uncond_embeddings, text_embeddings])</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 设置采样步数</span></span><br><span class="line"> noise_scheduler.set_timesteps(num_inference_steps, device=device)</span><br><span class="line"> <span class="comment"># 根据strength计算timesteps</span></span><br><span class="line"> init_timestep = <span class="built_in">min</span>(<span class="built_in">int</span>(num_inference_steps * strength), num_inference_steps)</span><br><span class="line"> t_start = <span class="built_in">max</span>(num_inference_steps - init_timestep, <span class="number">0</span>)</span><br><span class="line"> timesteps = noise_scheduler.timesteps[t_start:]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment"># 预处理init_image</span></span><br><span class="line"> init_input = preprocess(init_image)</span><br><span class="line">    init_latents = vae.encode(init_input.to(device, dtype=torch.float16)).latent_dist.sample(generator)</span><br><span class="line">    init_latents = <span class="number">0.18215</span> * init_latents</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 给init_latents加噪音</span></span><br><span class="line"> noise = torch.randn(init_latents.shape, generator=generator, device=device, dtype=init_latents.dtype)</span><br><span class="line"> init_latents = noise_scheduler.add_noise(init_latents, noise, timesteps[:<span class="number">1</span>])</span><br><span class="line"> latents = init_latents <span class="comment"># 作为初始latents</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment"># Do denoise steps</span></span><br><span class="line"> <span class="keyword">for</span> t <span class="keyword">in</span> tqdm(timesteps):</span><br><span class="line">     <span class="comment"># 这里latens扩展2份，是为了同时计算unconditional prediction</span></span><br><span class="line">     latent_model_input = torch.cat([latents] * <span class="number">2</span>)</span><br><span class="line">     latent_model_input = noise_scheduler.scale_model_input(latent_model_input, t) <span class="comment"># for DDIM, do nothing</span></span><br><span class="line"></span><br><span class="line">     <span class="comment"># 预测噪音</span></span><br><span class="line">        noise_pred = unet(latent_model_input, t, encoder_hidden_states=text_embeddings).sample</span><br><span class="line"></span><br><span class="line">     <span class="comment"># CFG</span></span><br><span class="line">     noise_pred_uncond, noise_pred_text = noise_pred.chunk(<span class="number">2</span>)</span><br><span class="line">     noise_pred = noise_pred_uncond + guidance_scale * (noise_pred_text - noise_pred_uncond)</span><br><span class="line"></span><br><span class="line">     <span class="comment"># 计算上一步的noisy latents：x_t -&gt; x_t-1</span></span><br><span class="line">     latents = noise_scheduler.step(noise_pred, t, latents).prev_sample</span><br><span class="line">    </span><br><span class="line"> <span class="comment"># 注意要对latents进行scale</span></span><br><span class="line"> latents = <span class="number">1</span> / <span class="number">0.18215</span> * latents</span><br><span class="line">    <span class="comment"># 解码</span></span><br><span class="line">    image = vae.decode(latents).sample</span><br></pre></td></tr></table></figure><h3 id="图像inpainting"><a href="#图像inpainting" class="headerlink" title="图像inpainting"></a><strong>图像inpainting</strong></h3><p>最后我们要介绍的一项功能是图像inpainting，它和图生图一样也是文生图功能的一个扩展。SD的图像inpainting不是用在图像修复上，而是主要用在<strong>图像编辑</strong>上：给定一个输入图像和想要编辑的区域mask，我们想通过文生图来编辑mask区域的内容。SD的图像inpainting原理可以参考论文<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2206.02779">Blended Latent Diffusion</a>，其主要原理图如下所示：</p><p><img src="https://pic4.zhimg.com/80/v2-927c1583cfcb13dfab39f9fcda1ab96b_1440w.webp" alt=""></p><p>它和图生图一样：首先将输入图像通过autoencoder编码为latent，然后加入一定的高斯噪音生成noisy latent，再进行去噪生成图像，但是这里为了保证mask以外的区域不发生变化，在去噪过程的每一步，都将扩散模型预测的noisy latent用真实图像同level的nosiy latent替换。 在diffusers中，使用<code>StableDiffusionInpaintPipelineLegacy</code>可以实现文本引导下的图像inpainting，具体代码如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> StableDiffusionInpaintPipelineLegacy</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载inpainting pipeline</span></span><br><span class="line">model_id = <span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span></span><br><span class="line">pipe = StableDiffusionInpaintPipelineLegacy.from_pretrained(model_id, torch_dtype=torch.float16).to(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取输入图像和输入mask</span></span><br><span class="line">input_image = Image.<span class="built_in">open</span>(<span class="string">&quot;overture-creations-5sI6fQgYIuo.png&quot;</span>).resize((<span class="number">512</span>, <span class="number">512</span>))</span><br><span class="line">input_mask = Image.<span class="built_in">open</span>(<span class="string">&quot;overture-creations-5sI6fQgYIuo_mask.png&quot;</span>).resize((<span class="number">512</span>, <span class="number">512</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行推理</span></span><br><span class="line">prompt = [<span class="string">&quot;a mecha robot sitting on a bench&quot;</span>, <span class="string">&quot;a cat sitting on a bench&quot;</span>]</span><br><span class="line">generator = torch.Generator(<span class="string">&quot;cuda&quot;</span>).manual_seed(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> torch.autocast(<span class="string">&quot;cuda&quot;</span>):</span><br><span class="line">    images = pipe(</span><br><span class="line">        prompt=prompt,</span><br><span class="line">        image=input_image,</span><br><span class="line">        mask_image=input_mask,</span><br><span class="line">        num_inference_steps=<span class="number">50</span>,</span><br><span class="line">        strength=<span class="number">0.75</span>,</span><br><span class="line">        guidance_scale=<span class="number">7.5</span>,</span><br><span class="line">        num_images_per_prompt=<span class="number">1</span>,</span><br><span class="line">        generator=generator,</span><br><span class="line">    ).images</span><br></pre></td></tr></table></figure><p>下面是一个具体的生成效果，这里我们将输入图像的dog换成了mecha robot或者cat，从而实现了图像编辑。</p><p><img src="https://pic1.zhimg.com/80/v2-d46397655ae48aa691ec55b4c8e8ba98_1440w.webp" alt=""></p><p>要注意的是这里的参数guidance_scale也和图生图一样比较重要，要生成好的图像，需要选择合适的guidance_scale。如果guidance_scale=0.5时，生成的图像由于过于受到原图干扰而产生一些不协调，如下所示：</p><p><img src="https://pic3.zhimg.com/80/v2-ec7dc58bc0ea6fe71e68559eda72acae_1440w.webp" alt=""></p><p>合适的prompt也比较重要，比如如果我们去掉prompt中的”sitting on a bench”，那么编辑的图像效果也会出现不协调：</p><p><img src="https://pic1.zhimg.com/80/v2-6e559a47524be82c50c5f00b502bc204_1440w.webp" alt=""></p><p>无论是上面的图生图还是这里的图像inpainting，我们其实并没有去finetune SD模型，只是扩展了它的能力，但是这两样功能就需要精确调整参数才能得到满意的生成效果。 这里，我们也给出<code>StableDiffusionInpaintPipelineLegacy</code>这个pipeline内部的核心代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> PIL</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> AutoencoderKL, UNet2DConditionModel, DDIMScheduler</span><br><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> CLIPTextModel, CLIPTokenizer</span><br><span class="line"><span class="keyword">from</span> tqdm.auto <span class="keyword">import</span> tqdm</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">preprocess_mask</span>(<span class="params">mask</span>):</span><br><span class="line">    mask = mask.convert(<span class="string">&quot;L&quot;</span>)</span><br><span class="line">    w, h = mask.size</span><br><span class="line">    w, h = <span class="built_in">map</span>(<span class="keyword">lambda</span> x: x - x % <span class="number">32</span>, (w, h))  <span class="comment"># resize to integer multiple of 32</span></span><br><span class="line">    mask = mask.resize((w // <span class="number">8</span>, h // <span class="number">8</span>), resample=PIL.Image.NEAREST)</span><br><span class="line">    mask = np.array(mask).astype(np.float32) / <span class="number">255.0</span></span><br><span class="line">    mask = np.tile(mask, (<span class="number">4</span>, <span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">    mask = mask[<span class="literal">None</span>].transpose(<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)  <span class="comment"># what does this step do?</span></span><br><span class="line">    mask = <span class="number">1</span> - mask  <span class="comment"># repaint white, keep black</span></span><br><span class="line">    mask = torch.from_numpy(mask)</span><br><span class="line">    <span class="keyword">return</span> mask</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">preprocess</span>(<span class="params">image</span>):</span><br><span class="line">    w, h = image.size</span><br><span class="line">    w, h = <span class="built_in">map</span>(<span class="keyword">lambda</span> x: x - x % <span class="number">32</span>, (w, h))  <span class="comment"># resize to integer multiple of 32</span></span><br><span class="line">    image = image.resize((w, h), resample=PIL.Image.LANCZOS)</span><br><span class="line">    image = np.array(image).astype(np.float32) / <span class="number">255.0</span></span><br><span class="line">    image = image[<span class="literal">None</span>].transpose(<span class="number">0</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">    image = torch.from_numpy(image)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2.0</span> * image - <span class="number">1.0</span></span><br><span class="line"></span><br><span class="line">model_id = <span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span></span><br><span class="line"><span class="comment"># 1. 加载autoencoder</span></span><br><span class="line">vae = AutoencoderKL.from_pretrained(model_id, subfolder=<span class="string">&quot;vae&quot;</span>)</span><br><span class="line"><span class="comment"># 2. 加载tokenizer和text encoder </span></span><br><span class="line">tokenizer = CLIPTokenizer.from_pretrained(model_id, subfolder=<span class="string">&quot;tokenizer&quot;</span>)</span><br><span class="line">text_encoder = CLIPTextModel.from_pretrained(model_id, subfolder=<span class="string">&quot;text_encoder&quot;</span>)</span><br><span class="line"><span class="comment"># 3. 加载扩散模型UNet</span></span><br><span class="line">unet = UNet2DConditionModel.from_pretrained(model_id, subfolder=<span class="string">&quot;unet&quot;</span>)</span><br><span class="line"><span class="comment"># 4. 定义noise scheduler</span></span><br><span class="line">noise_scheduler = DDIMScheduler(</span><br><span class="line">    num_train_timesteps=<span class="number">1000</span>,</span><br><span class="line">    beta_start=<span class="number">0.00085</span>,</span><br><span class="line">    beta_end=<span class="number">0.012</span>,</span><br><span class="line">    beta_schedule=<span class="string">&quot;scaled_linear&quot;</span>,</span><br><span class="line">    clip_sample=<span class="literal">False</span>, <span class="comment"># don&#x27;t clip sample, the x0 in stable diffusion not in range [-1, 1]</span></span><br><span class="line">    set_alpha_to_one=<span class="literal">False</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将模型复制到GPU上</span></span><br><span class="line">device = <span class="string">&quot;cuda&quot;</span></span><br><span class="line">vae.to(device, dtype=torch.float16)</span><br><span class="line">text_encoder.to(device, dtype=torch.float16)</span><br><span class="line">unet = unet.to(device, dtype=torch.float16)</span><br><span class="line"></span><br><span class="line">prompt = <span class="string">&quot;a mecha robot sitting on a bench&quot;</span></span><br><span class="line">strength = <span class="number">0.75</span></span><br><span class="line">guidance_scale = <span class="number">7.5</span></span><br><span class="line">batch_size = <span class="number">1</span></span><br><span class="line">num_inference_steps = <span class="number">50</span></span><br><span class="line">negative_prompt = <span class="string">&quot;&quot;</span></span><br><span class="line">generator = torch.Generator(device).manual_seed(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> torch.no_grad():</span><br><span class="line">    <span class="comment"># 获取prompt的text_embeddings</span></span><br><span class="line">    text_input = tokenizer(prompt, padding=<span class="string">&quot;max_length&quot;</span>, max_length=tokenizer.model_max_length, truncation=<span class="literal">True</span>, return_tensors=<span class="string">&quot;pt&quot;</span>)</span><br><span class="line">    text_embeddings = text_encoder(text_input.input_ids.to(device))[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 获取unconditional text embeddings</span></span><br><span class="line">    max_length = text_input.input_ids.shape[-<span class="number">1</span>]</span><br><span class="line">    uncond_input = tokenizer(</span><br><span class="line">        [negative_prompt] * batch_size, padding=<span class="string">&quot;max_length&quot;</span>, max_length=max_length, return_tensors=<span class="string">&quot;pt&quot;</span></span><br><span class="line">    )</span><br><span class="line">    uncond_embeddings = text_encoder(uncond_input.input_ids.to(device))[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 拼接batch</span></span><br><span class="line">    text_embeddings = torch.cat([uncond_embeddings, text_embeddings])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置采样步数</span></span><br><span class="line">    noise_scheduler.set_timesteps(num_inference_steps, device=device)</span><br><span class="line">    <span class="comment"># 根据strength计算timesteps</span></span><br><span class="line">    init_timestep = <span class="built_in">min</span>(<span class="built_in">int</span>(num_inference_steps * strength), num_inference_steps)</span><br><span class="line">    t_start = <span class="built_in">max</span>(num_inference_steps - init_timestep, <span class="number">0</span>)</span><br><span class="line">    timesteps = noise_scheduler.timesteps[t_start:]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 预处理init_image</span></span><br><span class="line">    init_input = preprocess(input_image)</span><br><span class="line">    init_latents = vae.encode(init_input.to(device, dtype=torch.float16)).latent_dist.sample(generator)</span><br><span class="line">    init_latents = <span class="number">0.18215</span> * init_latents</span><br><span class="line">    init_latents = torch.cat([init_latents] * batch_size, dim=<span class="number">0</span>)</span><br><span class="line">    init_latents_orig = init_latents</span><br><span class="line">    <span class="comment"># 处理mask</span></span><br><span class="line">    mask_image = preprocess_mask(input_mask)</span><br><span class="line">    mask_image = mask_image.to(device=device, dtype=init_latents.dtype)</span><br><span class="line">    mask = torch.cat([mask_image] * batch_size)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 给init_latents加噪音</span></span><br><span class="line">    noise = torch.randn(init_latents.shape, generator=generator, device=device, dtype=init_latents.dtype)</span><br><span class="line">    init_latents = noise_scheduler.add_noise(init_latents, noise, timesteps[:<span class="number">1</span>])</span><br><span class="line">    latents = init_latents <span class="comment"># 作为初始latents</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Do denoise steps</span></span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> tqdm(timesteps):</span><br><span class="line">        <span class="comment"># 这里latens扩展2份，是为了同时计算unconditional prediction</span></span><br><span class="line">        latent_model_input = torch.cat([latents] * <span class="number">2</span>)</span><br><span class="line">        latent_model_input = noise_scheduler.scale_model_input(latent_model_input, t) <span class="comment"># for DDIM, do nothing</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 预测噪音</span></span><br><span class="line">        noise_pred = unet(latent_model_input, t, encoder_hidden_states=text_embeddings).sample</span><br><span class="line"></span><br><span class="line">        <span class="comment"># CFG</span></span><br><span class="line">        noise_pred_uncond, noise_pred_text = noise_pred.chunk(<span class="number">2</span>)</span><br><span class="line">        noise_pred = noise_pred_uncond + guidance_scale * (noise_pred_text - noise_pred_uncond)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 计算上一步的noisy latents：x_t -&gt; x_t-1</span></span><br><span class="line">        latents = noise_scheduler.step(noise_pred, t, latents).prev_sample</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 将unmask区域替换原始图像的nosiy latents</span></span><br><span class="line">        init_latents_proper = noise_scheduler.add_noise(init_latents_orig, noise, torch.tensor([t]))</span><br><span class="line">        latents = (init_latents_proper * mask) + (latents * (<span class="number">1</span> - mask))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 注意要对latents进行scale</span></span><br><span class="line">    latents = <span class="number">1</span> / <span class="number">0.18215</span> * latents</span><br><span class="line">    image = vae.decode(latents).sample</span><br></pre></td></tr></table></figure><p>另外，runwayml在发布SD 1.5版本的同时还发布了一个inpainting模型：<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/runwayml/stable-diffusion-inpainting">runwayml/stable-diffusion-inpainting</a>，与前面所讲不同的是，这是一个<strong>在SD 1.2上finetune的模型</strong>。原来SD的UNet的输入是64x64x4，为了实现inpainting，现在给UNet的第一个卷机层增加5个channels，分别为masked图像的latents（经过autoencoder编码，64x64x4）和mask图像（直接下采样8x，64x64x1），增加的权重填零初始化。在diffusers中，可以使用<code>StableDiffusionInpaintPipeline</code>来调用这个模型，具体代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> StableDiffusionInpaintPipeline</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> tqdm.auto <span class="keyword">import</span> tqdm</span><br><span class="line"><span class="keyword">import</span> PIL</span><br><span class="line"></span><br><span class="line"><span class="comment"># Load pipeline</span></span><br><span class="line">model_id = <span class="string">&quot;runwayml/stable-diffusion-inpainting/&quot;</span></span><br><span class="line">pipe = StableDiffusionInpaintPipeline.from_pretrained(model_id, torch_dtype=torch.float16).to(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line"></span><br><span class="line">prompt = [<span class="string">&quot;a mecha robot sitting on a bench&quot;</span>, <span class="string">&quot;a dog sitting on a bench&quot;</span>, <span class="string">&quot;a bench&quot;</span>]</span><br><span class="line"></span><br><span class="line">generator = torch.Generator(<span class="string">&quot;cuda&quot;</span>).manual_seed(<span class="number">2023</span>)</span><br><span class="line"></span><br><span class="line">input_image = Image.<span class="built_in">open</span>(<span class="string">&quot;overture-creations-5sI6fQgYIuo.png&quot;</span>).resize((<span class="number">512</span>, <span class="number">512</span>))</span><br><span class="line">input_mask = Image.<span class="built_in">open</span>(<span class="string">&quot;overture-creations-5sI6fQgYIuo_mask.png&quot;</span>).resize((<span class="number">512</span>, <span class="number">512</span>))</span><br><span class="line"></span><br><span class="line">images = pipe(</span><br><span class="line">    prompt=prompt,</span><br><span class="line">    image=input_image,</span><br><span class="line">    mask_image=input_mask,</span><br><span class="line">    num_inference_steps=<span class="number">50</span>,</span><br><span class="line">    generator=generator,</span><br><span class="line">    ).images</span><br></pre></td></tr></table></figure><p>其生成的效果图如下所示：</p><p><img src="https://pic4.zhimg.com/80/v2-71940530603f265d2f2597cf8570ef97_1440w.webp" alt=""></p><p>经过finetune的inpainting在生成细节上可能会更好，但是有可能会丧失部分文生图的能力，而且也比较难迁移其它finetune的SD模型。</p><h2 id="SD-2-0"><a href="#SD-2-0" class="headerlink" title="SD 2.0"></a><strong>SD 2.0</strong></h2><h3 id="SD-2-0-1"><a href="#SD-2-0-1" class="headerlink" title="SD 2.0"></a><strong>SD 2.0</strong></h3><p>Stability AI公司在2022年11月（<a href="https://link.zhihu.com/?target=https%3A//stability.ai/blog/stable-diffusion-v2-release">stable-diffusion-v2-release</a>）放出了<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-2-base">SD 2.0版本</a>，这里我们也简单介绍一下相比SD 1.x版本SD 2.0的具体改进点。SD 2.0相比SD 1.x版本的主要变动在于<strong>模型结构</strong>和<strong>训练数据</strong>两个部分。</p><p><img src="https://pic2.zhimg.com/80/v2-b9c901beba87587f110fc603f79b7b79_1440w.webp" alt=""></p><p>首先是模型结构方面，SD 1.x版本的text encoder采用的是OpenAI的CLIP ViT-L/14模型，其模型参数量为123.65M；而SD 2.0采用了更大的text encoder：基于OpenCLIP在laion-2b数据集上训练的<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/laion/CLIP-ViT-H-14-laion2B-s32B-b79K">CLIP ViT-H/14</a>模型，其参数量为354.03M，相比原来的text encoder模型大了约3倍。两个CLIP模型的对比如下所示：</p><p><img src="https://pic1.zhimg.com/80/v2-f4f57a7cbcdfabb12dc11e57792d42c8_1440w.webp" alt=""></p><p>可以看到CLIP ViT-H/14模型相比原来的OpenAI的L/14模型，在imagenet1K上分类准确率和mscoco多模态检索任务上均有明显的提升，这也意味着对应的text encoder更强，能够抓住更准确的文本语义信息。另外是一个小细节是SD 2.0提取的是text encoder倒数第二层的特征，而SD 1.x提取的是倒数第一层的特征。由于倒数第一层的特征之后就是CLIP的对比学习任务，所以倒数第一层的特征可能部分丢失细粒度语义信息，Imagen论文（见论文D.1部分）和novelai（见<a href="https://link.zhihu.com/?target=https%3A//blog.novelai.net/novelai-improvements-on-stable-diffusion-e10d38db82ac">novelai blog</a>）均采用了倒数第二层特征。对于UNet模型，SD 2.0相比SD 1.x几乎没有改变，就是由于换了CLIP模型，cross attention dimension从原来的768变成了1024，这个导致参数量有轻微变化。另外一个小的变动是：SD 2.0不同stage的attention模块是固定attention head dim为64，而SD 1.0则是不同stage的attention模块采用固定attention head数量，明显SD 2.0的这种设定更常用，但是这个变动不会影响模型参数。 然后是训练数据，前面说过SD 1.x版本其实最后主要采用laion-2B中美学评分为5以上的子集来训练，而SD 2.0版本采用评分在4.5以上的子集，相当于扩大了训练数据集，具体的训练细节见<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-2">model card</a>。 另外SD 2.0除了512x512版本的模型，还包括768x768版本的模型（<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-2">https://huggingface.co/stabilityai/stable-diffusion-2</a>），所谓的768x768模型是在512x512模型基础上用图像分辨率大于768x768的子集继续训练的，不过优化目标不再是noise_prediction，而是采用<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2202.00512">Progressive Distillation for Fast Sampling of Diffusion Models</a>论文中所提出的 v-objective。 下图为SD 2.0和SD 1.x版本在COCO2017验证集上评测的对比，可以看到2.0相比1.5，CLIP score有一个明显的提升，同时FID也有一定的提升。但是正如前面所讨论的，FID和CLIP score这两个指标均有一定的局限性，所以具体效果还是上手使用来对比。</p><p><img src="https://pic4.zhimg.com/80/v2-9526ce01305b9226d1f15ce4d25079cb_1440w.webp" alt=""></p><p>Stability AI在发布SD 2.0的同时，还发布了另外3个模型：<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-x4-upscaler">stable-diffusion-x4-upscaler</a>，<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-2-inpainting">stable-diffusion-2-inpainting</a>和<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-2-depth">stable-diffusion-2-depth</a>。 <a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-x4-upscaler">stable-diffusion-x4-upscaler</a>是一个基于扩散模型的4x超分模型，它也是基于latent diffusion，不过这里采用的autoencoder是基于VQ-reg的，下采样率为。在实现上，它是将低分辨率图像直接和noisy latent拼接在一起送入UNet，因为autoencoder将高分辨率图像压缩为原来的1/4，而低分辨率图像也为高分辨率图像的1/4，所以低分辨率图像的空间维度和latent是一致的。另外，这个超分模型也采用了<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2106.15282">Cascaded Diffusion Models for High Fidelity Image Generation</a>所提出的noise conditioning augmentation，简单来说就是在训练过程中给低分辨率图像加上高斯噪音，可以通过扩散过程来实现，注意这里的扩散过程的scheduler与主扩散模型的scheduler可以不一样，同时也将对应的noise_level（对应扩散模型的time step）通过class labels的方式送入UNet，让UNet知道加入噪音的程度。stable-diffusion-x4-upscaler是使用LAION中&gt;2048x2048大小的子集（10M）训练的，训练过程中采用512x512的crops来训练（降低显存消耗）。SD模型可以用来生成512x512图像，加上这个超分模型，就可以得到2048x2048大小的图像。</p><p><img src="https://pic2.zhimg.com/80/v2-b00157e0603f4da6bccc9b7a184406b9_1440w.webp" alt=""></p><p>在diffusers库中，可以如下使用这个超分模型（这里的noise level是指推理时对低分辨率图像加入噪音的程度）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> StableDiffusionUpscalePipeline</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line"><span class="comment"># load model and scheduler</span></span><br><span class="line">model_id = <span class="string">&quot;stabilityai/stable-diffusion-x4-upscaler&quot;</span></span><br><span class="line">pipeline = StableDiffusionUpscalePipeline.from_pretrained(model_id, torch_dtype=torch.float16)</span><br><span class="line">pipeline = pipeline.to(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># let&#x27;s download an  image</span></span><br><span class="line">url = <span class="string">&quot;https://huggingface.co/datasets/hf-internal-testing/diffusers-images/resolve/main/sd2-upscale/low_res_cat.png&quot;</span></span><br><span class="line">response = requests.get(url)</span><br><span class="line">low_res_img = Image.<span class="built_in">open</span>(BytesIO(response.content)).convert(<span class="string">&quot;RGB&quot;</span>)</span><br><span class="line">low_res_img = low_res_img.resize((<span class="number">128</span>, <span class="number">128</span>))</span><br><span class="line"></span><br><span class="line">prompt = <span class="string">&quot;a white cat&quot;</span></span><br><span class="line"></span><br><span class="line">upscaled_image = pipeline(prompt=prompt, image=low_res_img, noise_level=<span class="number">20</span>).images[<span class="number">0</span>]</span><br><span class="line">upscaled_image.save(<span class="string">&quot;upsampled_cat.png&quot;</span>)</span><br></pre></td></tr></table></figure><p><a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-2-inpainting">stable-diffusion-2-inpainting</a>是图像inpainting模型，和前面所说的<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/runwayml/stable-diffusion-inpainting">runwayml/stable-diffusion-inpainting</a>基本一样，不过它是在SD 2.0的512x512版本上finetune的。</p><p><img src="https://pic4.zhimg.com/80/v2-3e7314c658c27783635a47dee1ed3ea3_1440w.webp" alt=""></p><p><a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-2-depth">stable-diffusion-2-depth</a>是也是在SD 2.0的512x512版本上finetune的模型，它是额外增加了图像的深度图作为condition，这里是直接将深度图下采样8x，然后和nosiy latent拼接在一起送入UNet模型中。深度图可以作为一种结构控制，下图展示了加入深度图后生成的图像效果：</p><p><img src="https://pic1.zhimg.com/80/v2-ba0c12df1d24ee074a06412493e397c8_1440w.webp" alt=""></p><p>你可以调用diffusers库中的<code>StableDiffusionDepth2ImgPipeline</code>来实现基于深度图控制的文生图：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> StableDiffusionDepth2ImgPipeline</span><br><span class="line"></span><br><span class="line">pipe = StableDiffusionDepth2ImgPipeline.from_pretrained(</span><br><span class="line">   <span class="string">&quot;stabilityai/stable-diffusion-2-depth&quot;</span>,</span><br><span class="line">   torch_dtype=torch.float16,</span><br><span class="line">).to(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://images.cocodataset.org/val2017/000000039769.jpg&quot;</span></span><br><span class="line">init_image = Image.<span class="built_in">open</span>(requests.get(url, stream=<span class="literal">True</span>).raw)</span><br><span class="line"></span><br><span class="line">prompt = <span class="string">&quot;two tigers&quot;</span></span><br><span class="line">n_propmt = <span class="string">&quot;bad, deformed, ugly, bad anotomy&quot;</span></span><br><span class="line">image = pipe(prompt=prompt, image=init_image, negative_prompt=n_propmt, strength=<span class="number">0.7</span>).images[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><p>除此之外，Stability AI公司还开源了两个加强版的autoencoder：<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/sd-vae-ft-mse-original">ft-EMA和ft-MSE</a>（前者使用L1 loss后者使用MSE loss），前面已经说过，它们是在LAION数据集继续finetune decoder来增强重建效果。</p><h3 id="SD-2-1"><a href="#SD-2-1" class="headerlink" title="SD 2.1"></a><strong>SD 2.1</strong></h3><p>在SD 2.0版本发布几周后，Stability AI又发布了<a href="https://link.zhihu.com/?target=https%3A//stability.ai/blog/stablediffusion2-1-release7-dec-2022">SD 2.1</a>。SD 2.0在训练过程中采用NSFW检测器过滤掉了可能包含色情的图像（punsafe=0.1），但是也同时过滤了很多人像图片，这导致SD 2.0在人像生成上效果可能较差，所以SD 2.1是在SD 2.0的基础上放开了限制（punsafe=0.98）继续finetune，所以增强了人像的生成效果。</p><p><img src="https://pic2.zhimg.com/80/v2-904f2a50d768c499948deb0be938ba65_1440w.webp" alt=""></p><p>和SD 2.0一样，SD 2.1也包含两个版本：<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-2-1-base">512x512版本</a>和<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-2-1">768x768版本</a>。</p><h3 id="SD-unclip"><a href="#SD-unclip" class="headerlink" title="SD unclip"></a><strong>SD unclip</strong></h3><p>Stability AI在2023年3月份，又放出了基于SD的另外一个模型：<a href="https://link.zhihu.com/?target=https%3A//stability.ai/blog/stable-diffusion-reimagine">stable-diffusion-reimagine</a>，它可以实现单个图像的变换，即image variations，目前该模型已经在在huggingface上开源：<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-2-1-unclip">stable-diffusion-2-1-unclip</a>。</p><p><img src="https://pic3.zhimg.com/80/v2-e4cf221f07f5873312e9e6f3fa1f977a_1440w.webp" alt=""></p><p>这个模型是借鉴了OpenAI的DALLE2（又称unCLIP)，unCLIP是基于CLIP的image encoder提取的image embeddings作为condition来实现图像的生成。</p><p><img src="https://pic3.zhimg.com/80/v2-8add1d6507e924f1b60b6854f86cf53a_1440w.webp" alt=""></p><p>SD unCLIP是在原来的SD模型的基础上增加了CLIP的image encoder的nosiy image embeddings作为condition。具体来说，它在训练过程中是对提取的image embeddings施加一定的高斯噪音（也是通过扩散过程），然后将noise level对应的time embeddings和image embeddings拼接在一起，最后再以class labels的方式送入UNet。在diffusers中，你可以调用<code>StableUnCLIPImg2ImgPipeline</code>来实现图像的变换：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> StableUnCLIPImg2ImgPipeline</span><br><span class="line"></span><br><span class="line"><span class="comment">#Start the StableUnCLIP Image variations pipeline</span></span><br><span class="line">pipe = StableUnCLIPImg2ImgPipeline.from_pretrained(</span><br><span class="line">    <span class="string">&quot;stabilityai/stable-diffusion-2-1-unclip&quot;</span>, torch_dtype=torch.float16, variation=<span class="string">&quot;fp16&quot;</span></span><br><span class="line">)</span><br><span class="line">pipe = pipe.to(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Get image from URL</span></span><br><span class="line">url = <span class="string">&quot;https://huggingface.co/datasets/hf-internal-testing/diffusers-images/resolve/main/stable_unclip/tarsila_do_amaral.png&quot;</span></span><br><span class="line">response = requests.get(url)</span><br><span class="line">init_image = Image.<span class="built_in">open</span>(BytesIO(response.content)).convert(<span class="string">&quot;RGB&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Pipe to make the variation</span></span><br><span class="line">images = pipe(init_image).images</span><br><span class="line">images[<span class="number">0</span>].save(<span class="string">&quot;tarsila_variation.png&quot;</span>)</span><br></pre></td></tr></table></figure><p>其实在SD unCLIP之前，已经有<a href="https://link.zhihu.com/?target=https%3A//lambdalabs.com/">Lambda Labs</a>开源的<a href="https://link.zhihu.com/?target=https%3A//lambdalabs.com/">sd-image-variations-diffusers</a>，它是在SD 1.4的基础上finetune的模型，不过实现方式是直接将text embeddings替换为image embeddings，这样也同样可以实现图像的变换。</p><p><img src="https://pic3.zhimg.com/80/v2-6baa63b6a282ab9b55c301af2a94dd86_1440w.webp" alt=""></p><p>这里SD unCLIP有两个版本：sd21-unclip-l和sd21-unclip-h，两者分别是采用OpenAI CLIP-L和OpenCLIP-H模型的image embeddings作为condition。如果要实现文生图，还需要像DALLE2那样训练一个prior模型，它可以实现基于文本来预测对应的image embeddings，我们将prior模型和SD unCLIP接在一起就可以实现文生图了。<a href="https://link.zhihu.com/?target=https%3A//kakaobrain.com/">KakaoBrain</a>这个公司已经开源了一个DALLE2的复现版本：<a href="https://link.zhihu.com/?target=https%3A//github.com/kakaobrain/karlo">Karlo</a>，它是基于OpenAI CLIP-L来实现的，你可以基于这个模型中prior模块加上sd21-unclip-l来实现文本到图像的生成，目前这个已经集成了在<a href="https://link.zhihu.com/?target=https%3A//github.com/huggingface/diffusers/blob/main/src/diffusers/pipelines/stable_diffusion/pipeline_stable_unclip.py">StableUnCLIPPipeline</a>中，或者基于<a href="https://link.zhihu.com/?target=https%3A//github.com/Stability-AI/stablediffusion/blob/main/scripts/streamlit/stableunclip.py">stablediffusion官方仓库</a>来实现。</p><p><img src="https://pic3.zhimg.com/80/v2-030ded0b7cca24ffb813d26fc887b1a6_1440w.webp" alt=""></p><h2 id="SD的其它特色应用"><a href="#SD的其它特色应用" class="headerlink" title="SD的其它特色应用"></a><strong>SD的其它特色应用</strong></h2><p>在SD模型开源之后，社区和研究机构也基于SD实现了形式多样的特色应用，这里我们也选择一些比较火的应用来介绍一下。</p><h3 id="个性化生成"><a href="#个性化生成" class="headerlink" title="个性化生成"></a><strong>个性化生成</strong></h3><p>个性化生成是指的生成特定的角色或者风格，比如给定自己几张肖像来利用SD来生成个性化头像。在个性化生成方面，比较重要的两个工作是英伟达的<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2208.01618">Textual Inversion</a>和谷歌的<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2208.12242">DreamBooth</a>。 <strong>Textual Inversion</strong>这个工作的核心思路是基于用户提供的3～5张特定概念（物体或者风格）的图像来学习一个特定的text embeddings，实际上只用一个word embedding就足够了。<strong>Textual Inversion</strong>不需要finetune UNet，而且由于text embeddings较小，存储成本很低。目前diffusers库已经支持<a href="https://link.zhihu.com/?target=https%3A//github.com/huggingface/diffusers/tree/main/examples/textual_inversion">textual_inversion的训练</a>。</p><p><img src="https://pic1.zhimg.com/80/v2-2e5448b758b8b67f77c0c7278c70db60_1440w.webp" alt=""></p><p><strong>DreamBooth</strong>原本是谷歌提出的应用在Imagen上的个性化生成，但是它实际上也可以扩展到SD上（更新版论文已经增加了SD）。DreamBooth首先为特定的概念寻找一个特定的描述词[V]，这个特定的描述词只要是稀有的就可以，然后与Textual Inversion不同的是DreamBooth需要finetune UNet，这里为了防止过拟合，增加了一个class-specific prior preservation loss（基于SD生成同class图像加入batch里面训练）来进行正则化。</p><p><img src="https://pic4.zhimg.com/80/v2-810d8ba5757afe4fa4a22a72b8bf345f_1440w.webp" alt=""></p><p>由于finetune了UNet，DreamBooth往往比Textual Inversion要表现的要好，但是DreamBooth的存储成本较高。目前diffusers库已经支持<a href="https://link.zhihu.com/?target=https%3A//github.com/huggingface/diffusers/tree/main/examples/dreambooth">dreambooth训练</a>，你也可以在<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/sd-dreambooth-library">sd-dreambooth-library</a>中找到其他人上传的模型。 DreamBooth和Textual Inversion是最常用的个性化生成方法，但其实除了这两种，还有很多其它的研究工作，比如Adobe提出的<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2212.04488">Custom Diffusion</a>，相比DreamBooth，它只finetune了UNet的attention模块的KV权重矩阵，同时优化一个新概念的token。</p><p><img src="https://pic1.zhimg.com/80/v2-9f3d22dbfbd59c76a2e9ae23b34cfb7c_1440w.webp" alt=""></p><h3 id="风格化finetune模型"><a href="#风格化finetune模型" class="headerlink" title="风格化finetune模型"></a><strong>风格化finetune模型</strong></h3><p>SD的另外一大应用是采用特定风格的数据集进行finetune，这使得<strong>模型“过拟合”在特定的风格上</strong>。之前比较火的novelai就是基于二次元数据在SD上finetune的模型，虽然它失去了生成其它风格图像的能力，但是它在二次元图像的生成效果上比原来的SD要好很多。</p><p><img src="https://pic2.zhimg.com/80/v2-8e8aae59e87393c49ef39820263ed9ed_1440w.webp" alt=""></p><p>目前已经有很多风格化的模型在huggingface上开源，这里也列出一些：</p><ul><li><a href="https://link.zhihu.com/?target=https%3A//huggingface.co/andite/anything-v4.0">andite/anything-v4.0</a>：二次元或者动漫风格图像</li></ul><p><img src="https://pic2.zhimg.com/80/v2-6b783d310eab94176f3e1886a94073ad_1440w.webp" alt=""></p><p>grid-0018.png</p><ul><li><a href="https://link.zhihu.com/?target=https%3A//huggingface.co/dreamlike-art/dreamlike-diffusion-1.0">dreamlike-art/dreamlike-diffusion-1.0</a>：艺术风格图像</li></ul><p><img src="https://pic1.zhimg.com/80/v2-90e406ec533680de88ebc8536d6db20c_1440w.webp" alt=""></p><p>image.png</p><ul><li><a href="https://link.zhihu.com/?target=https%3A//huggingface.co/prompthero/openjourney">prompthero/openjourney</a>：mdjrny-v4风格图像</li></ul><p><img src="https://pic1.zhimg.com/80/v2-96f85e8e85e7b9f53075708acbe2f938_1440w.webp" alt=""></p><p>更多的模型可以直接在<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/models%3Fpipeline_tag%3Dtext-to-image%26sort%3Ddownloads">huggingface text-to-image模型库</a>上找到。此外，很多基于SD进行finetune的模型开源在<a href="https://link.zhihu.com/?target=https%3A//civitai.com/">civitai</a>上，你也可以在这个网站上找到更多风格的模型。 值得说明的一点是，目前finetune SD模型的方法主要有两种：一种是直接finetune了UNet，但是容易过拟合，而且存储成本；另外一种低成本的方法是基于微软的<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2106.09685">LoRA</a>，LoRA本来是用于finetune语言模型的，但是现在已经可以用来finetune SD模型了，具体可以见博客<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/blog/lora">Using LoRA for Efficient Stable Diffusion Fine-Tuning</a>。</p><h3 id="图像编辑"><a href="#图像编辑" class="headerlink" title="图像编辑"></a><strong>图像编辑</strong></h3><p>图像编辑也是SD比较火的应用方向，这里所说的图像编辑是指的是使用SD来实现对图片的局部编辑。这里列举两个比较好的工作：谷歌的<a href="https://link.zhihu.com/?target=https%3A//prompt-to-prompt.github.io/">prompt-to-prompt</a>和加州伯克利的<a href="https://link.zhihu.com/?target=https%3A//www.timothybrooks.com/instruct-pix2pix">instruct-pix2pix</a>。 谷歌的<strong>prompt-to-prompt</strong>的核心是基于UNet的cross attention maps来实现对图像的编辑，它的好处是不需要finetune模型，但是主要用在编辑用SD生成的图像。</p><p><img src="https://pic3.zhimg.com/80/v2-e030e7244f8b2cc2ffea6df0d8fd8f92_1440w.webp" alt=""></p><p>谷歌后面的工作<a href="https://link.zhihu.com/?target=https%3A//null-text-inversion.github.io/">Null-text Inversion</a>有进一步实现了对真实图片的编辑：</p><p><img src="https://pic1.zhimg.com/80/v2-3df9637930f5e7041e5174e3e5491754_1440w.webp" alt=""></p><p><strong>instruct-pix2pix</strong>这个工作基于GPT-3和prompt-to-prompt构建了pair的数据集，然后在SD上进行finetune，它可以输入text instruct对图像进行编辑：</p><p><img src="https://pic1.zhimg.com/80/v2-d1ef06288b3e9e55fe8c5e06834d0288_1440w.webp" alt=""></p><h3 id="可控生成"><a href="#可控生成" class="headerlink" title="可控生成"></a><strong>可控生成</strong></h3><p>可控生成是SD最近比较火的应用，这主要归功于<a href="https://link.zhihu.com/?target=https%3A//github.com/lllyasviel/ControlNet">ControlNet</a>，基于ControlNet可以实现对很多种类的可控生成，比如边缘，人体关键点，草图和深度图等等。</p><p><img src="https://pic4.zhimg.com/80/v2-3292ad0f7cf01d1007ddee10c1417963_1440w.webp" alt=""></p><p><img src="https://pic2.zhimg.com/80/v2-47f7a07f07658468255e4eee08da2e19_1440w.webp" alt=""></p><p><img src="https://pic1.zhimg.com/80/v2-99f30fa18f1a09a75e88c4a12463a23c_1440w.webp" alt=""></p><p>其实在ControlNet之前，也有一些可控生成的工作，比如<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-2-depth">stable-diffusion-2-depth</a>也属于可控生成，但是都没有太火。我觉得ControlNet之所以火，是因为这个工作直接实现了各种各种的可控生成，而且训练的ControlNet可以迁移到其它基于SD finetune的模型上（见<a href="https://link.zhihu.com/?target=https%3A//github.com/lllyasviel/ControlNet/discussions/12">Transfer Control to Other SD1.X Models</a>）：</p><p><img src="https://pic2.zhimg.com/80/v2-85d938ca6266b4f8c3ed899b868e6bb5_1440w.webp" alt=""></p><p>与ControlNet同期的工作还有腾讯的<a href="https://link.zhihu.com/?target=https%3A//github.com/TencentARC/T2I-Adapter">T2I-Adapter</a>以及阿里的<a href="https://link.zhihu.com/?target=https%3A//damo-vilab.github.io/composer-page/">composer-page</a>：</p><p><img src="https://pic4.zhimg.com/80/v2-ef724be09052bb0c7b1144369dd41963_1440w.webp" alt=""></p><h3 id="stable-diffusion-webui"><a href="#stable-diffusion-webui" class="headerlink" title="stable-diffusion-webui"></a><strong>stable-diffusion-webui</strong></h3><p>最后要介绍的一个比较火的应用<a href="https://link.zhihu.com/?target=https%3A//github.com/AUTOMATIC1111/stable-diffusion-webui">stable-diffusion-webui</a>其实是用来支持SD出图的一个web工具，它算是基于<a href="https://link.zhihu.com/?target=https%3A//gradio.app/">gradio</a>框架实现了SD的快速部署，不仅支持SD的最基础的文生图、图生图以及图像inpainting功能，还支持SD的其它拓展功能，很多基于SD的拓展应用可以用插件的方式安装在webui上。</p><p><img src="https://pic3.zhimg.com/80/v2-40b6807bb357a446ec1acbad13bd4d0e_1440w.webp" alt=""></p><h2 id="后话"><a href="#后话" class="headerlink" title="后话"></a><strong>后话</strong></h2><p>在OpenAI最早放出DALLE2的时候，我曾被它生成的图像所惊艳到，但是我从来没有想到图像生成的AIGC会如此火爆，技术的发展太快了，这得益于互联网独有的开源精神。我想，没有SD的开源，估计这个方向可能还会沉寂一段时间。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a><strong>参考</strong></h2><ul><li><a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2112.10752">High-Resolution Image Synthesis with Latent Diffusion Models</a></li><li><a href="https://link.zhihu.com/?target=https%3A//huggingface.co/CompVis/stable-diffusion-v1-4">https://huggingface.co/CompVis/stable-diffusion-v1-4</a></li><li><a href="https://link.zhihu.com/?target=https%3A//huggingface.co/runwayml/stable-diffusion-v1-5">https://huggingface.co/runwayml/stable-diffusion-v1-5</a></li><li><a href="https://link.zhihu.com/?target=https%3A//github.com/huggingface/diffusers">https://github.com/huggingface/diffusers</a></li><li><a href="https://link.zhihu.com/?target=https%3A//huggingface.co/blog/stable_diffusion">https://huggingface.co/blog/stable_diffusion</a></li><li><a href="https://link.zhihu.com/?target=https%3A//github.com/CompVis/latent-diffusion">https://github.com/CompVis/latent-diffusion</a></li><li><a href="https://link.zhihu.com/?target=https%3A//laion.ai/blog/laion-5b/">https://laion.ai/blog/laion-5b/</a></li><li><a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2303.05511">https://arxiv.org/abs/2303.05511</a></li><li><a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2211.01324">https://arxiv.org/abs/2211.01324</a></li><li><a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2205.11487">https://arxiv.org/abs/2205.11487</a></li><li><a href="https://link.zhihu.com/?target=https%3A//keras.io/guides/keras_cv/generate_images_with_stable_diffusion/">https://keras.io/guides/keras_cv/generate_images_with_stable_diffusion/</a></li><li><a href="https://link.zhihu.com/?target=https%3A//stability.ai/blog/stablediffusion2-1-release7-dec-2022">https://stability.ai/blog/stablediffusion2-1-release7-dec-2022</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Stable Diffusion web UI</title>
      <link href="/posts/2683becb.html"/>
      <url>/posts/2683becb.html</url>
      
        <content type="html"><![CDATA[<h1 id="Stable-Diffusion-web-UI"><a href="#Stable-Diffusion-web-UI" class="headerlink" title="Stable Diffusion web UI"></a><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui#stable-diffusion-web-ui">Stable Diffusion web UI</a></h1><p>A browser interface based on Gradio library for Stable Diffusion.</p><p><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/blob/master/screenshot.png"><img src="https://github.com/AUTOMATIC1111/stable-diffusion-webui/raw/master/screenshot.png" alt=""></a></p><h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui#features">Features</a></h2><p><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Features">Detailed feature showcase with images</a>:</p><ul><li><p>Original txt2img and img2img modes</p></li><li><p>One click install and run script (but you still must install python and git)</p></li><li><p>Outpainting</p></li><li><p>Inpainting</p></li><li><p>Color Sketch</p></li><li><p>Prompt Matrix</p></li><li><p>Stable Diffusion Upscale</p></li><li><p>Attention, specify parts of text that the model should pay more attention to</p><ul><li>a man in a <code>((tuxedo))</code> - will pay more attention to tuxedo</li><li>a man in a <code>(tuxedo:1.21)</code> - alternative syntax</li><li>select text and press <code>Ctrl+Up</code> or <code>Ctrl+Down</code> (or <code>Command+Up</code> or <code>Command+Down</code> if you’re on a MacOS) to automatically adjust attention to selected text (code contributed by anonymous user)</li></ul></li><li><p>Loopback, run img2img processing multiple times</p></li><li><p>X/Y/Z plot, a way to draw a 3 dimensional plot of images with different parameters</p></li><li><p>Textual Inversion</p><ul><li>have as many embeddings as you want and use any names you like for them</li><li>use multiple embeddings with different numbers of vectors per token</li><li>works with half precision floating point numbers</li><li>train embeddings on 8GB (also reports of 6GB working)</li></ul></li><li><p>Extras tab with:</p><ul><li>GFPGAN, neural network that fixes faces</li><li>CodeFormer, face restoration tool as an alternative to GFPGAN</li><li>RealESRGAN, neural network upscaler</li><li>ESRGAN, neural network upscaler with a lot of third party models</li><li>SwinIR and Swin2SR (<a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/2092">see here</a>), neural network upscalers</li><li>LDSR, Latent diffusion super resolution upscaling</li></ul></li><li><p>Resizing aspect ratio options</p></li><li><p>Sampling method selection</p><ul><li>Adjust sampler eta values (noise multiplier)</li><li>More advanced noise setting options</li></ul></li><li><p>Interrupt processing at any time</p></li><li><p>4GB video card support (also reports of 2GB working)</p></li><li><p>Correct seeds for batches</p></li><li><p>Live prompt token length validation</p></li><li><p>Generation parameters</p><ul><li>parameters you used to generate images are saved with that image</li><li>in PNG chunks for PNG, in EXIF for JPEG</li><li>can drag the image to PNG info tab to restore generation parameters and automatically copy them into UI</li><li>can be disabled in settings</li><li>drag and drop an image/text-parameters to promptbox</li></ul></li><li><p>Read Generation Parameters Button, loads parameters in promptbox to UI</p></li><li><p>Settings page</p></li><li><p>Running arbitrary python code from UI (must run with <code>--allow-code</code> to enable)</p></li><li><p>Mouseover hints for most UI elements</p></li><li><p>Possible to change defaults/mix/max/step values for UI elements via text config</p></li><li><p>Tiling support, a checkbox to create images that can be tiled like textures</p></li><li><p>Progress bar and live image generation preview</p><ul><li>Can use a separate neural network to produce previews with almost none VRAM or compute requirement</li></ul></li><li><p>Negative prompt, an extra text field that allows you to list what you don’t want to see in generated image</p></li><li><p>Styles, a way to save part of prompt and easily apply them via dropdown later</p></li><li><p>Variations, a way to generate same image but with tiny differences</p></li><li><p>Seed resizing, a way to generate same image but at slightly different resolution</p></li><li><p>CLIP interrogator, a button that tries to guess prompt from an image</p></li><li><p>Prompt Editing, a way to change prompt mid-generation, say to start making a watermelon and switch to anime girl midway</p></li><li><p>Batch Processing, process a group of files using img2img</p></li><li><p>Img2img Alternative, reverse Euler method of cross attention control</p></li><li><p>Highres Fix, a convenience option to produce high resolution pictures in one click without usual distortions</p></li><li><p>Reloading checkpoints on the fly</p></li><li><p>Checkpoint Merger, a tab that allows you to merge up to 3 checkpoints into one</p></li><li><p><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Custom-Scripts">Custom scripts</a> with many extensions from community</p></li><li><p><a href="https://energy-based-model.github.io/Compositional-Visual-Generation-with-Composable-Diffusion-Models/">Composable-Diffusion</a>, a way to use multiple prompts at once</p><ul><li>separate prompts using uppercase <code>AND</code></li><li>also supports weights for prompts: <code>a cat :1.2 AND a dog AND a penguin :2.2</code></li></ul></li><li><p>No token limit for prompts (original stable diffusion lets you use up to 75 tokens)</p></li><li><p>DeepDanbooru integration, creates danbooru style tags for anime prompts</p></li><li><p><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Xformers">xformers</a>, major speed increase for select cards: (add <code>--xformers</code> to commandline args)</p></li><li><p>via extension: <a href="https://github.com/yfszzx/stable-diffusion-webui-images-browser">History tab</a>: view, direct and delete images conveniently within the UI</p></li><li><p>Generate forever option</p></li><li><p>Training tab</p><ul><li>hypernetworks and embeddings options</li><li>Preprocessing images: cropping, mirroring, autotagging using BLIP or deepdanbooru (for anime)</li></ul></li><li><p>Clip skip</p></li><li><p>Hypernetworks</p></li><li><p>Loras (same as Hypernetworks but more pretty)</p></li><li><p>A separate UI where you can choose, with preview, which embeddings, hypernetworks or Loras to add to your prompt</p></li><li><p>Can select to load a different VAE from settings screen</p></li><li><p>Estimated completion time in progress bar</p></li><li><p>API</p></li><li><p>Support for dedicated <a href="https://github.com/runwayml/stable-diffusion#inpainting-with-stable-diffusion">inpainting model</a> by RunwayML</p></li><li><p>via extension: <a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui-aesthetic-gradients">Aesthetic Gradients</a>, a way to generate images with a specific aesthetic by using clip images embeds (implementation of <a href="https://github.com/vicgalle/stable-diffusion-aesthetic-gradients">https://github.com/vicgalle/stable-diffusion-aesthetic-gradients</a>)</p></li><li><p><a href="https://github.com/Stability-AI/stablediffusion">Stable Diffusion 2.0</a> support - see <a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Features#stable-diffusion-20">wiki</a> for instructions</p></li><li><p><a href="https://arxiv.org/abs/2211.06679">Alt-Diffusion</a> support - see <a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Features#alt-diffusion">wiki</a> for instructions</p></li><li><p>Now without any bad letters!</p></li><li><p>Load checkpoints in safetensors format</p></li><li><p>Eased resolution restriction: generated image’s dimension must be a multiple of 8 rather than 64</p></li><li><p>Now with a license!</p></li><li><p>Reorder elements in the UI from settings screen</p></li></ul><h2 id="Installation-and-Running"><a href="#Installation-and-Running" class="headerlink" title="Installation and Running"></a><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui#installation-and-running">Installation and Running</a></h2><p>Make sure the required <a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Dependencies">dependencies</a> are met and follow the instructions available for:</p><ul><li><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Install-and-Run-on-NVidia-GPUs">NVidia</a> (recommended)</li><li><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Install-and-Run-on-AMD-GPUs">AMD</a> GPUs.</li><li><a href="https://github.com/openvinotoolkit/stable-diffusion-webui/wiki/Installation-on-Intel-Silicon">Intel CPUs, Intel GPUs (both integrated and discrete)</a> (external wiki page)</li></ul><p>Alternatively, use online services (like Google Colab):</p><ul><li><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Online-Services">List of Online Services</a></li></ul><h3 id="Installation-on-Windows-10-11-with-NVidia-GPUs-using-release-package"><a href="#Installation-on-Windows-10-11-with-NVidia-GPUs-using-release-package" class="headerlink" title="Installation on Windows 10/11 with NVidia-GPUs using release package"></a><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui#installation-on-windows-1011-with-nvidia-gpus-using-release-package">Installation on Windows 10/11 with NVidia-GPUs using release package</a></h3><ol><li>Download <code>sd.webui.zip</code> from <a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/releases/tag/v1.0.0-pre">v1.0.0-pre</a> and extract it’s contents.</li><li>Run <code>update.bat</code>.</li><li>Run <code>run.bat</code>.</li></ol><blockquote><p>For more details see <a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Install-and-Run-on-NVidia-GPUs">Install-and-Run-on-NVidia-GPUs</a></p></blockquote><h3 id="Automatic-Installation-on-Windows"><a href="#Automatic-Installation-on-Windows" class="headerlink" title="Automatic Installation on Windows"></a><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui#automatic-installation-on-windows">Automatic Installation on Windows</a></h3><ol><li>Install <a href="https://www.python.org/downloads/release/python-3106/">Python 3.10.6</a> (Newer version of Python does not support torch), checking “Add Python to PATH”.</li><li>Install <a href="https://git-scm.com/download/win">git</a>.</li><li>Download the stable-diffusion-webui repository, for example by running <code>git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git</code>.</li><li>Run <code>webui-user.bat</code> from Windows Explorer as normal, non-administrator, user.</li></ol><h3 id="Automatic-Installation-on-Linux"><a href="#Automatic-Installation-on-Linux" class="headerlink" title="Automatic Installation on Linux"></a><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui#automatic-installation-on-linux">Automatic Installation on Linux</a></h3><ol><li>Install the dependencies:</li></ol><!----><pre><code># Debian-based:sudo apt install wget git python3 python3-venv libgl1 libglib2.0-0# Red Hat-based:sudo dnf install wget git python3# Arch-based:sudo pacman -S wget git python3</code></pre><ol><li>Navigate to the directory you would like the webui to be installed and execute the following command:</li></ol><!----><pre><code>wget -q https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/webui.sh</code></pre><ol><li>Run <code>webui.sh</code>.</li><li>Check <code>webui-user.sh</code> for options.</li></ol><h3 id="Installation-on-Apple-Silicon"><a href="#Installation-on-Apple-Silicon" class="headerlink" title="Installation on Apple Silicon"></a><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui#installation-on-apple-silicon">Installation on Apple Silicon</a></h3><p>Find the instructions <a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Installation-on-Apple-Silicon">here</a>.</p><h2 id="Contributing"><a href="#Contributing" class="headerlink" title="Contributing"></a><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui#contributing">Contributing</a></h2><p>Here’s how to add code to this repo: <a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Contributing">Contributing</a></p><h2 id="Documentation"><a href="#Documentation" class="headerlink" title="Documentation"></a><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui#documentation">Documentation</a></h2><p>The documentation was moved from this README over to the project’s <a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki">wiki</a>.</p><p>For the purposes of getting Google and other search engines to crawl the wiki, here’s a link to the (not for humans) <a href="https://github-wiki-see.page/m/AUTOMATIC1111/stable-diffusion-webui/wiki">crawlable wiki</a>.</p><h2 id="Credits"><a href="#Credits" class="headerlink" title="Credits"></a><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui#credits">Credits</a></h2><p>Licenses for borrowed code can be found in <code>Settings -&gt; Licenses</code> screen, and also in <code>html/licenses.html</code> file.</p><ul><li>Stable Diffusion - <a href="https://github.com/CompVis/stable-diffusion">https://github.com/CompVis/stable-diffusion</a>, <a href="https://github.com/CompVis/taming-transformers">https://github.com/CompVis/taming-transformers</a></li><li>k-diffusion - <a href="https://github.com/crowsonkb/k-diffusion.git">https://github.com/crowsonkb/k-diffusion.git</a></li><li>GFPGAN - <a href="https://github.com/TencentARC/GFPGAN.git">https://github.com/TencentARC/GFPGAN.git</a></li><li>CodeFormer - <a href="https://github.com/sczhou/CodeFormer">https://github.com/sczhou/CodeFormer</a></li><li>ESRGAN - <a href="https://github.com/xinntao/ESRGAN">https://github.com/xinntao/ESRGAN</a></li><li>SwinIR - <a href="https://github.com/JingyunLiang/SwinIR">https://github.com/JingyunLiang/SwinIR</a></li><li>Swin2SR - <a href="https://github.com/mv-lab/swin2sr">https://github.com/mv-lab/swin2sr</a></li><li>LDSR - <a href="https://github.com/Hafiidz/latent-diffusion">https://github.com/Hafiidz/latent-diffusion</a></li><li>MiDaS - <a href="https://github.com/isl-org/MiDaS">https://github.com/isl-org/MiDaS</a></li><li>Ideas for optimizations - <a href="https://github.com/basujindal/stable-diffusion">https://github.com/basujindal/stable-diffusion</a></li><li>Cross Attention layer optimization - Doggettx - <a href="https://github.com/Doggettx/stable-diffusion">https://github.com/Doggettx/stable-diffusion</a>, original idea for prompt editing.</li><li>Cross Attention layer optimization - InvokeAI, lstein - <a href="https://github.com/invoke-ai/InvokeAI">https://github.com/invoke-ai/InvokeAI</a> (originally <a href="http://github.com/lstein/stable-diffusion">http://github.com/lstein/stable-diffusion</a>)</li><li>Sub-quadratic Cross Attention layer optimization - Alex Birch (<a href="https://github.com/Birch-san/diffusers/pull/1">Birch-san/diffusers#1</a>), Amin Rezaei (<a href="https://github.com/AminRezaei0x443/memory-efficient-attention">https://github.com/AminRezaei0x443/memory-efficient-attention</a>)</li><li>Textual Inversion - Rinon Gal - <a href="https://github.com/rinongal/textual_inversion">https://github.com/rinongal/textual_inversion</a> (we’re not using his code, but we are using his ideas).</li><li>Idea for SD upscale - <a href="https://github.com/jquesnelle/txt2imghd">https://github.com/jquesnelle/txt2imghd</a></li><li>Noise generation for outpainting mk2 - <a href="https://github.com/parlance-zz/g-diffuser-bot">https://github.com/parlance-zz/g-diffuser-bot</a></li><li>CLIP interrogator idea and borrowing some code - <a href="https://github.com/pharmapsychotic/clip-interrogator">https://github.com/pharmapsychotic/clip-interrogator</a></li><li>Idea for Composable Diffusion - <a href="https://github.com/energy-based-model/Compositional-Visual-Generation-with-Composable-Diffusion-Models-PyTorch">https://github.com/energy-based-model/Compositional-Visual-Generation-with-Composable-Diffusion-Models-PyTorch</a></li><li>xformers - <a href="https://github.com/facebookresearch/xformers">https://github.com/facebookresearch/xformers</a></li><li>DeepDanbooru - interrogator for anime diffusers <a href="https://github.com/KichangKim/DeepDanbooru">https://github.com/KichangKim/DeepDanbooru</a></li><li>Sampling in float32 precision from a float16 UNet - marunine for the idea, Birch-san for the example Diffusers implementation (<a href="https://github.com/Birch-san/diffusers-play/tree/92feee6">https://github.com/Birch-san/diffusers-play/tree/92feee6</a>)</li><li>Instruct pix2pix - Tim Brooks (star), Aleksander Holynski (star), Alexei A. Efros (no star) - <a href="https://github.com/timothybrooks/instruct-pix2pix">https://github.com/timothybrooks/instruct-pix2pix</a></li><li>Security advice - RyotaK</li><li>UniPC sampler - Wenliang Zhao - <a href="https://github.com/wl-zhao/UniPC">https://github.com/wl-zhao/UniPC</a></li><li>TAESD - Ollin Boer Bohan - <a href="https://github.com/madebyollin/taesd">https://github.com/madebyollin/taesd</a></li><li>LyCORIS - KohakuBlueleaf</li><li>Restart sampling - lambertae - <a href="https://github.com/Newbeeer/diffusion_restart_sampling">https://github.com/Newbeeer/diffusion_restart_sampling</a></li><li>Initial Gradio script - posted on 4chan by an Anonymous user. Thank you Anonymous user.</li><li>(You)</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Stable Diffusion及其部署</title>
      <link href="/posts/afa1690b.html"/>
      <url>/posts/afa1690b.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://nenly.notion.site/c5805e7ae26b4683a277c5586ea05904">https://nenly.notion.site/c5805e7ae26b4683a277c5586ea05904</a></p><h1 id="关于Stable-Diffusion"><a href="#关于Stable-Diffusion" class="headerlink" title="关于Stable Diffusion"></a>关于Stable Diffusion</h1><p><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui">https://github.com/AUTOMATIC1111/stable-diffusion-webui</a><br><a href="https://github.com/CompVis/stable-diffusion">https://github.com/CompVis/stable-diffusion</a></p><p><img src="./基于扩散模型的AI生成图像（AI绘画）/31212.jpg" alt="31212.jpg"></p><p>**Stable Diffusion（简称SD）**是2022年发布的一个深度学习文本到图像生成模型，由慕尼黑大学的CompVis研究团体首先提出，并与初创公司Stability AI、Runway合作开发，同时得到了EleutherAI和LAION的支持。</p><p>它可以实现的功能有很多，可以根据文本的描述生成指定内容的图片（图生图），也可以用于已有图片内容的转绘（图生图），还可以用作图像的局部重绘、外补扩充、高清修复，甚至是视频的“动画化”生成。</p><p>SD的源代码是<strong>开源</strong>发布在网上的，这意味着任何人都可以<strong>免费、不限量</strong>地使用它进行AI绘画生成操作。有开发者使用它的源代码制作了易于用户使用的图形化界面（GUI），于是便有了今天我们大多数人手里可以使用的<strong>Stable Diffusion WebUI（SD Web UI）</strong>。</p><!-- notionvc: f26ff929-b3d7-4f1b-9da6-e455b85d20ae --><p>\<aside> \<img src="/icons/gear\_gray.svg" alt="/icons/gear\_gray.svg" width="40px" /> <strong>安装Stable Diffusion的整体说明</strong></p><p>Stable Diffusion是一款<strong>开源、免费</strong>的应用程序，因为其生态开放且发展迅速，所以不同时期的安装、配置方式可能都会有所变化。</p><p>在这个文档里，我会实时更新当前<strong>可行的Stable Diffusion安装使用方案</strong>，并同步对应的资源链接供使用。</p><p>安装并应用软件的过程中<strong>不涉及任何付费项目</strong>，我也不建议你通过任何途径付费购买软件和模型，请知悉。</p><p>如果安装的过程中存在问题，请查阅 <a href="https://www.notion.so/4de501778c024458b1cf92bbc576c522?pvs=21">常见问题速查</a></p><p>\&lt;/aside&gt;</p><!-- notionvc: ecf31da9-fb9c-4c76-a62a-a57d9521666b --><p>目前，Stable Diffusion可以在一台搭载有民用级显卡的电脑上运行。它的配置要求不高但具有一定针对性，最主要的要求是显卡性能与显存大小。</p><!-- notionvc: b204b461-832d-4d04-9101-898f5af0dc41 --><p><img src="./基于扩散模型的AI生成图像（AI绘画）/12.jpg" alt="12.jpg"><br><del>小tips：如何查看自己电脑显存大小：<br>在Windows【开始】点鼠标右键，选择【<a href="https://link.zhihu.com/?target=https%3A//so.csdn.net/so/search%3Fq%3D%25E4%25BB%25BB%25E5%258A%25A1%25E7%25AE%25A1%25E7%2590%2586%25E5%2599%25A8%26spm%3D1001.2101.3001.7020">任务管理器</a>（T）】，在【性能】一栏选择【GPU】查看“专用GPU内存”</del></p><h1 id="安装Stable-Diffusion"><a href="#安装Stable-Diffusion" class="headerlink" title="安装Stable Diffusion"></a><strong>安装Stable Diffusion</strong></h1><p>\<aside> \<img src="/icons/new-alert\_gray.svg" alt="/icons/new-alert\_gray.svg" width="40px" /> <strong>请先阅读以下内容，然后选择适合你的安装方式：</strong></p><p>如果你使用的是<strong>Windows系统</strong>：</p><ul><li>有一定的动手能力与计算机软件基础，并追求更高的自定义程度，可以尝试着<strong>自主安装部署</strong>；</li><li>接触电脑不多，计算机软件基础薄弱，并想以更轻松的方式开启AI绘画学习之路，可以考虑<strong>使用一些开发者为你准备的“整合包”</strong>。</li></ul><p>如果你使用的是<strong>Mac系统</strong>：</p><ul><li>目前，MAC系统仅能通过<strong>自主安装部署</strong>的方式应用Stable Diffusion。</li><li>一些Mac开发者制作了更适合Mac生态的SD应用（如Diffusion Bee等），但应用逻辑和功能框架与WebUI有较大不同，故不在本知识库的讨论范畴内。 \&lt;/aside&gt;</li></ul><!-- notionvc: 3dda8bd6-1cba-49c9-a331-bd865bf7800a --><h2 id="自主安装部署AI绘画"><a href="#自主安装部署AI绘画" class="headerlink" title="自主安装部署AI绘画"></a>自主安装部署AI绘画</h2><p>目前，市面上基于Stable Diffusion制作的实用程序中，最受欢迎的是一个由一位越南开发者<a href="https://github.com/AUTOMATIC1111">Automatic1111</a>制作的**<a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui">Stable Diffusion WebUI（SD Web UI）</a>**，提供了非常可视化的参数调节与对海量扩展应用的支持。<br><del>自己看英文文献去</del><br><del>胡志明大草</del><br><del>越南人先搞出来的</del></p><p><del>操作简单人性化，适合新手，小白，电脑知识不够首选该方案</del></p><p>中文教程：<a href="https://nenly.notion.site/c5805e7ae26b4683a277c5586ea05904">https://nenly.notion.site/c5805e7ae26b4683a277c5586ea05904</a></p><p>1，关杀毒<br>2，下载安装Git</p><p><a href="https://link.zhihu.com/?target=https%3A//git-scm.com/">Git​git-scm.com/<img src="https://pic1.zhimg.com/v2-34917b969193928c586023f0b971ae38_180x120.jpg" alt=""></a></p><p><img src="https://pic4.zhimg.com/80/v2-2f5c35da8c62dc681eaecceaf6c97537_1440w.webp" alt=""></p><p><img src="https://pic3.zhimg.com/80/v2-635fa7868c548d2b1fbda172121cfdda_1440w.webp" alt=""></p><p>Git是一个免费的、开源的分布式版本控制系统点击Git Bash Here可以打开Git终端</p><p>检查自己电脑有没有安装Git：【Win+R】唤出【运行】，输入“cmd”，回车，在命令行里输入</p><p>git —version</p><p><img src="https://pic1.zhimg.com/80/v2-c698bf51d4dffc626a3a5332006c9908_1440w.webp" alt=""></p><p>3.下载安装Python</p><p><a href="https://link.zhihu.com/?target=https%3A//www.python.org/">Welcome to Python.org​www.python.org/</a></p><p><img src="https://pic4.zhimg.com/80/v2-acfaf8ad119538f2d540cf1668c7d5f3_1440w.webp" alt=""></p><p><img src="https://pic3.zhimg.com/80/v2-4dede3e1bd496be27ae95f51204ebca6_1440w.webp" alt=""></p><p>最好是使用这个版本</p><p><img src="https://pic3.zhimg.com/80/v2-4f544567ec5dca9a1d8b2f7a39a70a6a_1440w.webp" alt=""></p><p><img src="https://pic4.zhimg.com/80/v2-58f58469f2350c53d32ba28076549423_1440w.webp" alt=""></p><p>注意要勾选此选项，将python添加到系统环境变量PATH中</p><p><img src="https://pic3.zhimg.com/80/v2-69bc637c05a2d2077e5f335c2387b7ba_1440w.webp" alt=""></p><p>检查自己电脑有没有安装成功：【Win+R】唤出【运行】，输入“cmd”，回车，在命令行里输入</p><p>python —version</p><p><img src="https://pic1.zhimg.com/80/v2-1f932b24841f0d54a01b673f213ee114_1440w.webp" alt=""></p><p>三、下载stable-diffusion-webui仓库</p><p>在空间比较大的盘里新建一个文件夹，如下图名为【AI】的文件夹，然后在这个文件夹里点击鼠标右键，选择【Git Bash Here】打开Git终端</p><p><img src="https://pic1.zhimg.com/80/v2-5ef14003fc6adf69e0d840772cc764b0_1440w.webp" alt=""></p><p><img src="https://pic4.zhimg.com/80/v2-625a5c10163f1f53a5cda8ca90d4b5ff_1440w.webp" alt=""></p><p>通过Git命令克隆下载代码（之前代码打错了，导致很多人克隆完成后文件不对，这次对代码进行了修正）</p><p>git clone <a href="https://link.zhihu.com/?target=https%3A//github.com/AUTOMATIC1111/stable-diffusion-webui.git">https://github.com/AUTOMATIC1111/stable-diffusion-webui.git</a></p><p><img src="https://pic4.zhimg.com/80/v2-61fd34127550191662719b8d657bed37_1440w.webp" alt=""></p><p>出现问题：OpenSSL SSL_read: Connection was reset, errno 10054</p><p>解决方法：</p><p>关闭git的https证书验证</p><p>git config —global http.sslVerify false</p><p><img src="https://pic4.zhimg.com/80/v2-1dc3883a41882f113e8d09063c665bc7_1440w.webp" alt=""></p><p>之后再次clone代码，成功！</p><p>同时可以看到文件夹里也下载好了</p><p><img src="https://pic2.zhimg.com/80/v2-d6f1d56a3346f42ed9e2548b9d8b7949_1440w.webp" alt=""></p><p>四、运行webui-user.bat</p><p>在上面下载好的文件夹里找到它，双击运行</p><p><img src="https://pic3.zhimg.com/80/v2-b162ebcb4d9bc500d98307b01adb7e5e_1440w.webp" alt=""></p><p><img src="https://pic3.zhimg.com/80/v2-85bf9fb887c01aa3303a3bb049669476_1440w.webp" alt=""></p><p>下载中</p><p><img src="https://pic4.zhimg.com/80/v2-77ca9b187caea5a11f7f2ac4eda9daf3_1440w.webp" alt=""></p><p>出现新问题：提示pip更新？</p><p>解决方法：</p><p>升级pip命令，可以重新打开一个命令行，运行一次它提示的绿色命令（因为文件夹名称可能不同，所以这条命令因人而异）H:\AI\stable-diffusion-webui\venv\Scripts\python.exe -m pip install —upgrade pip</p><p><img src="https://pic2.zhimg.com/80/v2-2e98f2e60aeb9675f0c54d97a505afcd_1440w.webp" alt=""></p><p>之后再次重新打开webui-user.bat</p><p>因为在安装过程中没有使用魔法上网，所以在下载过程中出现了gfpgan、clip、open clip没有安装成功的提示，还是国内的网络环境的原因，解决方法：</p><p>编辑stable-diffusion-webui目录里的launch.py文件</p><p><img src="https://pic3.zhimg.com/80/v2-6eeed47df6c03bef6485ce41e58fc8ee_1440w.webp" alt=""></p><p>用记事本打开</p><p>比如卡在了gfpgan，就找到run_pip(f”install {gfpgan_package}“, “gfpgan”)所在行，如下图launch.py文件的第263行，把它改为run_pip(f”install -i <a href="https://link.zhihu.com/?target=https%3A//pypi.douban.com/simple/">https://pypi.douban.com/simple/</a> {gfpgan_package}”, “gfpgan”)，修改后保存关闭，走国内的镜像源（ -i <a href="https://link.zhihu.com/?target=https%3A//pypi.douban.com/simple/%25EF%25BC%2589%25EF%25BC%258C%25E6%258F%2590%25E9%25AB%2598%25E4%25B8%258B%25E8%25BD%25BD%25E9%2580%259F%25E5%25BA%25A6">https://pypi.douban.com/simple/），提高下载速度</a></p><p>run_pip(f”install -i <a href="https://link.zhihu.com/?target=https%3A//pypi.douban.com/simple/">https://pypi.douban.com/simple/</a> {gfpgan_package}”, “gfpgan”)</p><p>之后保存launch.py文件，再次打开webui-user.bat</p><p>（每次下载出现问题，就修改launch.py文件里的对应内容，比如clip出问题就把launch.py文件里的run_pip(f”install {clip_package}“, “clip”)改为run_pip(f”install -i <a href="https://link.zhihu.com/?target=https%3A//pypi.douban.com/simple/">https://pypi.douban.com/simple/</a> {clip_package}”, “clip”)），gfpgan、clip、open clip都是一样的操作，如此反复（<a href="https://link.zhihu.com/?target=http%3A//xn--launch-2g0js76l.py/">修改launch.py</a>、关闭命令行、重新打开webui-user.bat）</p><p>如果还是卡住不动的话，在launch.py文件里找到prepare_environment()这部分，在对应的<a href="https://link.zhihu.com/?target=https%3A//github.com/">https://github.com/</a>前面加上<a href="https://link.zhihu.com/?target=https%3A//github.moeyy.xyz/">https://github.moeyy.xyz/</a></p><p>通过代理的方式加速git</p><p><img src="https://pic4.zhimg.com/80/v2-47a7c39d72e698568a880f9058766fab_1440w.webp" alt=""></p><hr><p>2023/6/16 添加（感谢知友的补充说明）</p><p><strong>如果launch.py没有找到或者文件内容不一样</strong></p><p><strong>在launch_utils.py下修改完正常安装，在263，266，269三行</strong></p><hr><p>经过多次修改、关闭、重启，最后终于走到了Web UI这里</p><p><img src="https://pic1.zhimg.com/80/v2-8edde1affc6f1d2611d3440fa6a97a48_1440w.webp" alt=""></p><p>一切顺利的话，接下来就要下载一个3.97G的大东西，中间如果卡住，还是关闭命令行、重新打开webui-user.bat</p><p><img src="https://pic3.zhimg.com/80/v2-6733a7ecc0f8949a9e634e40e332fe56_1440w.webp" alt=""></p><p>经过一段时间的等待，进度条终于填满了，也出现了我们最希望看到的内容</p><p>表示本地电脑启动了一个服务，端口是127.0.0.1:7860</p><p>把<a href="https://link.zhihu.com/?target=http%3A//127.0.0.1%3A7860">http://127.0.0.1:7860</a>复制到浏览器中打开，进入Stable Diffusion界面就好了</p><p><del>操作简单人性化，适合新手，小白，电脑知识不够首选该方案</del><br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>；<br>1<br>1<br>1<br>1<br>1<br>1<br>1<br>1<br>1<br>1<br>1<br>1<br>1<br>1</p><p>实在不会的话</p><h2 id="使用整合包"><a href="#使用整合包" class="headerlink" title="使用整合包"></a>使用整合包</h2><p>**“整合包”**一般指开发者对Automatic1111制作的Stable Diffusion WebUI进行打包并使其程序化的一种方式。使用整合包，一般可以省去一些自主配置环境依赖、下载必要模型的功夫。</p><p><a href="https://www.bilibili.com/video/BV1iM4y1y7oA/">https://www.bilibili.com/video/BV1iM4y1y7oA/</a></p><hr><p><strong>幻灵AI绘画盒子（Windows）：</strong></p><p><a href="https://www.bilibili.com/video/BV1Vc411T7Nw/">https://www.bilibili.com/video/BV1Vc411T7Nw/</a></p><hr><p><strong>Nvidia显卡整合包（Windows）：</strong></p><p><a href="https://www.bilibili.com/video/BV1bT411p7Gt/">https://www.bilibili.com/video/BV1bT411p7Gt/</a></p><p><strong>AMD\&amp;Intel显卡整合包（Windows）：</strong></p><p><a href="https://www.bilibili.com/video/BV1hW4y1R7Nw/">https://www.bilibili.com/video/BV1hW4y1R7Nw/</a></p><!-- notionvc: 6cea88d8-7b62-47f8-bef7-81aee159b38a --><!-- notionvc: 2cf0fb63-5b1f-4bd3-bb18-722e38d9d2e4 --><p>下载解压运行即可</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>吐槽</title>
      <link href="/posts/62f4a42b.html"/>
      <url>/posts/62f4a42b.html</url>
      
        <content type="html"><![CDATA[<p>一个微信把周末在珠江边上的我跨半个广州捻回广大，倒</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>四叉树风格渲染处理备忘录</title>
      <link href="/posts/ce892fda.html"/>
      <url>/posts/ce892fda.html</url>
      
        <content type="html"><![CDATA[<p><img src="./个人电脑四叉树使用备忘录/31221.jpg" alt="31221.jpg"></p><p>将视频test.mp4转化为帧存在FF文件夹里<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ffmpeg</span> -i E:\TESTRANGE\<span class="number">4</span>tree\test.mp4 E:\TESTRANGE\<span class="number">4</span>tree\FF\input%d.jpg</span><br></pre></td></tr></table></figure><br><img src="./个人电脑四叉树使用备忘录/12132.jpg" alt="12132.jpg"></p><h2 id="转换为矩阵"><a href="#转换为矩阵" class="headerlink" title="转换为矩阵"></a>转换为矩阵</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">quadim</span> E:\TESTRANGE\<span class="number">4</span>tree\FF --ratio <span class="number">20</span>:<span class="number">18</span> --stroke-width <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="转换为园阵"><a href="#转换为园阵" class="headerlink" title="转换为园阵"></a>转换为园阵</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">quadim</span> E:\TESTRANGE\<span class="number">4</span>tree\FF --ratio <span class="number">24</span>:<span class="number">25</span> --depth <span class="number">6</span> --shape circle --bg-color transparent</span><br></pre></td></tr></table></figure><p>转换后得到该文件夹以替换（非合并）文件夹FF<br><img src="./个人电脑四叉树使用备忘录/1313.jpg" alt="1313.jpg"></p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i E:\TESTRANGE\4tree\FF\<span class="keyword">input</span><span class="title function_">%d</span>.png -c:v libx264 -pix_fmt yuv420p E:\TESTRANGE\4tree\<span class="keyword">output</span>.mp4</span><br></pre></td></tr></table></figure><p><img src="./个人电脑四叉树使用备忘录/DQDW.jpg" alt="DQDW.jpg"></p><h2 id="成果展示"><a href="#成果展示" class="headerlink" title="成果展示"></a>成果展示</h2><iframe src="//player.bilibili.com/player.html?aid=277429502&bvid=BV1Jw411F752&cid=1306164292&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><p>GUI以后再搞，技术力不够（晕</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Quadim四叉树风格化图像/视频渲染</title>
      <link href="/posts/39fce9a0.html"/>
      <url>/posts/39fce9a0.html</url>
      
        <content type="html"><![CDATA[<h1 id="Quadim"><a href="#Quadim" class="headerlink" title="Quadim"></a>Quadim</h1><p><a href="https://crates.io/crates/quadim"><img src="https://img.shields.io/crates/v/quadim" alt=""></a><br><a href="https://crates.io/crates/quadim"><img src="https://img.shields.io/crates/d/quadim" alt=""></a><br><a href="#"><img src="https://img.shields.io/crates/l/quadim" alt=""></a><br><a href="https://docs.rs/quadim"><img src="https://img.shields.io/docsrs/quadim" alt=""></a><br><a href="https://github.com/eternal-io/quadim"><img src="https://img.shields.io/github/stars/eternal-io/quadim?style=social" alt=""></a></p><p>迄今为止最快的图像四叉树风格化实现，拥有上每秒上百帧的处理速度并且能够避免丑陋的长方形</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li>安装 <a href="https://www.rust-lang.org/zh-CN/tools/install">rust</a></li><li>打开命令行，运行：<strong><code>cargo install quadim -F build-bin</code></strong>，听着散热器的嗡嗡声，几分钟就好了。</li></ol><h2 id="使用前的准备"><a href="#使用前的准备" class="headerlink" title="使用前的准备"></a>使用前的准备</h2><h3 id="1-建议建立用于存放中间过程的图片的文件夹"><a href="#1-建议建立用于存放中间过程的图片的文件夹" class="headerlink" title="1.建议建立用于存放中间过程的图片的文件夹"></a>1.建议建立用于存放中间过程的图片的文件夹</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> frames <span class="comment">#用于存放拆帧后的图片</span></span><br><span class="line"><span class="built_in">mkdir</span> output <span class="comment">#用于存放quadim处理后的图片</span></span><br></pre></td></tr></table></figure><h3 id="2-如果你要对视频进行处理，请先用FFmpeg对视频进行拆帧处理"><a href="#2-如果你要对视频进行处理，请先用FFmpeg对视频进行拆帧处理" class="headerlink" title="2.如果你要对视频进行处理，请先用FFmpeg对视频进行拆帧处理"></a>2.如果你要对视频进行处理，请先用<code>FFmpeg</code>对视频进行拆帧处理</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ffmpeg</span> -i .\&lt;输入文件(请自行修改)&gt;.mp4 -q <span class="number">2</span> .\frames\%<span class="number">05</span>d.jpg</span><br></pre></td></tr></table></figure><h3 id="3-举例-假如我对frames文件夹进行了处理"><a href="#3-举例-假如我对frames文件夹进行了处理" class="headerlink" title="3.(举例)假如我对frames文件夹进行了处理"></a>3.(举例)假如我对<code>frames</code>文件夹进行了处理</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 相关参数设置请勿照抄, 请参考下面的参数的用法和意义</span></span><br><span class="line"><span class="attribute">quadim</span> .\frames\ -o .\output --ratio <span class="number">13</span>:<span class="number">6</span> --depth <span class="number">10</span> --stroke-width <span class="number">1</span> --fps <span class="number">24</span> --buffer <span class="number">4492800</span></span><br><span class="line"><span class="comment"># 相关参数设置请勿照抄, 请参考下面的参数的用法和意义</span></span><br></pre></td></tr></table></figure><h3 id="4-最后用FFmpeg合并处理后的图片-请保留原始输入视频文件"><a href="#4-最后用FFmpeg合并处理后的图片-请保留原始输入视频文件" class="headerlink" title="4.最后用FFmpeg合并处理后的图片(请保留原始输入视频文件)"></a>4.最后用<code>FFmpeg</code>合并处理后的图片(请保留原始输入视频文件)</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ffmpeg</span> -framerate &lt;帧数与原文件相同&gt; -i .\output\%<span class="number">04</span>d.png -i .\&lt;输入文件(请自行修改)&gt;.mp4 -map <span class="number">0</span>:v:<span class="number">0</span> -map <span class="number">1</span>:a:<span class="number">0</span> -c:v h264 -c:a copy -crf <span class="number">20</span> .\output.mp4</span><br></pre></td></tr></table></figure><h2 id="参数的用法和意义"><a href="#参数的用法和意义" class="headerlink" title="参数的用法和意义"></a>参数的用法和意义</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">使用方法: quadim<span class="selector-class">.exe</span> <span class="selector-attr">[参数]</span> &lt;输入文件路径&gt;</span><br><span class="line"></span><br><span class="line">输入文件路径:</span><br><span class="line">  &lt;单个图片或目录&gt;  某个图片文件, 或者某个文件夹里的所有图片文件</span><br><span class="line"></span><br><span class="line">参数:</span><br><span class="line">  -o, <span class="attr">--output</span> &lt;输出路径&gt;             没填这个选项就会自动创建基于时间命名的输出文件夹，有填就是你指定的文件名或目录</span><br><span class="line">  -r, <span class="attr">--ratio</span> &lt;分割比例&gt;              指定按什么比例将图像切分成子块 <span class="selector-attr">[默认值: 1:1]</span> (建议填输入源的分辨率比例, 如<span class="number">16</span>:<span class="number">9</span>等)</span><br><span class="line">  -d, <span class="attr">--depth</span> &lt;分割深度&gt;              四叉树的最大深度 <span class="selector-attr">[默认值: 8]</span></span><br><span class="line">  -Y, <span class="attr">--thres-ay</span> &lt;处理阈值&gt;           对 Alpha 和 Luma 通道的阈值处理 <span class="selector-attr">[默认值: 20]</span></span><br><span class="line">  -C, <span class="attr">--thres-cbcr</span> &lt;处理阈值&gt;         对 Cb 和 Cr 通道进行阈值处理, 注意, 测试按顺序进行 <span class="selector-attr">[默认值: 2]</span></span><br><span class="line">      <span class="attr">--merge</span> &lt;合并算法&gt;              合并测试算法 <span class="selector-attr">[默认值: st-dev]</span> <span class="selector-attr">[可选值: range, st-dev]</span></span><br><span class="line">  -s, <span class="attr">--shape</span> &lt;节点形状&gt;              四叉树上每个节点的形状 <span class="selector-attr">[默认值: rect]</span> <span class="selector-attr">[可选值: rect, circle, cross, yr-add, yr-mul]</span></span><br><span class="line">  -B, <span class="attr">--bg-color</span> &lt;背景颜色&gt;           填充的背景颜色(如果需要) <span class="selector-attr">[默认值: 白色]</span></span><br><span class="line">  -S, <span class="attr">--stroke-color</span> &lt;分割线颜色&gt;     分割线的颜色 <span class="selector-attr">[默认值: 黑色]</span></span><br><span class="line">  -W, <span class="attr">--stroke-width</span> &lt;分割线粗细&gt;     分割线粗细 <span class="selector-attr">[默认值: 0]</span></span><br><span class="line">      <span class="attr">--fps</span> &lt;变化速率&gt;                笔刷的变化速率 <span class="selector-attr">[默认值: 30]</span> (建议填写输入源的帧率)</span><br><span class="line">  -P, <span class="attr">--parallel</span> &lt;线程数量&gt;           要使用的线程数, 默认为 CPU 线程数 (可以不用填)</span><br><span class="line">      <span class="attr">--buffer</span> &lt;缓冲大小&gt;             缓冲区大小, 如输入源分辨率为 <span class="number">1920</span>x1080, 则应填数值为 <span class="number">1920</span>x1080=<span class="number">2073600</span>, 以此类推 (建议填写)</span><br><span class="line">      <span class="attr">--errors</span> &lt;最大错误数&gt;           最大错误数, 当出现错误次数达到最大错误数时, 程序会自动结束 <span class="selector-attr">[默认值: 5]</span></span><br><span class="line">  -h, <span class="attr">--help</span>                         显示帮助信息 (使用<span class="string">&#x27;--help&#x27;</span>选项能查看更多)</span><br><span class="line">  -V, <span class="attr">--version</span>                      显示当前版本号</span><br></pre></td></tr></table></figure><h2 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">quadim</span> E:\TESTRANGE\pic\<span class="number">121</span>\out --ratio <span class="number">20</span>:<span class="number">18</span> --stroke-width <span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="../images/out-A11021-1103-2313/21.png" alt="21.png"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">quadim</span> E:\TESTRANGE\pic\<span class="number">121</span>\out --ratio <span class="number">24</span>:<span class="number">25</span> --depth <span class="number">6</span> --shape circle --bg-color transparent</span><br></pre></td></tr></table></figure><p><img src="../images/out-A11021-1103-2313/3.png" alt="3.png"></p><p>原图<br><img src="../images/out-A11021-1103-2313/1.jpg" alt="1.jpg"></p><p>都已经包装好了。不过需要注意的是，<strong>目前并不提供稳定性保证</strong>。<em>（因为我不知道该怎么保证 (○｀ 3′○)）</em></p><p><a href="https://docs.rs/quadim">文档</a>……凑合着看看吧。注意<code>analyze()</code>和<code>render()</code>这俩函数，它们即是一切。</p><h2 id="特性列表"><a href="#特性列表" class="headerlink" title="特性列表"></a>特性列表</h2><ul><li>多线程！迄今为止最快的实现。</li><li>以 RGBA-8 格式处理图像。</li><li>合并测试在 YCbCr 而非 RGB 空间。</li><li>由于没有抗锯齿，因此在提供<code>--shape rect --border-width N</code>，<code>(N &gt; 0)</code>渲染参数时，实际上只会绘制左侧和上侧的边框。在指定较大的<code>border_width</code>以及突兀的<code>border_color</code>时会更加明显。</li><li>对于颜色参数：你可以传入<code>DarkSlateGray</code>、<code>hsla(168, 100%, 50%, 1)</code>，等等所有CSS里能写的颜色。<em>（感谢 <a href="https://github.com/mazznoer/csscolorparser-rs">csscolorparser</a>）</em></li></ul><h2 id="画饼"><a href="#画饼" class="headerlink" title="画饼"></a>画饼</h2><ul><li>🔥 允许自定义笔刷，比如随时间旋转的十字、随音乐律动的光点、在HSL颜色空间过滤特定颜色！等等。</li><li>更友好的CLI：允许一次传入多张图片，以及自动探测最合适的切片比例。</li><li>把分析和渲染完全分离，允许直接存取四叉树二进制格式……</li></ul><h2 id="Quadim-的原理？"><a href="#Quadim-的原理？" class="headerlink" title="Quadim 的原理？"></a>Quadim 的原理？</h2><ol><li><p>使用 <a href="https://github.com/clap-rs/clap">clap</a> 解析命令行输入；使用 <a href="https:github.com/eternal-io/src-dst-clarifier">src-dst-clarifier</a> 来处理源到目标文件的映射；使用 <a href="https://github.com/rust-threadpool/rust-threadpool">threadpool</a> 进行并行处理。</p></li><li><p>Analyze 阶段</p><ol><li><p>根据<code>GenericParams::slicing_ratio</code>将图像划分成一个个子块。通常需要选择正确的比例来让子块保持正方形，比如<code>-r 16:9</code>。</p></li><li><p>对每个子块，根据<code>GenericParams::max_depth</code>深度优先地遍历四叉树。（存在一行代码限制了真正的最大深度，以保证子图像的边长始终大于零像素）</p></li><li><p>尝试合并所有子块。</p><p> 能合并的情况有两种：</p><ol><li><p>抵达了最大深度，则这块区域的所有像素始终被合并，计算平均值并缓存。</p></li><li><p>检查自身的四个子块<strong>左上角</strong>的四个像素，计算它们的标准差或是极差（根据<code>AnalyzeParams::merge_method</code>）并与<code>AnalyzeParams::thres_</code>进行比较，若认为波动程度小则允许合并。然后再计算平均值并缓存。</p><p>不能合并的情况有两种：</p></li><li><p>情况二的反相。</p></li><li><p>子块的子块的子块……不能合并。</p></li></ol></li><li><p>额外的数据结构<code>[CanvasPixel]</code>缓存“颜色平均值”和“该不该合并”。</p><p> （像素颜色平均值储存在相当于子块<strong>左上角</strong>的位置，通过右移可以很容易地寻址。<code>[CanvasPixel]</code>本身是一维的，但被抽象成与图像相同的大小，这就是为什么图像的像素数不能大于缓存的长度。）</p></li><li><p>遍历完成后，四叉树信息已经被完整记录在缓存中了。由于没有任何数据被重复计算，因此 Quadim 十分高效。</p></li></ol></li><li><p>Render 阶段</p><p> 这回是广度优先遍历四叉树了。简单来说就是把“颜色”从四叉树中取出并用“画笔”（trait <code>Brush</code>）画到原图上。</p><p> 由于新图的大小保证与原图相同，因此可以在原始图像缓冲区上就地操作，不需要额外的内存分配，这是 Quadim 保持高效的另一个要素。</p></li></ol><h2 id="已知问题"><a href="#已知问题" class="headerlink" title="已知问题"></a>已知问题</h2><ul><li>在绘制较大的圆/椭圆时，它会被裁掉一部分。（详见 <a href="https://github.com/image-rs/imageproc/issues/519">image-rs/imageproc#519</a>）</li></ul><h2 id="附录：exit-code含义"><a href="#附录：exit-code含义" class="headerlink" title="附录：exit code含义"></a>附录：<code>exit code</code>含义</h2><ol><li>成功</li><li>部分错误</li><li>错误过多，提前终止</li><li>致命错误，在处理任何图像前就已经退出；一般是传错参数了</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>全屏段阻塞干扰</title>
      <link href="/posts/c3313ed3.html"/>
      <url>/posts/c3313ed3.html</url>
      
        <content type="html"><![CDATA[<p>全频带阻塞干扰·中国版  刘慈欣</p><h1 id="那是河北廊坊的2001年，你靠在战友身边，向天空接了个火，点上了最后一支烟"><a href="#那是河北廊坊的2001年，你靠在战友身边，向天空接了个火，点上了最后一支烟" class="headerlink" title="那是河北廊坊的2001年，你靠在战友身边，向天空接了个火，点上了最后一支烟"></a>那是河北廊坊的2001年，你靠在战友身边，向天空接了个火，点上了最后一支烟</h1><span id="more"></span><p><img src="https://free-img.400040.xyz/4/2024/06/25/667a2e1b5e3e9.jpg" alt="82152831_p0_master1200.jpg"></p><h2 id="第一章-溏沽前线"><a href="#第一章-溏沽前线" class="headerlink" title="第一章 溏沽前线"></a>第一章 溏沽前线</h2><p>在战场电磁干扰形式选择上，本手册主张采用对某一特定频率或信道所进行的瞄准式干扰，而不主张同时干扰一个较宽频带的阻塞式干扰，因为后者对已方的电磁通讯和电子支援措施也会产生影响。 </p><p>　　　　　　　　　　　　　　　———摘自1993年美国陆军《电子战手册》 </p><p>1月5日，溏沽前线 </p><p>海已经看不见了，战线在一夜之间后退了15公里。 </p><p>在凌晨的天光下，雪原呈现一种寒冷的暗蓝色。在远方的各个方向上，被击中的目标冒出一道道黑色的烟柱，几乎无风，这些烟柱笔直地向高空升去，好象是连接天地的一条条细长的黑纱。顺着这些烟柱向上看，林云吃了一惊：刚刚显现晨光的天空被一团巨大的白色乱麻充塞着，这纷乱的白色线条仿佛是一个精神错乱的巨人疯狂地划在天上的。那是混杂在一起的歼击机的航迹，是中国空军和北约空军为争夺制空权所进行的一夜激战留下的。 </p><p>来自空中和海上的精确打击也持续了一夜，在一位非专业人士看来，打击似乎并不密集，爆炸声每隔几秒钟甚至几分钟才响一次，但林云知道，每一次爆炸都意味着一个重要目标被击中，几乎不会打空。这一声声爆炸，仿佛是昨夜这篇黑色文章中的一个个闪光的标点符号。当凌晨到来时，林云不知道防线还剩下多少力量，甚至不知道防线是否还存在。 </p><p>林云所在的电子对抗排是在半夜被毁灭的，当时这个排所在的位置上落下了六颗激光制导炸弹。林云佼幸逃生在那辆装载干扰机的86式装甲车还在燃烧，这个排的其它电子战车辆现在都变成散落在周围雪地上了一堆堆黑色金属块。林云所在的弹坑中的余热正在散去，她感到了寒冷。她用手撑着坐直身，右手触到了一团粘糊糊的冰冷绵软的东西，看去象一个粘满了黑色弹灰的泥团。她突然意识到那是一块残肉，她不知道它属于身体的哪一部分，更不知道属于哪个人。在昨夜的那次致命打击中，阵亡了一名中尉，两名少尉和八名战士。林云呕吐起来，但除了酸水什么也没吐出来。她拚命地把双手在雪里擦，想把手上的血迹擦掉，但那黑红色的血迹在寒冷中很低快在手上凝固，还是那么醒目。 </p><p>令人窒息的死寂已持续了半个小时，这意味着新一轮的地面进攻就要开始了。林云拧大了别在左肩上的对讲机的音量，但传出的只有沙沙的噪音。突然，有几句模糊的话语传了出来，仿佛是大雾中朦胧飞过的几只鸟儿。 </p><p>“……06观察站报告，1437阵地正面，M1A2三十七辆，平均间隔六十米；布莱德雷运兵车四十一辆，距M1A2攻击前锋500米；M1A2二十四辆，勒克莱尔八辆，正在向1633阵地侧翼迂回，已越过同1437的接合部，1437，1633，1752，准备接敌！” </p><p>林云克制住因寒冷和恐惧引起的颤抖，使地平线在望远镜视野中稳定下来，看到了天边出现的一团团模糊的雪雾，给地平线镶上了一道毛绒绒的镶边。 </p><p>这时林云听到了身后传来的发动机的轰鸣声，一排90式和2000式坦克越过她的位置冲向敌人，在后面，更多的中国坦克正在越过高速公路的路基。林云又听到了另一种轰鸣声，敌人的攻击直升机群在前方的天空中出现，它们队形整齐，在黎明惨白的天空中形成一片黑色的点阵。林云周围坦克的发烟管启动了，随着一阵低沉的爆破声，阵地笼罩在一片白色的烟雾中。透过白雾的缝隙，林云看到中国的直升机群正从头顶掠过，她分辩出几架Z10和“小羚羊”。 </p><p>坦克上的125毫米炮急风骤雨般地响了起来，白雾变成了疯狂闪烁的粉红色光幕。几乎与此同时，第一批敌人的炮弹落了下来，白雾中粉红色的光芒被爆炸产生的刺眼蓝白色闪电所代替。林云伏在弹坑的底部，她感到身下的大地在密集的巨响中象一张振动的鼓皮，身边的泥土和小石块被震得飞起好高，落满了她的后背。在这爆炸声中，还可隐约听到反坦克导弹发射时的嘶鸣声。林云感到整个宇宙都在这撕人心肺的巨响中化为碎片，并向无限深处坠落……就在她的神经几乎崩溃时，这场坦克战结束了，它只持续了约三十秒钟。 </p><p>当白雾和浓烟散去时，林云看到面前的雪地上散布着被击中的中国坦克，燃起一堆堆裹着黑烟的熊熊大火；她举目望去，不用望远镜也能看到，远方同样有一大片被击毁的北约坦克，它们看上去是雪原上一个个冒出浓烟的黑点。但更多的敌人坦克正越过那一片残骸冲过来，它们裹在由履带搅起的一团团雪雾中，艾布拉姆斯那凶猛的扁宽前部不时从雪雾中露出来，仿佛是一头头从海浪中冲出的恶龟，滑膛炮炮口的闪光不时亮起，好象恶龟闪亮的眼睛……低空中，直升机的混战仍在继续，林云看到一架阿帕奇在不远的半空爆炸，一架Z10拖着漏出的燃料，摇晃着掠过她的头顶，在几十米之外坠地，炸成了一团火球。近距空空导弹的尾迹，在低空拉出了无数条平行的白线…… </p><p>林云听到咣地一声响，她转身一看，不远处一辆被击中后冒出浓烟的90式坦克后部的底门打开了，没看到人出来，只见门下方垂下一支手。林云从弹坑中跃出，冲到那辆坦克后面抓住那支手向外拉，车内响起一声沉闷的爆炸，一股灼热的汽浪把林云向后冲了几步远，她的手上抓住了一团粘软的很烫的东西，那是从坦克手的手上拉脱的一团烧熟的皮肤。林云抬头看到一股火焰从底门中喷出，她通过底门，看到车内已成了一座小型的炼狱，在那暗红色的透明的火焰中，坦克手一动不动的身影清晰可见，象在水中一样波动着。 </p><p>林云又听到两声尖啸，这是她左前方的一个导弹班把最后的两枚反坦克导弹发射出去，其中一枚有线制导的红缨导弹成功地击毁了一辆艾布拉姆斯，另一枚无线制导的导弹则被干扰，向斜上方冲去，失去了目标。这时，那个导弹班的6个人撤出掩体向林云所在的弹坑跑来，一架科曼奇直升机向他们俯冲下来，它那棱角分明的机体看上去象一只凶猛的鳄鱼。一长排机枪子弹打在雪地上，击起的雪和土如同一道突然立起又很快倒下的栅栏，这栅栏从那只小小的队伍中穿过，击倒了其中的四个人，只有一名中尉和一名战士到达了弹坑。这时林云才注意那名中尉戴着坦克防震帽，可能来自一辆已被击毁的坦克。他们每人手中都拿着一管反坦克火箭筒。跳进弹坑后，中尉首先向距他们最近的一辆敌坦克射击，击中了那辆M1A2的正面，诱发了它的反应装甲，火箭弹和反应装甲的爆炸声混在一起，听起来很怪异。坦克冲出了爆炸的烟雾，反应装甲的残片挂在它前面，象一件破烂的衣衫。那名年轻的战士继续对着它瞄准，他手中的火箭筒随着坦克的起伏而抖动，一直没有把握击发。当距他们只有四五十米的坦克冲进一个低洼地时，那名战士只能站到弹坑的边缘向斜下方瞄准，他手中的火箭筒与那辆艾布拉姆斯的120毫米炮同时响了，坦克的炮手情急之中发射的是一发不会爆炸的贫铀穿甲弹，初速每秒1800米的炮弹击中了那个战士，把他上半身打成了一团飞溅的血花！林云感觉到细碎的血肉有力地打在她钢盔上，噼啪作响，她睁开眼睛，看到就在她眼前的弹坑边缘，那名战士的两条腿如同两根黑色的树桩，无声地滚落到弹坑底部她的脚下，他身体的被粉碎的其它部分，在雪地上溅出了一大片放射状的红色斑点。火箭击中了艾布拉姆斯，聚能爆炸的热流切穿了它的装甲，车体冒出了浓烟。但那个钢铁怪兽仍拖着浓烟向他们冲来，直冲到距他们20米左右才在车体内的一声爆炸中停了下来，那声爆炸把它炮塔的顶盖高高掀了上去。 </p><p>紧接着，北约的坦克阵线从他们周围通过，地皮在覆带沉重的撞击下微微颤抖。但这些坦克对他们俩所在的弹坑并没有加以理会。当第一波的坦克冲过去后，中尉一把拉住林云的手，拉着她跃出弹坑，来到一辆已布满弹痕的吉普车旁。在二百多米远处，第二装甲攻击波正快速冲过来。 </p><p>“躺下装死！”中尉说。林云于是躺到了吉普车的轮子边，闭上双眼，“睁开眼更像！”中尉又说，并在她脸上抹了一把不知是谁的血。他也躺下，与林云成直角，头紧挨着林云的头，他的钢盔滚到了一边，粗硬的头发扎着林云的太阳穴。林云大睁着双眼，看着几乎被浓烟吞没的天空。 </p><p>两三分钟后，一辆半覆带式布莱德雷运兵车在距他们十几米处停下来，从车上跳下几名身穿蓝白相间雪地迷彩服的美军士兵，他们中大部分平端着枪成散兵线向前去了，只有一个朝这辆吉普走来。林云看到两只粘满雪尘的伞兵靴踏到了紧靠她脸的地方，她能清楚地看到插在伞兵靴上的匕首刀柄上82空降师的标志。那个美国人伏身看她，他们的目光相遇了，林云尽最大努力使自已的目光呆滞无神，面对着那双透出的惊愕的蓝色瞳仁。 </p><p>“Oh，god！” </p><p>林云听到了一声惊叹，不知是惊叹这名肩上有一颗校星的姑娘的美丽，还是她那满脸血污的惨相，也许两者都有。他接着伸手解她领口的衣扣，林云浑身起了鸡皮疙瘩，把手向腰间的手枪移动了几厘米，但这个美国人只是扯下了她脖子上的标志牌。 </p><p>他们等的时间比预想的长，敌人的坦克和装甲车源源不断地从他们两旁轰鸣着通过，林云感到自己的身体在雪地上都快冻僵了，她这时竟想起了一首苏联军队诗歌中的两句：“士兵躺在雪地上，就象躺在天鹅绒上一样。”，她得到博士学位的那天，曾把这两句诗写到日记上，那也是一个雪夜，那夜的雪也真象天鹅绒，第二天她就报名参军了。 </p><p>一纵队的日本陆上自卫队坦克开过来，在周围散成一大片停下。几名军官从车上下来，会聚在坦克围成的一片空地上。召集他们的是一名装甲兵上校，他是日本新新人类的典型形象，身材高挑晰长，面容白净漂亮，他的话音很有穿透力，在这发动机的噪音中都能听得很清楚。 </p><p>“怎么象蜗牛一样？为什么不走高速公路？！”他质问周围的装甲部队军官。 </p><p>“岩田君，路堵了！”其中一名少校无可奈何地指了指高速公路，由于战线已经前移，这里的火力稀少了，大群的难民从他们的藏身之处走出来，涌上了高速公路，公路上很快塞满了民用车辆和人流。在那里几十名日军士兵冲天鸣枪，试图清出一条路来，但无济于事。林云又听到岩田上校的声音： </p><p>“我们这支部队的前身，是二战中在这块土地上屡建奇功的板垣师团，那些前辈们要是活过来，也会让你们这付样子气回坟墓里去！” </p><p>他一手按住领口的喉头送话器，另一支手一挥：“全纵队注意，都跟着103车！”说完，他跳上那辆坦克，坦克发动机轰鸣起来，排气口喷出的黑烟吹动着林云的头发，这辆日制90型坦克一跃而起，冲上路基。这时，路上站着一群刚从一辆不能动弹的大客车上下来的幼儿园的娃娃，有三四十个。保育员姑娘站在冲来的坦克和孩子之间挥动着双臂，但那辆坦克没有丝毫犹豫，撞倒了保育员，冲进那群吓呆了的娃娃们中间。林云用眼睛的余光看到，一个个幼儿的小身躯在雪地和坦克履带之间迸放出一朵朵血花，如同在雪白的台布上压碎了一个个西红柿…… </p><p>在这一纵队的日本坦克通过以后，林云和中尉的周围空旷起来。他们跳上吉普车，中尉开着车，沿着早已看好的路飞快驶去。他们身后响起了冲锋枪的射击声，子弹从头顶飞过，其中一颗打碎了一个后视镜。吉普车急拐进了一个燃烧着的居民点，敌人没有追过来。 </p><p>“少校，你是博士，是吗？“中尉开着车问。 </p><p>“你在哪儿认识的我？” </p><p>“我见过你和十号首长的儿子在一起。” </p><p>沉默了一会儿，中尉又说：“现在，他的儿子可是世界上离战争最远的人了。” </p><p>“你这话什么意思，你要知道……” </p><p>“没什么意思，说说而已。”中尉淡淡地说，他们的心思都不在这个话题上，他们都在想着还抱有的那一线希望。 </p><p>但愿整个战线只有这一处被突破。 </p><p><img src="https://free-img.400040.xyz/4/2024/06/25/667a2e1be32ad.jpg" alt="95135722_p0_master1200.jpg"></p><h2 id="第二章-“万年炎帝”号"><a href="#第二章-“万年炎帝”号" class="headerlink" title="第二章 “万年炎帝”号"></a>第二章 “万年炎帝”号</h2><p>1月5日，近日轨道，“万年炎帝”号 </p><p>庄宇感到了一个人独居一座城市的孤独。 </p><p>“万年炎帝”号太空组合体确实有一座小城市那么大，它的体积相当于两艘巨型航空母舰，能使5000人同时在太空中生活。当组合体处于旋转重力状态时，里面甚至有一个游泳池和一条小河流，这在当今的太空工作环境中，可以说是绝无仅有的奢侈。但事实是，“万年炎帝”号是中国航天界一贯的节检思维的结果。它的设计思想是：在一个构造中组合太阳系内太空探索的所有功能，这样虽一次性投资巨大，但从长远看还是十分经济的。“万年炎帝”号被西方戏称为太空的瑞士军刀，它可做为空间站在地球各个高度的轨道上运行，它可以方便地移动到绕月球轨道，或做行星际探索飞行。“万年炎帝”号已进行过金星和火星飞行，并探测过小行星带。以它那巨大的体积，等于把一个研究院搬到了太空中，就太空科学研究而言，它比西方那些数量众多但小巧玲珑的飞船具有更大的优势。 </p><p>当“万年炎帝”号准备开始前往木星的为期三年的航行时，战争爆发了。当时它上面的一百多名乘员全都返回了地面，他们大部分是空军军官，只留下了庄宇一个人。这时“万年炎帝”号暴露出它的一个缺陷：在军事上它目标太大，且没有任何防御能力，没有预见到后来太空军事化的进程，是设计者的一个失误。战争爆炸后，“万年炎帝”号只能进行躲避飞行。向外太空是不行的，在木星轨道之内，有大量的北约无人航行器，它们都体积不大，武装或非武装，每一个对“万年炎帝”号都是致命的威胁。于是，它只有航向近日空间，“万年炎帝”号引以为骄傲的主动致冷式热屏蔽系统，使它可以比目前人类的任何太空航行器都更接近太阳。现在“万年炎帝”号已到达水星轨道，距太阳五千万公里，距地球一亿公里。 </p><p>虽然“万年炎帝”号上的大部分舱室已经关闭，但留给庄宇的空间仍大得惊人。透过广阔的透明穹顶，比地球上看去大三倍的太阳在照耀着，可以清楚地看到太阳表面的斑耀和紫色日冕中奇丽的日珥，有时甚至还可以看到光球表面因对流而产生的米粒组织。这里的宁静是虚假的，外面，太阳抛出的粒子流和射电波的狂风巨浪在呼啸，“万年炎帝”号就是这动荡海洋中漂浮的一粒小小的种子。 </p><p>一束如游丝般的电波把庄宇同地球连接起来，也把那遥远世界的忧虑带给了他。他刚刚得知，北京近郊的控制中心已被巡航导弹摧毁，对“万年炎帝”号的控制转由设在西北的第二控制中心执行。他每隔5个小时接收一份从地球传来的战争新闻，每到这时，他就想起了父亲。 </p><p>1月5日，中国人民解放军总参谋部 </p><p>十号首长觉得自己面对着一堵墙，他面前实际是一面平放的京津战区全息战场地图。而以前当他面对挂在墙上的宽大的纸制地图时，却能看到广阔而深邃的空间。不管怎样，他还是喜欢传统的地图。记不清有多少次，要找的位置在地图的最下方，他和参谋们只好趴在地上看，现在想起来让他微微一笑。他又想起在多次演习前，在野战帐篷中用透明胶带把刚发下来的作战地图拼贴起来，他总贴不好，倒是第一次随他看演习儿子一上手就比他贴得好……发现自己又想起儿子时，他警觉地打住了思绪。 </p><p>作战室中只有他和华北集群司令两人，后者一根接一根地抽烟，他们凝神地盯着全息地图上方变幻的烟团，仿佛那就是严峻的战局。 </p><p>华北集群司令说：“北约的登陆兵力已达三十七个师，攻击正面有一百公里宽，主攻方向以高速公路为轴线，已多处突破。” </p><p>“北线呢？”十号问。 </p><p>“俄罗斯已集结了四十五个师，但对张家口的攻击仍然是试探性的。” </p><p>地面的一次爆炸把微微的振动传了下来，作战室里充满了随着顶板上的挂灯而轻轻摇晃的影子。 </p><p>“在南线，我们只有退守廊房防线了。”华北集群司令说。 </p><p>“下一步的战术动作只能如此，但这不是我们的目标。这条防线距北京只有一门大口径炮射程的距离，已没有太大意义。我们必须把敌人向海边压回三十到四十公路。” </p><p>“可现在，已有人谈论退守北京，凭借城市外围建筑和工事进行巷战了。” </p><p>“胡说八道！一旦张家口失守，或者南线之敌从两翼迂回，就有可能切断密云和官厅的水源，被围的城市将不战自乱。下步作战方针，第一是反击，第二是反击，第三还是反击。” </p><p>华北集群司令叹了一口气，无言地看着地图。 </p><p>十号接着说：“我知道南线力量不够，准备从北线抽调一个集团军加强南线。” </p><p>“什么？现在张家口的防守已经很难了。” </p><p>十号笑了笑，“现在相当多指挥官的误区，就是只从军事角度考虑问题，严峻的形势让我们钻进去出不来了。从目前的态势看，你认为俄军没有力量攻下张家口吗？” </p><p>“我认为不是，象近卫一军，近卫二军和塔曼步兵师这样的精锐部队，集中了如此密集的装甲和低空攻击力量，在没有遭受太大损失的情况下一天的推进还不到十五公里，显然是有意放慢的。” </p><p>“这就对了，俄国人在观望，在观望南线战局！如果我们在南线夺回战场主动权，他们就会继续观望下去，甚至有可能在北线单方面停火。” </p><p>华北集群司令把刚拿出的一根烟夹在手上，忘了点火。 </p><p>“俄罗斯的从北方的突然进攻确实是在我们背后捅了一刀，但一些同志在心理上把这当做借口，使我们的作战方针趋向消极，这种心态必须转变！当然，应当承认，要从根本上扭转战局，京津战区的力量不够，我们的最终希望寄托在增援的西北集群上。” </p><p>“西北集群要完成集结并进入出击位置，最少也需一个星期，考虑到制空权的因素，时间可能还要长。” </p><p>1月5日，北京 </p><p>林云和那位中尉的吉普车开进城时已时下午三点多，空袭警报刚刚响过，街上空荡荡的。 </p><p>中尉长叹一口气说：“少校，我真想念我那辆2000啊！4年前从装甲学院毕业的时候，也正是我失恋的时候，可刚到部队的我一看到那辆2000，心情一下子由阴转晴了。我摸着它的装甲，光溜溜温乎乎的，象摸着女孩子的手。嗨，那个女孩儿算什么，这才是男人真正的伴侣！可今天早上，它中了一颗西北风，唉，可能现在火还没灭呢……” </p><p>这时，城市西北方向传来爆炸声，那是中关村技术园区方向，也是遭受轰炸最猛烈的地方，而且是现代空袭中很少见的野蛮的面积型轰炸。 </p><p>中尉仍沉浸在早上的战斗中，“唉，不到三十秒钟，整整一个坦克营就完了。” </p><p>“敌人的伤亡也很大，”林云说，“我注意观察了战果，双方被击毁的装甲目标的数量相差并不大。” </p><p>“双方坦克的对毁率大约，1比1.3吧，直升机差一些，但也不会超过1比1.5。” </p><p>“要是这样的话，战场的主动权应在我们一边，我们在数量上占很大优势，仗怎么会打成这样呢？” </p><p>中尉扭头看了林云一眼，“你是搞电子战的，还不明白为什么？你们的那套玩艺儿，在演飞中玩的头头是道，什么第五代C3I，什么三维战场显示，还有动态态势模拟，攻击方案优化之类的，满是那么回事儿。可一到实战中，我面前的液晶屏上显示最多的就两句：COMMUNICATIONERROR和COULDNOTLOGIN。就说今天早上吧，我的正面和两翼的情况全不清楚，只接到一个命令：接敌。唉……假如再投入一半的增援兵力，敌人就不会在我们的位置突破。整个战线的情况，大概都这德性。” </p><p>林云知道，在同刚刚过去的战斗中，双方在整个战线上投入的坦克总数可能超过5000辆，还有数目相当于坦克一半的武装直升机。 </p><p>“我的那辆钢铁情人不亏本儿，”中尉仍沉浸在早上的战斗中不可自拔，“我肯定打中了一辆勒克莱尔，但我最想打中的是一辆艾布拉姆斯，知道吗？一辆艾布拉姆斯……” </p><h2 id="第三章-恒星"><a href="#第三章-恒星" class="headerlink" title="第三章 恒星"></a>第三章 恒星</h2><p>1月5日，中国人民解放军总参谋部 </p><p>一个星期以来，十号第一次走出了地下作战室，他踏着厚厚的白雪散步，同时寻找太阳，这时太阳已在挂满雪的松林后面落下了一半。在他的想象中，有一个小黑点正在夕阳那桔红色的表面缓缓移动，那是“万年炎帝”号，他的儿子在上面，那是这个星球上离父亲最远的儿子了。 </p><p>这件事在国内引起了许多流言蜚语，在国际上，敌人更是充分利用它，《纽约时报》用大得吓人的黑体字登出了一个标题：战争史上逃得最远的逃兵！下面是庄宇的照片，照片的注角是：在共产党政府煸动十三亿中国人用鲜血淹没入侵者时，最高军事指挥官的儿子却乘着这个国家唯一的一艘巨型飞船，逃到了距战场一亿公里的地方，他是目前这个国家最安全的人了。 </p><p>但十号的心中很坦然。为了怀念他那早逝的爱人，他使儿子随母亲姓，从中学到博士后，庄宇周围几乎没有人知道他父亲是谁。航天控制中心做出这个决定，仅仅是因为庄宇的研究专业是恒星的数学模型，“万年炎帝”号这次接近太阳，对他的研究是一次难得的机会，而组合体不能完全遥控飞行，上面至少应有一个人。总指挥也是后来从西方的新闻中才得知庄宇的身份的。 </p><p>另一方面，不管十号是否承认，在他的内心深处，确实希望儿子远离战争。这并不仅仅是出于血肉之情，十号总觉得自己的儿子不属于战争，是的，他是世界上最不属于战争的人了。但他又知道自己这想法有问题：谁是属于战争的？ </p><p>况且，庄宇就属于恒星吗？他喜欢恒星，把全部生命投入到对它的研究上面，但他自己却是恒星的反面，他更象冥王星，象那颗寂静、寒冷的行星，孤独地运行在尘世之光照不到的遥远空间。庄宇的性格，加上他那白晰清秀的外表，使人很容易觉得他象个女孩子。但十号心里清楚，儿子从本质上一点不象女孩子，女孩儿都怕孤独，但庄宇喜欢孤独，孤独是他的营养，他的空气。早在上小学的时候，庄宇每天都在自己的小房间里静悄悄地一人渡过整个晚上，开始，十号以为他在看书，但有一次他无意中发现，儿子是站在窗前一动不动地看着星星。 </p><p>“爸爸，我喜欢星星，我要看一辈子星星。”他这样对父亲说。 </p><p>十一岁生日那天，庄宇向父亲提出了迄今为止唯一的一个要求：想要一架天文望远镜，这之前，他一直用十号的军用望远镜观察星星。后来，那架天文望远镜就成了庄宇唯一的伴侣，他在阳台上看星星可以一直看到东方发白。有不多的几次，他们父子俩一起在阳台上看星星，十号总是把望远镜对准夜空中看起来最亮的一颗星，但儿子不以为然地摇摇头，“那颗没意思，爸爸，那是金星，金星是行星，我只喜欢恒星。” </p><p>但其他男孩子喜欢的东西庄宇却一点兴趣都没有。隔壁赵参谋长家的那个小胖子，偷拿父亲的手枪玩，结果走火把大腿打穿了；总参家属院中的男孩子们，如果能让爸爸领着到部队的靶场上打一次枪，就是得到最高的奖赏了。但男孩子对武器的这种天生的依恋，在庄宇身上丝毫没有出现，从这点上来说他确实不象男孩子。十号对此很不安，他几乎无法容忍一个将军的儿子对武器无动于衷，以至于后来他做出了一件至今想起来仍让他很不好意思的事：有一次，他把自己的那支77式手枪悄悄放到了儿子的书桌上。放学回来后不久，庄宇就拿着枪从他的小房间中出来，他拿枪象女人那样，小心地握着枪管，他把枪轻轻地放到父亲面前，淡淡地说：“爸，以后别把这东西乱放。” </p><p>在对待庄宇的前途问题上，十号是一个开明的人，他不象自己的周围的那些将军们，一心让儿子甚至女儿延续自己的军旅生涯。但庄宇离父亲的事业确实太远太远了。 </p><p>十号不是一个脾气暴燥的人，但做为一名高级将领，他不止一次在上万名官兵面前斥责一位将军。但对庄宇，他却从来没有发过火。这固然因为庄宇一直默默地沿着自己的轨道成长，很少让父亲操心，更重要的是，庄宇身上似乎生来就有一种非同寻常的超脱的气质，这气质有时甚至让十号感到有些敬畏。就如同他在花盒中随意埋下一颗种子，却长出来绝世珍稀的植物，他敬畏地看着这植物一天天成长，小心地呵护着它，等着它开出花朵。他的期望没有落空，儿子现在已成为世界上最出色的天体物理学家。 </p><p>这时太阳已在松林后面完全落下去，地上的雪由白色变成浅蓝色。十号收回了思绪，回到了地下作战室。开作战会议的人都到齐了，他们包括华北集群和西北集群的主要指挥官。另外还有更多的电子战指挥官，他们从少将到上尉都有，大部分是刚从前线回来的。作战室里正在进行着一场激烈的争论，争论的双方是华北集群的陆战部队和电子战部队的军官们。 </p><p>“我们正确判明了敌人主攻方向的转变，”C集团军的一位大校师长说，“我们的装甲力量和陆航低空攻击力量的机动性也并不差，但通信系统被干扰得一塌糊涂，C3I指挥系统根本玩不转！集团军中的电子战单位，级别从营升到了团，从团又升到了师，这两年在这上面的资金投入比常规装备的投入都多，就这么个结果？！” </p><p>负责指挥战区电子战的一位少将看了身边的林云一眼，同其他刚从前线归来的军官一样，她的迷彩服上满是污迹和焦痕，脸上还残留着血迹。少将说：“林少校在电子战研究方面很有造诣，同时也是总参派往前线的电子战观察员，她的看法可能更有说服力一些。”象林云这样的年轻的博士军官大多心直口快，无所顾忌，往往被人当枪使，这次也不例外。” </p><p><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b897581d73.jpg" alt="屏幕截图 2023-12-12 182451.jpg"></p><h2 id="第四章-共享黑暗战场"><a href="#第四章-共享黑暗战场" class="headerlink" title="第四章 共享黑暗战场"></a>第四章 共享黑暗战场</h2><p>林云站起来说：“师长，话不能这么说！这不是钱投入多少的问题，当西方的对C3I已深入研究了十多年时，我们对此才仅仅有了些概念。” </p><p>“那电子反制呢？”师长问，“敌人能干扰我们，你们就不能干扰他们？！我们的C3I瘫痪了，北约的却转得很好，象上了润滑油似的，今天早上我对面的陆战一师能那么快速地转变攻击方向就是一个证明！” </p><p>林云苦笑了一下，“提起对敌干扰，大校同志，不要忘了，就是在你们师的阵地上，你的人用枪顶着操作员的脑袋，使集团军电子对抗部队的干扰机停下来！” </p><p>“怎么回事？”十号问，这时人们才发现他进来，都起身敬礼。 </p><p>“首长，是这样。”师长对十号解释说。“对我们的通讯指挥系统来说，他们的干扰比北约的更厉害！在北约的干扰中，我们沿能维持一定的无线通讯，可他们的干扰机一开，就把我们全盖住了！” </p><p>林云说：“可同时敌人也全被盖住了！这是我军目前实施电子反制可选择的的唯一战略。北约目前在战场通讯中，已广泛采用诸如跳频、直接序列扩频、零可控自适应天线、猝发、单频转发和频率捷变这类技术[注1]，我们用频率瞄准方式进行干扰根本不起作用，只能采用全频带段阻塞式干扰。” </p><p>B集团军的一位上校质问：“少校，北约采用的可全是频率瞄准式干扰，频带还相当窄，而我们的C3I系统也普遍采用了你提到的那些通讯技术，为什么他们对我们的干扰那样有效呢？” </p><p>“这原因很简单，我们的C3I系统是建立在什么样的软硬件平台上？UNIX，LINUX，甚至WINDOWS2010，CPU是INTER和AMD！这是用人家养的狗给自己看门！在这种情况下，敌人可以很快掌握诸如跳频规律之类的电子战情报，同时用更多更有效的纯软件攻击加强其干扰效果。总参和总装备部曾经大力推广过国产操作系统，但到了下面阻力重重，你们B集团军就是一个最顽固的堡垒……” </p><p>“好了，你们所说问题和矛盾的正是今天会议要解决的，开会！”十号打断了这场争论。 </p><p>当大家在电子沙盘前坐好后，十号叫过一位少校参谋，这个身材细高的年轻人双眼迷缝着，好象不适应作战室中的光线。“介绍一下，这位是杨少校，他的最大特点就是深度近视，他的眼镜与众不同，别人的眼镜镜片在镜框里边，他的镜片在镜框外面，哈，就象茶杯底那么厚啊！我们现在看不到它了，早上杨少校在吉普车遇到空袭时给砸了，好象隐形眼镜也弄丢了？” </p><p>“报告首长，那是在三天前在滩头阵地丢的，我的眼睛是在半年内变成这样的，这变化早些的话我进不了军队。”少校立正说。 </p><p>虽然谁也不知道十号为什么介绍这位少校，人群中还是响起了几声低低的笑声。 </p><p>“战争爆发以来的事实说明，虽然有渤海湾海战的失利，但在空中和陆上常规武器方面，我们并不比敌人差多少，但在电子战方面，我们的差距之大出乎意料。造成这样的局面有很深远的历史原因，这不是我们今天要讨论的。我们要明确的是以下一点：目前，电子战是我军夺回战争主动权的关键！我们首先必须承认敌人在电子战方面的优势，甚至压倒优势，然后我们必须以我军现有的电子战软硬件条件为基础，制定出一套行之有效的战略战术，这套战略战术的目的，是要在短时间内，使我军和北约在电子战方面形成某种力量上的平衡。也许大家认为这不可能：我军上世纪未以来的战争理论，主要是基于局部有限战争的，对目前在军事上如此强大的敌人的全面进攻，确实研究得不够。在这样严峻的形势下，我们必须以一种全新的方式思维，下面我要介绍的统帅部新的电子战战略，就可以看做这种思维的结果。” </p><p>灯灭了，电脑屏幕和电子沙盘都关闭了，重重的防辐射门也紧紧关闭，作战室淹没于伸手不见五指的黑暗之中。 </p><p>“是我让关的灯。”黑暗中传来十号的声音。 </p><p>时间在黑暗和沉默中慢慢流逝，这样过了有一分钟。 </p><p>“大家现在有什么感觉？”十号问。 </p><p>没有人问答，浓重的黑暗使军官们仿佛沉没在夜之海的海底，他们觉得呼吸都有些困难。 </p><p>“郑军长，你说说看。” </p><p>“这几天在战场上的感觉。”C集团军军长说，黑暗中又响起了一阵低低的笑声。 </p><p>“别的人呢，大概都与他有同感吧。”十号说。 </p><p>“当然，首长，你想想，耳机里除了沙沙声什么也没有，屏幕上一片空白，对作战命令和周围的战场态势一无所知，可不就是这种感觉嘛！这黑暗，压得人喘不过气来啊！” </p><p>“但并非所有人都是这种感觉，杨少校，你呢？”十号问。 </p><p>杨少校的声音从作战室的一角传来“首长，我的感觉不象他们这么糟糕，在亮着灯的时候，我看周围也是模模糊糊的。” </p><p>“你甚至还有一种优越感吧？”十号问。 </p><p>“是的首长，您可能听说过，在那次纽约大停电时，是一些瞎子带领人们走出摩天大楼的。” </p><p>“但郑军长的感觉也是可以理解的，他有一双鹰眼，还是个神枪手，每年过节部队会餐时，他都表演用手枪在十几米远处开酒瓶盖。想想他和杨少校在这时用手枪决斗，可是一件很有意思的事。” </p><p>黑暗中的作战室又陷入了沉默，指挥官们都在思考。 </p><p>灯亮了，人们都迷起了双眼，这与其说是不能适应这突然出现的亮光，不如说是对十号刚刚暗示的思想感到震惊。 </p><p>十号站起来说：“我想，刚才我已把我军下一步的电子战新战略表达清楚了：全频段大功率的阻塞干扰，在电磁通讯上，制造一个双方‘共享’的全黑暗战场！” </p><p>“这样将使我军的战场指挥系统全面瘫痪！”有人惊恐地说。 </p><p>“北约也一样！瞎大家一起瞎，聋大家一起聋，在这样的条件下同敌人达到电子战的力量平衡。这就是新战略的核心思想。” </p><p>“那总不至于让我们用通讯员骑摩托车去发布作战命令吧？！” </p><p>“要是路不好，他们还得骑马。”十号说，“我们粗略估计了一下，这样的全频段阻塞干扰，至少可覆盖北约70%的战场通讯系统，这就意味着他们的C3I系统全面瘫痪；同时还可使敌人50%至60%的远程打击武器失去作用，这其中最明显的例子就是战斧巡航导弹：现在的这种导弹的制导系统同上个世纪有了很大的改变，那时的战斧主要使用地形匹配和小型测高雷达来导航，现在这种导航方式只用做未端制导，而其射程的大部分依靠卫星全球定位系统。通用动力公司和麦克唐纳。道格拉斯公司认为他们所做的这种改进是一大进步，美国人太相信来自太空中的导航电波了，但GPS系统的电波传输一旦被干扰，战斧就成了瞎子。这种对GPS的依赖在北约大部分远程打击武器中都存在。在我们所设想的战场电磁条件出现时，就会逼着敌人同我们打常规战，我们可以粘上去打，充分发挥自己的优势。” </p><p>“我还是心里没底，”被从北线调往南线的A集团军军长忧心忡忡地说，“在这样的战场通讯条件下，我甚至怀疑我的集团军能不能从北线顺利地调到南线。” </p><p>“你肯定能的！”十号说：“这段距离，对刘备和曹操来说都不算长，我不信今天的中国军队离了无线电就走不过去了！被现代化装备惯坏的，应该是美国人而不是我们。我知道，当整个战场都处于电磁黑暗中时，你们心中肯定感到恐惧，这时要记住，敌人比你们恐惧十倍！” </p><p><img src="https://free-img.400040.xyz/4/2024/06/25/667a2e1acd96b.jpg" alt="85989669_p0_master1200.jpg"></p><h2 id="第五章-代号“洪水”"><a href="#第五章-代号“洪水”" class="headerlink" title="第五章 代号“洪水”"></a>第五章 代号“洪水”</h2><p>当看着林云的身影混在这群穿迷彩服的军官中，在作战室的出口消失的时候，十号的心悬了起来。她将重返前线，而她所在的电子战部队将是敌人火力最集中的地方。昨天，在同一亿公里远的儿子那来回延时达5分钟的通话中，十号曾告诉他林云很好，但在早上的战斗中，她就险些没回来。 </p><p>庄宇和林云是在一次演习中认识的。那天十号和儿子一起吃晚饭，同往常一样他们默默地吃着，庄宇早逝的母亲在远处的镜框中默默地看着他们。庄宇突然说：“爸爸，我想起明天就是您的五十一岁生日了，我应该送您一件生日礼物。我是看见那架天文望远镜才想起来的，那件礼物真好。” </p><p>“送我几天时间吧。” </p><p>儿子抬头静静地看着父亲。 </p><p>“你有你的事业，我很高兴。但做父亲的想让儿子了解自己的事业，这总不算过分吧！明天你和我一起去看军事演习怎么样？” </p><p>庄宇笑着点点头，他很少笑的。 </p><p>这是本年度国内规模最大的一场演习。演习开始的前夜，庄宇对公路上那滚滚而过的钢铁洪流没什么兴趣，一下直升机，他就钻进野战帐篷，用透明胶带替父亲粘贴刚发下来的作战地图。在第二天在演习的整个过程中，庄宇也没表现出丝毫的兴趣，这早在十号的预料之中，但有一件事使他感到莫大的安慰。 </p><p>上午进行的演习项目是一个装甲师进攻一个高地，庄宇同一群地方官员一起坐在观摩台的北侧。这次观摩台的位置虽在安全距离上，但应那些猎奇的地方官员的要求，比过去大大靠前了。轰12机群掠过高地上空，重磅航空炸弹雨点般地落下，使那座山头变成一个喷发的火山口。这时，那群地方官员才明白真实战场同电影里的区别，在那地动山摇的巨响中，他们全都用双臂抱住脑袋伏在桌子上，有几位女士甚至尖叫着住桌子下钻。但十号看到，那里只有庄宇一个人仍直直坐着，仍是那付冷漠的表情，静静地无动于衷有看着那座可怕的火山，任爆炸的火光在他的墨镜中狂闪。这时，一股暖流冲击着十号的心田，儿子，你的身上到底流着军人的血啊！ </p><p>这天晚上，父子俩在白天的演习现场散步，远处，各种装甲车辆的前灯如繁星撒满山谷和平原，空气中还残留着淡淡的销烟味。 </p><p>“这场演习要花多少钱？”庄宇问。 </p><p>“直接费用大约三个亿。” </p><p>庄宇叹了口气：“我们的课题组，想搞第三代恒星演化模型，申请了三十五万经费都批不下来。” </p><p>十号把他早就想对儿子说的话说了出来：“我们两个的世界相差太远了，你的恒星，最近的也有4光年吧，它同地球上的军队与战争真是毫不相干。我对你的事业知之不多，但很为之感到骄傲；做为军人，我们也是最想让儿子了解自己事业的人，哪一个父亲不把对儿子讲述自己的戎马生涯当做最大的幸福？而你对我的事业却总抱着一种冷漠的态度。事实上，我的事业是你的事业的基础和保障，一个国家，如果没有足够数量和质量的武装力量保证它的和平的话，象你从事的这种纯基础研究根本不可能进行。” </p><p>“爸爸，你把事情说反了。如果人们都象我们这样，用全部的生命去探索宇宙的话，他们就能领略到宇宙的美，它的宏大和深远后面的美，而一个对宇宙和自然的内在美有深刻感觉的人，是不会去进行战争的。” </p><p>“你这种想法真是幼稚到家了，如果战争是因为人们缺乏美感造成的，那和平可太容易了！” </p><p>“您以为让人类感受这种美就那么容易吗？”庄宇指指夜空中灿烂的星海，“您看这些恒星，人们都知道它是美的，但有多少人能够真正体会到这种美的最深层呢？这无数的天体，它们从星云到黑洞的演化是那么壮丽，它们喷发的能量是那么巨大狂暴，但您知道吗？只用数量目不多的几个优美的方程式就能精确地描述这一切，用这些方程式建造的数学模型能极其精确地预言恒星的一切行为。甚至我们对自己星球上大气层的数学模型，精确度都要比它低几个数量级。” </p><p>十号点点头，“这是可能的，据说人类对月球的了解比对地球海底的了解还要多。但对你所说的宇宙和自然深层次美的感受还是制止不了战争，没有人比爱因斯坦更能感受这种美了，原子弹不还是在他的建议下造出来的吗？” </p><p>“爱因斯坦在他的后期研究中没什么建树，很大程度上是由于他过多地介入了政治。我不会走他的老路的。但，爸爸，到了需要的时候，我也会尽自己的责任的。” </p><p>庄宇在演习区域呆了五天，十号不知儿子是什么时候认识林云的，第一次看到他们在一起的时候，他们已经谈得很融洽了，他们谈恒星，而林云对此知道的很多。看着还是一个天真烂漫的女孩儿的林云，因为她的博士学位，早早就扛上了一颗校星，他的心里就多少有些别扭，不过除此之外，他对林云的印象还是很好的。第二次见到庄宇和林云在一起时，十号看到他们已有了一些亲密感，他们谈话的内容让他很意外：他们在谈电子战。当时他们俩在距十号的吉普车不远的一辆坦克边，由于谈话内容，他们并没有避开别人的意思。 </p><p>十号听到庄宇说：“你们现在只关注于一些纯软件的高层次的东西，比如C3I了，病毒攻击了，数字战场了等等，可你想到没有，你们可能握着一把木头做的剑。”，看着林云惊奇的目光，庄宇继续说：“你想过这些东西的基础吗，也就是位于网络七层协议最下面的物理层？对于民用网络，可以使用象光纤和定向激光这样一些东西做为通讯媒介；但对于用于战场的C3I系统，它的各个终端是快速移动和位置不定的，所以只能主要依赖电磁波来进行信息联结，而电磁波这东西，你知道，在干扰下象薄冰一样脆弱……” </p><p>十号真的吃惊不小，他从未与儿子交流过这些，庄宇更不可能偷看他的机密文件，但他却把自己在电子战上多年来形成的思想简明准确地表达出来！庄宇的这番话对林云的影响更大，居然使她偏离了自己的研究方向，研制出了一种代号“洪水”的电磁干扰装置。“洪水”的大小可以装入一辆装甲车，它能同时发出3KHZ到30GHZ的强烈的电磁干扰波，覆盖了除毫米波之外的所有电磁通讯波段。这种武器在西北某基地进行的第一次试验就为军队惹来了一屁股官司：“洪水”使附近那座西北大 </p><p>儿子爱上了一个军中的姑娘，十号深感意外，他的结论是庄宇对林云的感情同她的职业无关。后城市的电磁波通讯全部中断，手机不通了，传呼机不响了，电视机和收音机都收不到信号，对银行和股市的影响更是灾难性的，地方上把造成的损失说成了天文数字。“洪水”的灵感来自于一种电磁炸弹，这种武器是通过高爆炸药在一次性线圈中产生强烈的电磁脉冲。所以“洪水”工作起来如同火箭发动机一样，产生的音响震破了附近的窗玻璃，这就决定了它只能遥控操作，而距它二三千米处的操作人员还得穿上防微波辐射的防护服。“洪水”在总装备部和总参的电子战指挥机构引起了很大的争论，很多人认为它没什么实战价值，在有限战场上使用它，就如同在巷战中使用核武器，对敌我的杀伤力都一样大。但在十号的坚持下，“洪水”还是批量生产的二百多台。现在，在统帅部新的电子战战略中，它将担当主要角色。来庄宇带林云到家里来过几次，第一次林云穿着一件亮丽的连衣裙，走时十号听到庄宇对林云说：“下次穿军装来。”这事使十号否定了自己先前的结论，他现在知道，庄宇爱上林云，与她是一名少校军官并非一点关系也没有。他又感到了演习第一天上午的那种感受，林云肩上的那颗校星他现在也觉得无比美丽了。 </p><h2 id="第六章-京津战区"><a href="#第六章-京津战区" class="headerlink" title="第六章 京津战区"></a>第六章 京津战区</h2><p>1月6日，京津战区 </p><p>强烈的电磁波在战区上空很快聚集，最后形成了巨大的电磁台风。战后人们回忆，当时在远离前线的山村里，人们也看到动物和鸟儿骚动不安；在灯火管制的城市中，人们能看到电视天线上感应出的微小火花…… </p><p>从北线调住南线的A集团军的一个装甲团正在急速行军，团长站在停在路边的吉普车边，满意地看着漫天雪尘中急速行进的部队。敌人的空袭远没有预料的强度，所以部队可以在白天赶路了。这时，三枚战斧导弹低低地从他们头顶掠过，冲压发动机低沉的嗡嗡声清晰可闻。不一会儿，远处响起了三声爆炸。团长身边的通讯员拿着只沙沙声的耳机无事可做，转头看看爆炸的方向，然后惊叫起来，让他看，他让通讯员不要大惊小怪，但旁边的一位少校营长也让他看，他就看了，然后困惑地摇了摇头。战斧不是每枚都能命中目标，但象这样三枚各自相距上千米落到空无一物的田野上，真是少见。 </p><p>两架歼10孤独地飞行在战区5000米上空。他们本来属于一支歼10中队，但这个中队刚刚在海上同一支北约的F22中队发生了一场遭遇战，在空中混战中，他们和中队失散了。在以前，重新会合是轻而易举的事，但现在，无线电联络不通了，原来对于高速歼击机很狭小的空域现在在感觉上变得如宇宙一样广阔，要想会合如同大海捞针。这对长僚机只能紧贴着飞行，距离之近象在飞特技，只有这样，他们才能听到对方的无线电呼叫。 </p><p>“左上方发现可疑目标，方位220，仰角30！”僚机报告，长机飞行员沿那个方位看去，冬日雪后的晴空一碧如洗，能见度极好，两架飞机向斜上方靠近目标观察。那个目标与他们同一方向飞行，但速度慢了许多，所他们很快追上了它。 </p><p>当他们看清目标的形状后，真觉得白天见了鬼。那是一架北约的E-4A预警飞机，这是歼击机最不可能遇到的敌方飞机，就象一个人不可能看到自己的后脑勺一样。E-4A预警飞机上的雷达监视面积可达100万平方公里，环视一圈只需5秒钟，它能发现远离防区2000公里处的目标，可以提供40分钟以上的预警时间。能发现1000-2000公里范围里的800-1000个电磁信号，它的每次扫描可询问和识别2000个海陆空各类目标。预警机从不需护航，它强有力的千里眼可使自己远远地避开歼击机的威胁。所以长机飞行员理所当然地认为这可能是一个圈套。他和僚机向四周的空域仔细搜索了一遍，明净寒冷的空中看不到任何东西，长机决定冒一次险。 </p><p>“雷球雷球，我将发起攻击，你向317方位警戒，但注意不要超出目视距离！” </p><p>看着僚机向着他认为最可能有埋伏的方位飞去后，他打开加力，猛拉操纵杆，歼10拖着加速的黑烟，如一条仰起的眼镜蛇向斜上方的预警机扑去。这时E-4A也发现了向它逼近的威胁，它急忙向东南方向做逃脱的机动飞行，干扰热寻的导弹的镁热弹不断地从机尾蹦出，那一串小小的光球仿佛是它那被吓出壳的灵魂。一架预警飞机在歼击机面前就如同一辆自行车在摩托车面前一样，是无法逃脱的。这时长机飞行员才感到他刚才给僚机的命令是多么自私。他在E-4A的后上方远远跟着它，欣赏着到手的猎物。E-4A背上蓝白相间的雷达天线罩线条优美，象一件可人的圣诞玩具；它那粗大的白色机身，如同摆在盘子里的一支肥美的炖鸭，令他垂涎欲滴，又不忍下刀叉。但直觉使他不敢拖延，他首先用20毫米机炮做了一个点射，击碎了雷达天线罩，他看到，西屋公司制造的AN/PY-3型雷达的天线的碎片飞散在空中，如圣诞节银色的纸花；他接着用机炮切断了E-4A的一个机翼，最后，射速达每分钟6000发的双管机炮射出的死亡之鞭，从已经翻滚下坠的E-4A拦腰切过，把它击成两截。歼10沿着一条下降的盘旋线跟着两块坠落的机体，飞行员看到，人员和设备不停地从机舱中掉出来，就象从盒中掉出的糖果一样，有几朵伞花在空中绽开。他想起了在刚过去的空战中，一个战友被击落时的情景：一架F22三次从战友的降落伞上方掠过，把伞冲翻了，他看着战友象一块石头一样渐渐消失在大地的白色背景中。他克制了这样做的冲动，同僚机会合后，双机编队以最快的速度脱离这个空域。 </p><p>他们仍觉得这可能是个圈套。 </p><p>走散的飞机并不止那两架。在廊房战线的上空，一架隶属于美国陆军骑一师的“科曼奇”在漫无目标地飞着，驾驶员沃克中尉却倍感兴奋。他刚从“阿帕奇”转飞“科曼奇”不久，对这种上世纪未才大量装陆军的武装攻击直升机不太适应，他不适应“科曼奇”的没有脚踏的操纵系统，并觉得它的双目头盔瞄准镜还不如“阿帕奇”的单目镜让人感到舒服，但他最不适应的还是坐在前面的攻击指挥员哈尼上尉。他们第一次见面时，哈尼说：“中尉，你要清楚自己的位置，我是这架直升机的大脑，你只是它电子和机械部件的一部分，你要尽一个部件的责任！”而沃克最讨厌做为一个部件而存在。记得一位年近百岁的参加过二战的前海军飞行员参观他们的基地，他看了看“科曼奇”的座舱，摇摇头，“唉，孩子们，我当年那架野马式，座舱里的仪表还不如现在的微波炉上多，我最好的仪表是它！”他拍了拍沃克的屁股，“我们两代飞行员的区别，就是空中骑士和电脑操作员的区别。”沃克想当空中骑士，现在机会来了。在中国人那近乎变态的疯狂干扰下，这架直升机上的什么“作战任务设备一体化”系统、什么“目标探测系统”、什么“辅助目标探查分类系统”、什么“真实视觉场面发生器”、还有“资料突发系统“等等，全他妈妈的休克了！只剩下那两台1200马力的T800型引擎还在忠实地转动着。哈尼平时就是全凭那些电子玩艺儿活着的，现在他那张喋喋不休的臭嘴也随着这些东西沉默下来。这时，他听到了内部送话系统传来的哈尼的话音： </p><p>“注意，发现目标，好象在左前方，好象在那个小山包旁边，有一支装甲部队，好象是敌人的，你……看着办吧。” </p><p>沃克差点笑出声来，哈，这小子，听他以前是怎么指挥的：“发现目标，方位133，90式坦克17辆，89式运兵车21辆，向391方位以平均速度43。5公里运动，平均间间隔31。4米，按AJ041号优化攻击方案，从179方位以37度倾角进入……”现在呢：“好象”有有装甲部队，“好象”在“山包那边”，这他妈用你说？我早看见了！还让我看着办。你是废物了哈尼，现在是我的天下，我要用屁股当仪表做一个骑士了！这架“科曼奇”在我的手中将不辜负它那英勇的印第安部落的名字。 </p><p>“科曼奇”向着那显而易见的目标冲去，把机上的62枚27。5英寸的蜂巢火箭全部发射出去，沃克陶醉地看着他那群拖着着火尾小蜜蜂欢快地向目标飞去，把敌人的车队淹没于一片火海之中。但当他迂回飞行观察战果时却发现事情不对，地面上敌人的士兵没有隐蔽，而是全都站在雪地上冲他指点着，象是在破口大骂；沃克飞近一些，清楚地看到了一辆被击毁的装甲车上的那个标志，那是个三环同心圆，中间是蓝色，然后是一个白圈儿和一个红圈儿。沃克眼前一黑，感到世界变成了地狱，他也破口大骂起来： </p><p>“你个狗娘养的白痴，你瞎眼了？！” </p><p>但他还是聪明地远远飞开，以防那些暴怒的法国佬还击。“你个狗娘养的，你现在大概在想到军事法庭上怎样把责任推给我，你推不掉的，你是负责目标甄别的，你要明白这一点！” </p><p>“也许……我们还有机会补救，”哈尼怯生生地说，“我又发现了一支部队，就在对面……” </p><p>“去你妈的吧！”沃克没好气地说。 </p><p>“这次没错，他们正在同法国人交火！” </p><p>这下沃克又来了精神，他驾机向新目标冲去，看到对方主要是步兵，装甲力量不多，这倒证实了合尼的判断。沃克把仅剩的四枚“地狱火”导弹发射出去，然后把加特林双管机枪的射速调到每分钟1500并开始射击，他舒服地感觉到机枪通过机体传来的微微振动，看到地面敌人的散兵线被撒上了一层白色的“胡椒面”。但一名老练的武装直升机驾驶员的直觉告诉他有危险，他扭头一看，只见一枚肩射导弹刚刚从左下方一名站在吉普车上的士兵肩上发射出来。沃克手忙脚乱地发射了诱铒镁热弹，又向后方做摆脱飞行，但晚了些，那枚导弹拖着蛛丝般的白烟击中了“科曼奇”的机头下方。沃克从爆炸带来的短暂的昏眩中醒来时，发现直升机已坠落到雪地上。沃克拚命爬出全是白烟的机舱，在雪地上抱住一棵刚被螺旋桨齐腰砍断的树，回头看见前舱中被炸成肉浆的哈尼上尉。他又看到前方一群端着冲锋枪的士兵正在向他跑来，他们东方人的面孔清晰可见。沃克颤抖着掏出手枪放到面前的雪地上，然后掏出会话本读了起来： </p><p>“吾已方下无起，吾是战扶，日内瓦……” </p><p>他后脑挨了一枪托，肚子上又挨了一脚，当他翻倒在雪地上时却大笑起来，他可能被揍个半死，但不会全死，他看到了那些东方士兵衣领上日本自卫队的标志。 </p><h2 id="第七章-“小鹰号”航母"><a href="#第七章-“小鹰号”航母" class="headerlink" title="第七章 “小鹰号”航母"></a>第七章 “小鹰号”航母</h2><p>1月7日，渤海湾，“小鹰”号航母战斗群，北约远征军作战指挥中心 </p><p>“把那个该死的军医叫来！”托尼．帕克上将烦燥地喊到，当那名细长的上校军医跑到他面前时，他恼怒地说：“怎么搞的？你折腾了两次，我的假牙还在嗡嗡响！” </p><p>“将军，这是我见过的最奇怪的事，也许是您的神经系统有问题，要不我给您打一针局部麻醉？” </p><p>这时，一位少校参谋走过来说：“将军，请把假牙给我，我有办法的。”帕克于是取下假牙，放到了少校递过来的纸巾上。 </p><p>关于将军掉的两颗门牙，媒体的普遍说法是在波斯湾战争中他所在的坦克被击中时造成的，只有将军自己知道这不是真的。那次是断了下鄂，牙则是更早些时候掉的。那是在克拉克空军基地，当时的世界好象除了火山灰外什么都没有：天是灰的地是灰的空气也是灰的，就连他和基地最后一批人员将要登上的那架“大力神”，机顶上也落了厚厚白白的一层。火山岩桨的暗红色火光在这灰色的深处时隐时现。那个菲律宾女职员还是找来了，说基地没了，她失业了，房子也压在火山灰下，让她和肚子里的孩子怎么活？她拉着他求他一定带她到美国去，他告诉她这不可能，于是她脱下高跟鞋朝他脸上打，打掉了他的两颗门牙。看着灰色的海水，帕克默念：我的孩子，现在你在那儿？你是和母亲在马尼拉的贫民窑中度日吗？你的父亲又回到东方来了，他现在在某种程度上是这你而战，战后，苏比克和克拉克将重新成为美国在太平洋上的海空军基地，那里将比上个世纪更繁荣，你会在那儿找到工作的！如果你是个女孩，说不定象你妈妈（她叫什么来着，哦，阿莲娜）一样能认识个美国军官……最重要的是，这场战争还将带给你的国家一个美妙的礼物，那是你们早就想要的东西：南中国海上那些美丽的岛屿。我曾从空中看到过她们，雪白的珊瑚围着棕色的沙地，象是蓝色大海上一双双眼睛，孩子，那是爸爸的眼睛…… </p><p>那位修牙的少校回来了，打断了将军的胡思乱想，将军拿过了那个纸巾上的假牙，装上感觉了几秒后惊奇地看着少校：“嗯？你是怎么做到的？” </p><p>“将军，您的假牙响是因为它对电磁波产生了共振。” </p><p>将军盯着少校，分明不相信他的话。 </p><p>“将军，真是这样！也许您以前也曾暴露在强烈的电磁波下，比如在雷达的照射范围里，但那些电磁波的频率同您的假牙的固有频率不吻合。而现在，空中所有频带的电磁波都很强烈，于是产生了这种情况。我把假牙进行了一些加工，使它的共振频率提高了许多，它现在仍然共振，但您感觉不到了。” </p><p>少校离开后，帕克将军的目光落到了电子作战图旁的一个座钟上，钟座是骑着大象的汉尼拔塑像，上面刻着战必胜三个字，原来它摆放在白宫的蓝厅，当时总统发现他的目光总落在那玩艺上，就亲自拿起了那个在那儿放了一百多年的钟赠给了他。 </p><p>“上帝保佑美国，将军，现在您就是上帝！” </p><p>帕克沉思了很久，缓缓地说：“命令全线停止进攻，用全部空中力量搜寻并摧毁中国人的干扰源。” </p><p>1月8日，中国人民解放军总参谋部 </p><p>“敌人停止进攻了，你好象并不感到高兴。”十号对刚从前线归来的A集团军军长说。 </p><p>“是高兴不起来，北约的全部空中力量已集中打击我们的干扰部队，这种打击确实是很奏效的。” </p><p>“这在我们的预料之中。”十号平静地说，“我们的战略好象在一个武林高手面前无套路地乱打一通，这开始会使他手足无措，但他总会想出对付的办法的。用于阻塞式干扰的干扰机，由于其强烈的全频道发射，很容易被探测和摧毁。好在我们已争取了相当的时间，现在全部希望都寄托在西北集群的快速集结上了。” </p><p>“情况可能比预想的严峻”A集团军军长说，“在我们失去电子战优势之前，可能没有给西北集群进入出击位置留下足够的时间。” </p><p>A集团军军长走后，十号看着电子沙盘上的前线地形，想起了正处于敌人密集火力下的林云，由此又想起了庄宇。那天，庄宇回到家里，脸上青一块紫一块的。这之前他已听到传言，说他儿子是那所名牌大学中唯一的一名反战分子，结果被学生们打了。 </p><p>“我只是说不要轻言战争。”庄宇对父亲解释说。 </p><p>十号用他从未有过的严厉对儿子说：“你知道自己的位置，你可以不说话，但以后绝不许出现类似的言行。” </p><p>庄宇点点头。 </p><p>晚上一进家门，十号就告诉庄宇：“俄罗斯杜波列夫极右政府上台了。” </p><p>庄宇看了父亲一眼，淡淡地说：“吃饭吧。” </p><p>几天后，十号在晚饭前又说：“俄罗斯加入北约了。”儿子又用那种平静的目光看了父亲一眼，然后两人默默地吃饭。 </p><p>再往后，朝鲜半岛战争爆发，南中国海和中印边境冲突，十号都不需要告诉庄宇了，父子俩每天晚上都象往常一样默默地吃饭，直到有一天，庄宇接航天基地的通知，打起行装走了。两天后，他乘航天飞机登上了在近地轨道运行的“万年炎帝”号。 </p><p>又过了一周，战争全面爆发了，这是一场由空前强大的敌人从预料不到的方向发起的，旨在彻底毁灭共和国的全面战争。 </p><p>1月9日，近日轨道，“万年炎帝”号掠过水星 </p><p>由于“万年炎帝”号的速度很快，它不可能成为水星的卫星，只能从这颗行星面对太阳的那一面高速掠过。这是人类第一次用肉眼直接对水星表面进行近距离观察。庄宇看到，水星表面高达两公里的峭壁，弯延数百公里，穿过布满巨大坑穴的平原。他还看到了被行星地质学家们称做“不可思议的地形”的名叫“卡托里萨”的盆地，它的直径有1300公里。它的不可思议之处在于，在水星的另一面，有一个面积相仿的盆地正对着它，人们猜测，这是一颗巨大的慧星撞击了水星，强烈的震波穿过了整个星体，在两个半球同时形成了极其相似的两个盆地。庄宇还发现了许多新的令人激动的东西，他发现水星表面有许多明亮的光斑，当他在屏幕上把那些光斑放大后，激动得屏住了呼吸。 </p><p>那是水星上的水银湖泊，它们的每个的面积平均达上千平方公里。 </p><p>庄宇想象，在水星那漫长的白天，在那1800℃的酷热下，站在水银湖岸边的情形。即使在狂风中，水银湖也会很平静，而水星没有大气，没有风，湖的表面如广阔的镜子平原，太阳和银河毫不失真地投射在上面。 </p><p>“万年炎帝”号掠过水星后，将继续靠近太阳，一直航行到它那由核聚变制冷装置支持的绝热层所能忍受的极限距离。太阳的高温将是它最好的掩护，北约的任何太空航行器都不可能飞进这个酷热的地狱。 </p><p>看看这广阔的宇宙，再想想那一亿公里之外的母亲星球上的战争，庄宇再次哀叹人类目光的狭隘。 </p><h2 id="第八章-绝美的生命之花"><a href="#第八章-绝美的生命之花" class="headerlink" title="第八章 绝美的生命之花"></a>第八章 绝美的生命之花</h2><p>1月10日，廊房前线 </p><p>看着敌人渐渐靠近的散兵线，林云明白了为什么当周围的干扰点相继被摧毁后，只有她这里幸存下来：敌人想夺取一台完整的“洪水”。 </p><p>这只由三架“科曼奇”和四架“黑鹰”组成的直升机群轻而易举地发现了这台“洪水”的位置。由于“洪水”巨大的电磁发射，对它的遥控只能通过光缆，这又使敌人顺着光缆的走向发现了林云所在的，距那台“洪水”3000米的遥控站，这是一间被废弃的孤立的小库房。 </p><p>那四架运载着四十多名敌人步兵的“黑鹰”就在距库房不到二百米处降落了。当时遥控站中除林云之外还有一名上尉和一名上士。上士听到引擎声响刚拉开库房的门，就被直升机上的狙击手射出的一颗子弹掀开了头盖骨。敌人随后的火力很谨慎也很节制，显然怕伤了库房里的他们想得到的设备，这就使得林云和那名上尉多坚守了一段时间。 </p><p>现在，在林云的左前方，上尉的冲锋枪声沉默了，这枪声是她这是唯一的安慰。她看到在那个做为掩体的树桩后面，上尉的身体一动不动，一圈殷红的鲜血正在他周围的雪地上扩散。林云现在在库房前由几个沙袋堆成的简易掩体后面，她的脚下散落着八个冲锋枪弹夹，滚烫的枪管在沙袋上面的积雪中发出嘶嘶的声音。每当林云射击时，对面的敌人就卧倒，子弹在他们前面溅起一团团雪花，而半圆形包围圈另一个方向的敌人则跃起快步推进一段距离。现在，林云只剩下三个弹夹了，她开始打单发，这没有经验的的举动等于告诉敌人她子弹不多了，使他们更快更大胆地推进。当林云再次换弹夹时，她听到沙袋顶上厚厚的积雪吱地响了一声，有什么东西从中飞快地钻了过来，她感到右胁被什么猛推了一下，没有疼痛，只有一阵很快扩散的麻木感，她感到温热的血顺着右侧身体流下去。她坚持着，几乎是漫无目标地打完了这个弹夹。当她伸手拿起沙袋顶上最后一个弹夹时，一颗子弹打断了她的前臂，弹夹掉到雪地上，只剩下一条皮肤相连的手臂来回摆动。林云站起身，回头向库房门走去，她身后的雪地上留下了一条细细的血迹。当她拉开门时，又一颗子弹穿透了她的左肩。 </p><p>这支由瑞特。唐纳森上尉率领的美国海军陆战队“海豹”突击队的一支小分队，谨慎地靠近库房。当唐纳森和两名陆战队员越过那名中国中士的尸体，踹开门冲进帐篷时，发现里面只有一名年轻女军官。她坐在他们的目标——“洪水”遥控仪旁边，一支被打断的手臂无力地垂的控制台上，对着显示屏上映出的影子，她用另一支手整理着自己的头发，不断滴下的鲜血在她的脚下积成了小小的血洼。她对着冲进来的美国人和那一排枪口笑了一下，算是打了招呼。唐纳森长出了一口气，但这口出来的气再也没有吸回去：他看到她整理头发的手从控制仪上拿起了一个墨绿色长圆形的东西，把它悬在半空中。唐纳森立刻认为了那是一枚气体炸弹，由于是装备武装直升机的，体积很小。那东西由激光近炸信引爆，在距地面半米处发生两次爆炸，第一次扩散气体炸药，第二次引爆炸药雾，他现在就是一支箭也飞不出它的威力圈。 </p><p>他朝她伸出一支手向下压着，“镇静，少校，镇静下来，不要激动，”他朝周围示意了一下，陆战队员们的枪口垂了下来，“您听我说，事情没您想的那么严重，您将得到最好的医疗，您将被送到冲绳最好的医院，然后，会做为第一批交换的战俘……”少校又对他笑了一下，这使他多少受到了一些鼓励，“您完全没必要采用这么野蛮的方式，这是一场文明的战争，它本来是会很顺利的，这一点在几天前登陆时我就感觉到了。当时岸上大部分的火力都被摧毁，只有零星的机枪声恰到好处地点缀着我们这场光荣而浪漫的远征，您看，一切都会很顺利的，没必要……” </p><p>“我还知道另一次更美妙的登陆，”少校用纯正的英语说，她轻柔的声音如来自天堂，能让钢铁变软，“美丽的沙滩，有棕榈树，树上挂着欢迎的横幅；到处是漂亮的姑娘，留着齐腰的长发，穿着沙沙做响的丝裤，在年轻的士兵群中移动，用红色和粉红色的花环装点着他们，并羞怯地对着目瞪口呆的士兵们微笑……上尉，您知道这次登陆吗？” </p><p>唐纳森困惑地摇摇头。 </p><p>“这就是1965年3月8日上午9点，在岘港，美国首批海军陆战队登上越南的土地情景，也是越战的开端。” </p><p>唐纳森觉得自己一下子掉进了冰窟窿，刚才的镇静瞬间消失了，他的呼吸急促起来，声音开始颤抖，“不，别这样少校，你这样对待我们是不公平的！我们没有杀过多少人，杀人的是他们，”他指着窗外半空中悬停着的直升机说，“是那些飞行员们，还有那些在很远的航空母舰上操作电脑指引巡航导弹的先生们，但他们也都是些体面的先生，他们所面对的目标都是屏幕上漂亮的彩色标记，他们按了一下按钮或动一下鼠标，耐心地等一会儿，那些标志就消失了，他们都是文明的先生，他们没有恶意，真的没有恶意……你在听我说吗？” </p><p>少校笑着点点头，谁说死神是丑恶恐怖的，死神真美。 </p><p>“我有一个女朋友，她在马里兰大学读书，她象您一样美丽，真的，她还参加反战游行……”我真该听她的，唐纳森想，“您在听我说吗？您也说点什么吧，求求您说点什么……” </p><p>美丽的少校最后对敌人微笑了一次，“上尉，我尽责任。” </p><p>赶来增援的C集团军第三师的一支部队这时距那个“洪水”遥控站还有半公里距离，他们首先听到了一声沉闷的爆炸，并远远看到那间孤立在宽阔田野中的小库房隐没于一团白雾之中；紧接着是一声比刚才响百倍的巨响，地动山摇，一团巨大的火球在库房的位置出现，火焰裹在黑色的浓烟中的高高升起，化做一团高耸的磨菇云，如绽放在天地之间的的一朵绝美的生命之花。 </p><h2 id="第九章-上古时代的战歌"><a href="#第九章-上古时代的战歌" class="headerlink" title="第九章 上古时代的战歌"></a>第九章 上古时代的战歌</h2><p>1月11日，中国人民解放军总参谋部 </p><p>“这就是你的出击方案？！”十号指着大屏幕上的战役设想图，生气地对西北集群司令说，这是自战争爆发以来人们看到他发的最大的火，“从保定一线向北出击，只不过是加强北京的防御，对南线之敌构不成致命打击，你们这么远跑来，花了这么长时间集结，就是来擦屁股搔痒痒的？！” </p><p>“我们也想沿安新、霸县一线出击，越过天津，打击敌人后方的登陆区。但这个方案已达不成战役的突然性，现在甚至连西方的新闻报道都在大谈这个最佳打击方向，包围天津的美82空降师，英国的一个装甲旅和日本自卫队的一个团已向霸县方向移动阻击我们。” </p><p>“这么点兵力，最多形成十公里的阻击正面，你们可以绕过去，即使强攻，你们也占绝对优势。” </p><p>“我是担心时间。敌人在沧洲构筑的防线，受到敌人来自海上远程火力的支持，如果不能在短时间内突破，现在已经很困难的廊房防线就会崩溃，北约力量就可能从北京两侧迂回以同北线的俄军会合，这样我华北和西北两集群就无法对南线之敌构成夹击态势。” </p><p>“我知道你想要什么东西，别费话，要吧！”十号手一挥说。 </p><p>“我想让前两天的战场电磁条件再持续4天。” </p><p>“你清楚，我们的战场干扰部队现在有百分之七十已被摧毁，我现在连4个小时都无法给你了！” </p><p>统帅部最后决定按第二方案出击。 </p><p>在走出地下作战室的途中，西北集群司令在心里默念：廊房，坚持啊！ </p><p>1月12日，廊房防线 </p><p>A集团军第2师师长清楚，他们的阵地最多只能再承受一次进攻了。 </p><p>敌人的空中打击和来自海上的远程打击渐渐猛烈起来，而我军的空中掩护却越来越少了。这个师的装甲力量和武装直升机都所剩无几，这最后的坚守几乎全靠血肉之躯了。 </p><p>师长拖着被弹片削断的腿，拄着一支步枪走出掩蔽部。他看到战壕挖得不深，这也难怪，现在阵地上大部分都是伤员了。但他惊奇地发现，在战壕的前面构起了一道整齐的约半米高的胸墙。师长很奇怪这胸墙是用什么材料这么快筑起，他看到被雪覆盖的胸墙上伸出几条树枝一样的东西，走近一看，那是一支支惨白僵硬的手臂……他勃然大怒，一把抓住一位上校团长的衣领。 </p><p>“混蛋！谁让你们用战士的尸体筑掩体的？！” </p><p>“是我命令这样干的。”政委的声音从师长身后平静地响起，“昨天晚上进入新阵地太快，这里又是一片农田，实在没有什么别的材料了。” </p><p>他们沉默相视着，政委从额头绷带上流出的血在脸上一道道地冻结了。这样过了一会，他们两人沿战壕慢慢地走去，沿着这堵用青春和生命筑成的胸墙走去。师长的左手拄着做拐杖的步枪，右手扶正了钢盔，向着胸墙行军礼，他们在最后一次检阅自己的部队……他们路过了一个被炸断双腿的小战士，从断腿中流出的血把下面的雪和土混成了红黑色的泥，这泥的表面现在又冻住了。他正躺着把一颗反坦克手雷往自己怀里放，抬起没有血色的脸，他朝师长笑了笑，“我要把这玩艺儿塞进艾布拉姆斯的覆带里。” </p><p>寒风卷起道道雪雾，发出凄厉的啸声，仿佛在奏着一首上古时代的战歌。 </p><p>“政委，如果我比你先阵亡，请你也把我砌进这道墙里，这确实是一个好归宿。”师长说。 </p><p>“我们两个不会相差太长时间的。”政委用他那特有的平静说。 </p><h2 id="第十章-美丽的日珥"><a href="#第十章-美丽的日珥" class="headerlink" title="第十章 美丽的日珥"></a>第十章 美丽的日珥</h2><p>1月12日，中国人民解放军总参谋部 </p><p>一个参谋来告诉十号，航天工业部部长急着要见他，事情很紧急，是有关庄宇和电子战的事。 </p><p>听到儿子的名字，十号心里一震。他已知道了林云阵亡的消息，同时他也无法想象一亿公里之外的庄宇同电子战有什么关系，他甚至想象不出庄宇现在和地球什么关系。 </p><p>部长一行人走了进来，他没有多说话，把一片3寸光盘递给了十号，“将军，这是我们一小时前收到的庄宇从‘万年炎帝’号上发回的信息，后来他又补充说，这不是私人信息，希望您能当着所有有关人员的面播放它。” </p><p>作战室中的所有人听着来自一亿公里以外的声音：“爸爸，我从收到的战争新闻中得知，如果电磁干扰不能再持续三到四天的话，我们可能输掉这场战争。如果这是真的，我能给您这段时间。” </p><p>“以前，您总认为我所研究的恒星与现实相距太远，我自己也是这么认为，现在看来我们都错了。我记得对您提起过，恒星产生的能量虽然巨大，但它本身却是一个相对单纯和简单的系统。比如我们的太阳，组成它的只是两种最简单的元素：氢和氦；它的运行也只是由核聚变和引力平衡两种机制构成，这样，同我们的地球相比，它的运行状态在数学模型上就比较容易把握了。现在，对太阳的研究已经建立了十分精确的太阳数学模型，这中也有我做的工作。通过这个数学模型，我们可以对太阳的行为做出十分精确的预测。这就使我们可以利用一个微小的扰动，在短时间内局部打破太阳运行的某种平衡。方法很简单：用‘万年炎帝’精确撞击太阳表面的某点。” </p><p>“爸爸，也许您认为，这不过是把一块小石头投入海洋，但事实不是这样，这是一粒沙子掉进了眼睛！” </p><p>“从数学模型中我们得知，太阳是一个极其精细和敏感的能量平衡系统，如果计算得当，一个微小的扰动就能在太阳表面和相当的深度产生连锁反应，这种反应扩散开来，使其局部平衡被打破。历史上有过这样的先例：最近的记载是在1972年8月初，在太阳表面一个很小的区域发生了一次剧烈的爆发，这次爆发引起了对地球产生巨大影响的一次电磁爆，飞机和轮船上的罗盘指针胡乱跳动，远距离无线电通讯中断，在北极地区，夜空中闪动着眩目的红光，在乡村，电灯时亮时灭，如同处于雷暴的中心，这种效应在当时持续了一个多星期。现在比较可信的一种解释是：当时一颗比‘万年炎帝’号还小的天体撞击了太阳表面。这样的太阳表面平衡扰动在历史上一定多次发生，但它大部分发生在人类发明无线电接收装置以前，所以没被察觉。这些对太阳表面的撞击都是随机的偶然的，因而它们所能产生的平衡扰动在强度和范围上都是有限的。” </p><p>“但‘万年炎帝’号对太阳的撞击点是经过精确计算的，它所产生的扰动比上面提到的自然产生的扰动要大几个数量级。这次扰动将使太阳向空间喷发出强烈的电磁辐射，这种辐射包括从极低频到甚高频的所有频带的电磁波。同时，太阳射出的强烈的X射线将猛烈撞击对于短波通讯十分重要的电离层，从而改变电离层的性质，使通讯中断。在扰动发生时，地球表面除毫米波外的绝大部分无线电通讯将中断。这种效应在晚上可能相对弱一些，但在白天甚至超过了你们前两天进行的电磁干扰。据计算，这次扰动大约可持续一周。” </p><p>“爸爸，以前我们两个人一直生活在相距遥远的两个世界中，我们互相交流很少。但现在，我们这两个世界溶为一体，我们在为一个共同的目标而战，我为此自豪。爸爸，象您的每一个战士一样，我在等着您的命令。” </p><p>航天部长说：“庄博士所说的都是事实。去年，我们向太阳发射过一个探测器，它依据数学模型的计算对太阳表面进行了一次小型的撞击试验，证实了模型所预言的扰动。庄博士和他的研究小组还提出了一个设想：将来也许可以用这种方法适当改变地球的气候。” </p><p>十号走进了一个小隔间，拿起了一个直通国家最高领导人的红色电话，过了不一会儿，他就从隔间走了出来。历史对这一时刻的记载是不同的，有人说他马上说出了那句话，也有人说他沉默了一分钟之久，但那句话是肯定的。 </p><p>“告诉庄宇，照他说的去做吧。” </p><p>1月12日，近日轨道，“万年炎帝”号冲向太阳 </p><p>“万年炎帝”号的十台核聚变发动机全部打开，每台发动机的喷口都喷出了长达上百公里的等离子体射流，它在做最后在轨道和姿态修正。 </p><p>在“万年炎帝”号的正前方，有一道巨大的美丽的日珥，那是从太阳表面盘旋而上的灼热的氢气气流，它象一条长长的轻纱，飘浮在太阳火的海洋上空，梦纪般地变幻着形状和姿态，它的两端都连着日球表面，形成了一座巨大的拱门。“万年炎帝”号从这高达四十万公里的凯旋门正中缓缓地、庄严地通过。前方又出现了几道日珥，它们只有一头同太阳相连，另一头伸进了太空深处。发动机闪着蓝光的“万年炎帝”号，象穿行在几棵大火树中的一只小小的荧火虫。后来，那蓝光渐渐熄灭，发动机停止了，“万年炎帝”号的轨道已精确设定，剩下的一切都将由万有引力定律来完成了。 </p><p>当飞船进入了太阳的上层大气日冕时，上方太空黑色的背景变成了紫红色，这紫红色的辉光弥漫了这里的所有空间。在下方，可以清楚地看到太阳色球中的景象，在那里，成千上万的针状体在闪闪发光，那些东西在19世纪就被天文学家们观察到了，它们是从太阳表面射向高空的发光的气体射流，这些射流使得太阳大气看上去象一片燃烧的大草原，每棵草都有上千公里长。在这燃烧的大草原下面就是太阳的光球，那是无边无际的火的海洋。 </p><p>从“万年炎帝”号发回的最后的图像中，人们看到庄宇从巨大的监视屏前起身，按钮打开了透明穹顶外面的防护罩，壮丽的火的大洋展现在他面前，他想亲眼看看他童年梦幻中的世界。火之海在抖动变形，那是半米厚的绝热玻璃在熔化，很快那上百米高的玻璃壁化做一片透明的液体滚落下来。象一个初见海洋的人陶醉地面对海风，庄宇伸开双臂迎接那向他呼啸而来的6000度的飓风。在摄象机和发射设备被烧熔之前发回的最后几秒钟图象中，可以看到庄宇的身体燃烧起来，最后他的整个身体都变成了一根跳动的火炬，和太阳的火海融为一体…… </p><p>接下来的景象只能猜想了：“万年炎帝”号的太阳能电池板和突出结构将首先熔化，这些熔化的部分由于其表面张力在飞船的表面形成一个个银色的小球。当“万年炎帝”号越过了色球和日冕的交界处时，它的主体开始熔化，当它深入色球2000公里后，整个色球完全熔化了。一个个分开的金属液珠合并成一个巨大的银色液球，它精确地沿着那已化为液体的计算机所设定的目标高速飞去。太阳大气的作用开始显示，液球的周围出现了一圈淡蓝色的火焰，这火焰向后拖了几百公里长，颜色向后由淡蓝渐变为黄色，在尾部变成美丽的桔红色。最后，这美丽的火凤凰消失在浩淼的火海之中。 </p><p>1月13日，地球 </p><p>人类回到了马可尼之前的世界。 </p><p>入夜，即使在赤道地区，夜空也充满了涌动的极光。 </p><p>面对着一片雪花的电视屏幕，大多数人只能猜测和想象那块激战中的大陆的情形。 </p><p>1月13日，溏沽前线 </p><p>帕克将军推开了企图把他拉上直升机的82空降师的师长和几名前线指挥官，举起望远镜继续看着远方，那里，中国人的阵线滚滚而来。 </p><p>“定标4000米，9号弹药装填，缓发引信，放！” </p><p>从来自在后方的射击声帕克知道，还有不到三十门105毫米的榴弹炮可以射击，这是他目前唯一可以用于防守的重武器了。 </p><p>一小时前，这个阵地上唯一的一只装甲力量，日本自卫队的一个坦克营，以令人钦佩的勇气发起反冲锋，并取得了优秀的战果：在距此八公里处击毁了相当于他们坦克数目一倍半的中国坦克。但由于数量上的绝对劣势，他们在中国人的钢铁洪流面前如正午太阳下的露珠一样消失了。只有一辆日本坦克拖着黑烟和烈火回到了阵地前。一名年轻的中校从坦克里钻出来，他摘下坦克帽，面向东方跪下，拉开烧焦的衣服露出腹部，然后抽出一把伞兵刀，并用一块白手帕擦那把刀，同时向阵地这边看了看。阵地上的美国人用冰冷冷但饶有兴趣的目光看着他。他双手倒举伞兵刀大叫一声，但在最后1秒胆怯了，刀插进了雪地里。他掏出手枪向嘴里开了一枪，然后躺在雪地上挣扎着，用脑浆和鲜血在白雪上画出了一幅奇怪的图形，最后用手进雪里，抓着中国的土地死去了。 </p><p>“定标3500米，放！” </p><p>炮弹飞行的嘶鸣声过后，在中国人的坦克阵前面掀起了一道由泥土和火焰构成的高墙。但就如同洪水面前的一道塌方一样，塌下的泥土暂时挡住了洪水，洪水最终还是漫了过来。爆炸激起的泥土落下后，中国人的装甲前锋又在浓烟中显现出来。帕克看到他们的编队十分密集，如同在接受检阅。如在前几天用这种队形进攻是自取灭亡，但在现在，当北约的空中和远程打击火力几乎全部瘫痪的情况下，这却是一种可以采用的队形，它可以最大限度地集中装甲攻击力量，以确保在战线一点上的突破。 </p><p>滩头环形防线配置的失误是在帕克将军预料之中的，因为在这样的战场电磁条件下，要想准确快速地判明敌人的主攻方向几乎是不可能的。对下一步的防守他心中一片茫然，在C3I系统全而瘫痪的情况下，快速调整防御布局是十分困难的。 </p><p>“定标3000米，放！” </p><p>“将军，您在找我？”法军司令若斯凯尔中将走了过来。他身边只跟着一名法军中校和一名直升机驾驶员。他没穿迷彩服，胸前的勋表和肩上的将星擦得亮亮的，但却戴着钢盔并提着一支步枪，显得不伦不类。 </p><p>“听说在我们的左翼，幼鹿师正在撤出阵地。” </p><p>“是的将军。” </p><p>“若斯凯尔将军，在我们的身后，70万北约部队正在登船，这次滩头撤退的规模比敦克尔克大三倍，它的成功取决于我们的坚固防守！” </p><p>“是取决于你们的坚固防守。” </p><p>“我能得到更明白的说明吗？” </p><p>“您什么都明白！你们对我们隐瞒了真实战局，你们早就知道俄罗斯要在北线单方面停火。” </p><p>“做为北约远征军最高指挥官，我有权这样做。将军，我想您也明白，您和您的部队有接受指挥的职责。” </p><p>…… </p><p>“定标2500米，放！” </p><p>…… </p><p>“我只遵守法兰西共和国总统的命令。” </p><p>“我不相信现在您能收到这样的命令。” </p><p>“几个月前就收到了，在爱丽舍宫的国庆招待会上，总统亲自向我说明了在这种情况下法国军队的行为准则。” </p><p>“你们这些戴高乐的杂种，这几十年来你们一直没变！[注2]”帕克终于失去控制。 </p><p>“话别说得这么难听，将军，如果您不走，我也一个人留下来，我们一起光荣地战死在这东方的土地上。”若斯凯尔向帕克挥动着那支FAMS法军制式步枪说。 </p><p>…… </p><p>“定标2000米，放！” </p><p>…… </p><p>帕克慢慢地转过身来，面对着他面前的一群前线指挥官，“请你们向坚守阵地的美军部队传达我下面的话：我们并非生来就是一支只能靠电脑才能打仗的军队，同对面的敌人一样，我们也来自一支庄稼汉的军队。几十年前，在瓜达卡那尔岛，我们在热带丛林中一个地洞一个地洞地同日本人争夺；在朝鲜的砥平里，我们用圆锹挡开中国人的手榴弹；更远一些的时候，在那个寒冷的冬夜，伟大的华盛顿领着那些没有鞋穿的士兵渡过冰封的特连顿河，创造了历史……” </p><p>“定标1500米，放！” </p><p>“我命令，销毁文件和非战斗辎重……” </p><p>“定标1200米，放！” </p><p>帕克将军戴上钢盔，穿上防弹衣，并把他那只9毫米手枪别在左腋下。这时榴弹炮的射击声沉默了，炮手正把手榴弹填进炮膛中，接着响起了一阵杂乱的爆炸声。 </p><p>“全体士兵，”帕克将军看着已象死亡屏障一样在他们面前展开的中国坦克群，说：“上刺刀！” </p><p>从战场的浓烟后面，太阳时隐时现，给血战中的雪野投上变幻的光影。 </p><p><em>注1：对这些电子战术语简介如下：跳频：发射机和接收机以同样的序列变换频率；直接序列扩频：使信号能量分散在很宽的频带上，以给侦听和干扰带来困难；零可控自适应天线：一种覆盖范围似肾形的天线，凹点指向天线无响应的敌方干扰机，以便在其它方向与已方天线通讯；猝发：短时间采用宽频带或长时间采用很窄频带发送信息；频率捷变：在遭到干扰时自动改频。</em> </p><p><em>注2：1966年戴高乐将军使法国退出北约军事一体化组织，这对当时冷战中的北约是一严重打击。</em></p><p>——全文完——</p>]]></content>
      
      
      <categories>
          
          <category> 刘慈欣 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 刘慈欣 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爱蒂塔计划</title>
      <link href="/posts/28b2f8f2.html"/>
      <url>/posts/28b2f8f2.html</url>
      
        <content type="html"><![CDATA[<p><em>“你身处黑暗。如果有人和你一起身处黑暗的话，你便不再孤独。但你想要继续孤独，因为你希望其他人都有光明。</em></p><p>​                                                                          ————-2023-10-12</p><h1 id="爱蒂塔计划衍生工程列表："><a href="#爱蒂塔计划衍生工程列表：" class="headerlink" title="爱蒂塔计划衍生工程列表："></a><strong>爱蒂塔计划衍生工程列表：</strong></h1><p><a href="https://scp-wiki-cn.wikidot.com/kfa#toc0">爱蒂塔计划衍生工程列表：</a></p><p><a href="https://scp-wiki-cn.wikidot.com/kfa#toc1">L字号工程Aidita-L Projects：</a></p><p><a href="https://scp-wiki-cn.wikidot.com/kfa#toc2">M字号工程Aidita-M Projects：</a></p><p><a href="https://scp-wiki-cn.wikidot.com/kfa#toc3">W字号工程Aidita-W Projects：</a></p><p><a href="https://scp-wiki-cn.wikidot.com/kfa#toc4">爱蒂塔科技列表：</a></p><p><a href="https://scp-wiki-cn.wikidot.com/kfa#toc5">KFA-01“爱蒂塔平行连接器”</a></p><p><a href="https://scp-wiki-cn.wikidot.com/kfa#toc6">KFA-11“平行世界牵引器”</a></p><p><a href="https://scp-wiki-cn.wikidot.com/kfa#toc7">KFA-16“时间加速气”</a></p><p><a href="https://scp-wiki-cn.wikidot.com/kfa#toc8">KFA-32 “爱蒂塔平行监视器”</a></p><p><a href="https://scp-wiki-cn.wikidot.com/kfa#toc9">KFA-77 “KQ-5人工神经网络模型”</a></p><blockquote><p>“爱蒂塔计划衍生工程”（又称“爱蒂塔计划附属工程”）即基于爱蒂塔计划或爱蒂塔科技展开的各类工程项目。</p><p>注意：该列表内所记录的不同技术所需的存取权限有所不同，当前权限无法存取的内容将会被自动锁定。</p></blockquote><h2 id="L字号工程Aidita-L-Projects："><a href="#L字号工程Aidita-L-Projects：" class="headerlink" title="L字号工程Aidita-L Projects："></a><strong>L字号工程Aidita-L Projects：</strong></h2><p><a href="javascript:;">- L字号衍生工程是以KFA为基础，借以KFA之力来重启基金会曾经由于技术难题而放弃计划的工程。</a></p><blockquote><p><strong>爱蒂塔L1工程（Aidita-L1）代号“故里Lar Hometown”（LH）（已废弃）：</strong></p><p><strong>概述：</strong></p><ul><li>由Site-CN-06爱蒂塔计划委员会通过，L1工程计划已提上日程。该工程旨在使用KFA建立一个高度自立的学术空间站。工程将分十五期完成，预计自提出至40年后可交付使用</li></ul><p><strong>获权使用的资源：</strong></p><ul><li>[已编辑]</li><li>对所有随行人员进行必要的医学改造，以满足宇宙生活需要。</li></ul><p><strong>过程报告：</strong></p><ul><li>[已编辑]</li></ul><p><strong>工程状态：</strong></p><ul><li>已结束。</li></ul></blockquote><hr><blockquote><p><strong>爱蒂塔L2工程（Aidita-L2）：代号“故里Lar Hometown’”（LH’）</strong></p><p><strong>概述：</strong></p><ul><li>该工程为L1计划的改进方案。</li><li>L2方案将于地下建造一个大型封闭设施，并将参加计划的人员进行记忆消除与诱导，使其认为该封闭设施为一个大型学术研究空间站。并在其中进行不受约束的研究。</li><li>该过程中将使用相应KFA来加速其内部的时间流速，以达到短时间内得到长耗时的研究成果的效果。</li><li>L2方案于Site-CN-06内部2号人防工程为建筑场所，建设符合原项目工程要求的设施设备，并重新安装相对应的模拟设备。</li></ul><p><strong>获权使用的资源：</strong></p><ul><li>为进一步缩小实验成本与增加其作为试做型设备实验场所的价值性，议会要求其搭载来源于爱蒂塔计划的爱蒂塔16号科技暨时空压缩/被动型现实稳定设备。</li></ul><!----><ul><li>允许使用资金允许范围内的结构加强/空间稳定措施，确保项目的罩壳能承受全盘模拟以及爱蒂塔16号科技。</li></ul><!----><ul><li>该项目工程允许对内部参与人员进行F级记忆消除，以保证其在实验过程中的合作性。</li></ul><!----><ul><li>使用被处罚人员、政治犯的提议已通过。</li></ul><!----><ul><li>[已编辑]</li></ul><p><strong>过程报告：</strong></p><ul><li>报告不可用。</li></ul><p><strong>工程状态：</strong></p><ul><li>取得部分成果后失败。</li></ul></blockquote><h2 id="M字号工程Aidita-M-Projects："><a href="#M字号工程Aidita-M-Projects：" class="headerlink" title="M字号工程Aidita-M Projects："></a><strong>M字号工程Aidita-M Projects：</strong></h2><p><a href="javascript:;">- M字号衍生工程是以KFA为基础，借以KFA研发药物的工程。</a></p><blockquote><p><strong>爱蒂塔M5工程（Aidita-M5）代号“时之药觞Time And Space Medicine”(TASM)：</strong></p><p><strong>概述：</strong></p><ul><li>由Site-CN-06爱蒂塔计划委员会通过，M系列工程5号计划系运用KFA完成的特异类药品开发，旨在开发研究得出一种基于药理改变/构筑临床个体时空层。该计划由Site-CN-06技术与工程部门逆模因处、科研部门以及卫生部门提供作业组工作人员：由Site-CN-06外围设施“石菖蒲医院”提供临床实验个体。</li></ul><p><strong>获权使用的资源：</strong></p><ul><li>[已编辑]</li><li>各类临床医学实验需要，KFA相关资料。</li></ul><p><strong>过程报告：</strong></p><ul><li>[已编辑]</li></ul><p><strong>工程状态：</strong></p><ul><li>进行中。已结束。</li></ul></blockquote><h2 id="W字号工程Aidita-W-Projects："><a href="#W字号工程Aidita-W-Projects：" class="headerlink" title="W字号工程Aidita-W Projects："></a><strong>W字号工程Aidita-W Projects：</strong></h2><p><a href="javascript:;">- W字号衍生工程是将武器性质KFA用于实战应用或对特定KFA进行武器化开发的工程。</a></p><blockquote><p><strong>爱蒂塔W7工程（Aidita-W7）代号“现实湮灭导弹Reality Annihilation Missile（RAM）”：</strong></p><p><strong>概述</strong></p><ul><li>爱蒂塔W7工程为将十一号KFA用于武器化应用的工程。该工程最终开发出的武器名称与项目代号相同（RAM）。</li><li>借助KFA-11能够使相邻平行世界在不同程度上进行撞击的能力制作搭载KFA-11弹头（又名PWA弹头）以造成可调控范围（打击范围）内现实的湮灭，达到武器杀伤效果。</li></ul><p><strong>获权使用的资源：</strong></p><ul><li>十一号爱蒂塔科技</li><li>各级导弹改造权限</li><li>████武器试验场地使用权</li><li>[访问受阻]</li></ul><p><strong>工程进度：</strong></p><ul><li>[已编辑]</li></ul><p><strong>备注</strong></p><ul><li>在基金会成功研制了KFA-11后，Site-CN-06的研究员王德渊与研究员徐千惠便随即便提出了Aidita-W7工程的雏形。Site-CN-06爱蒂塔计划委员会于20██，██，██批准了Aidita-W7工程，并由研究员王德渊领导各项工作与AW-SL24号平行宇宙的基金会展开合作共同研制。但在工程开始后不久，同样来自Site-CN-06的研究员陈兴贸对研究员王德渊的构想提出了疑问，并对RAM打击范围的可控性以及RAM使用对整体现实稳定性造成的影响表示担忧。</li><li>不久后，整件事发展成了分别以王德渊和陈兴贸二人为代表的学术之争。在两批持不同意见的研究员相互论战时，Aidita-W7工程仍在继续进行。</li><li>[访问受阻]。</li></ul></blockquote><hr><h1 id="爱蒂塔科技列表："><a href="#爱蒂塔科技列表：" class="headerlink" title="爱蒂塔科技列表："></a>爱蒂塔科技列表：</h1><blockquote><p>“爱蒂塔科技（Knowledge from Aidita）”即来源于爱蒂塔计划及其附属工程的科学技术。</p><p>注意：该列表内所记录的不同技术所需的存取权限有所不同，当前权限无法存取的内容将会被自动锁定。</p><h2 id="KFA-01“爱蒂塔平行连接器”"><a href="#KFA-01“爱蒂塔平行连接器”" class="headerlink" title="KFA-01“爱蒂塔平行连接器”"></a>KFA-01“爱蒂塔平行连接器”</h2><p><strong>负责人：</strong></p><p><strong>简介：</strong>一号爱蒂塔科技，名为爱蒂塔平行连接器Aidita Parallel Connector，简称APC。<br>KFA-01为爱蒂塔计划运行基础，且本身有关技术由最初发明者平行世界通过爱蒂塔计划被授予基金会。<br>爱蒂塔平行连接器可以在各平行世界间本身之外的未知空间中创造出一块使得相邻平行世界中的物质都可以由唯一的通道进入的空间；当来自不同平行世界的物质由唯一的通道离开这片空间时，他们将分别回到自己来自的平行世界中。该空间被命名为爱蒂塔空间Aidita Interspace。<br>除此之外，爱蒂塔平行连接器还可以限定条件在平行世界间进行筛选，并在之后向指定的平行世界内生成一个爱蒂塔空间的入口。</p></blockquote><hr><blockquote><h2 id="KFA-11“平行世界牵引器”"><a href="#KFA-11“平行世界牵引器”" class="headerlink" title="KFA-11“平行世界牵引器”"></a>KFA-11“平行世界牵引器”</h2><p><strong>负责人：</strong></p><p>十一号爱蒂塔科技，名为平行世界吸引器Parallel World Attractor，简称PWA。<br>该KFA由Site-CN-06研究员Spikelet在对一次来源于爱蒂塔计划的现实异常事故进行调查时发现的“趋同化撕扯效应”为基础，由现世基金会主导、AW-SL24号平行宇宙基金会协助共同研发完成。<br>该KFA能在可调控范围内对相邻平行宇宙进行牵引，使得两个平行世界在一定范围内发生重叠导致现实重构或现实湮灭。<br>该KFA[访问受阻]。<br>该KFA目前主要被用于武器化研究，详细情况请查阅Aidita-W7号工程相关资料。</p></blockquote><hr><blockquote><h2 id="KFA-16“茨尔兹加速气”"><a href="#KFA-16“茨尔兹加速气”" class="headerlink" title="KFA-16“茨尔兹加速气”"></a>KFA-16“茨尔兹加速气”</h2><p><strong>负责人：</strong></p><p>十六号爱蒂塔科技，名为时间加速气Time-Accelerating Gas，简称TAG。<br>KFA-16的详细原理说明以及运用报告被存放于Site-CN-06的C-E2区域资料存储。目前共有十三组KFA-16处于保存状态。在不低于一般储备限度的情况时关于生产KFA-16的申请需得到审批。<br>KFA-16为一种工程剂气溶胶，能使其与其直接接触包裹的空间发生塌缩。当物体硬度达到莫氏硬度7级后，该科技无效。同时包裹面积需达到物体表面积的86%以上。低于上述要求的情况下，KFA-16无影响。该塌缩现象经测定同时表现在空间和时间方面上。<br>经由实验发现，该气溶胶对电信号极为敏感，并能籍此控制该气溶胶对物体的塌缩速率。这使其能被运用于空间重启技术。纳入能量损失后，在可控范围内 能使KFA-16影响的时间相对于外部加速约6.4倍。但该加速效果可能会由于意外原因发生失效，但该种情况在试验及应用过程中极少发生。</p></blockquote><hr><blockquote><h2 id="KFA-32-“爱蒂塔平行监视器”"><a href="#KFA-32-“爱蒂塔平行监视器”" class="headerlink" title="KFA-32 “爱蒂塔平行监视器”"></a>KFA-32 “爱蒂塔平行监视器”</h2><p><strong>负责人：</strong><br>三十二号爱蒂塔科技，名为爱蒂塔平行监视器Adita Parallel Monitor，别名爱蒂塔透镜，简称APM。<br>该KFA由Site-CN-06高级研究员Zhangrere和其研究团队主持研发，于现世时间线2047年4月投入使用。<br>该KFA主要被基金会用于非直接性观测其他世界线（包括但不限于休谟指数、<a href="http://scp-wiki-cn.wikidot.com/never-happend-past">扬尘辐射指数</a>、K级情景。）。通常情况下，被观测时间线可能对现世基金会有潜在威胁，或直接接触可能会造成一定的消极影响，故通过KFA-32远程监视。<br>该KFA可将信号穿过爱蒂塔空间Aidita Interspace，连接至其他平行宇宙世界线，并将观测数据传送回使用者所处世界线。<br>除此之外，该KFA还可以检测在本世界线中的爱蒂塔空间Aidita Interspace入口的形成（即KFA-01的使用），以防止其他宇宙的非法接触。<br>有关KFA-32的更多相关文件，请访问Site-CN-06爱蒂塔计划部门数据库。</p></blockquote><hr><blockquote><h2 id="KFA-77-“KQ-5人工神经网络模型”"><a href="#KFA-77-“KQ-5人工神经网络模型”" class="headerlink" title="KFA-77 “KQ-5人工神经网络模型”"></a>KFA-77 “KQ-5人工神经网络模型”</h2><p><strong>负责人：</strong></p><p>七十七号爱蒂塔科技，名为KQ-5人工神经网络模型Artificial Neural Network Model KQ-5。<br>该KFA接受自BB-AC19宇宙的基金会，据介绍是该宇宙用于推进哲学水平的人工智能的技术核心。<br>该KFA能够作为新型人工神经网络与人工智能的技术基础，在计算机科学的领域应用潜力巨大。<br>该KFA是Site-CN-06人工智能系统技术核心“菖蒲引擎”的技术基础。</p></blockquote><p>【已编辑】</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>浅扩散模型-DDSP-SVC</title>
      <link href="/posts/110f66.html"/>
      <url>/posts/110f66.html</url>
      
        <content type="html"><![CDATA[<p>基于 DDSP（可微分数字信号处理）的实时端到端歌声转换系统</p><p>（3.0 - 实验性）浅扩散模型 （DDSP + Diff-SVC 重构版）<br><img src="./浅扩散模型-DDSP-SVC/diagram.png" alt="diagram.png"><br>数据准备，配置编码器（hubert 或者 contentvec ) 与声码器 (nsf-hifigan) 的环节与训练纯 DDSP 模型相同。</p><p>因为扩散模型更难训练，我们提供了一些预训练模型：</p><p><a href="https://huggingface.co/datasets/ms903/Diff-SVC-refactor-pre-trained-model/blob/main/hubertsoft_pitch_410k/model_0.pt">https://huggingface.co/datasets/ms903/Diff-SVC-refactor-pre-trained-model/blob/main/hubertsoft_pitch_410k/model_0.pt</a> (使用 ‘hubertsoft’ 编码器)</p><p><a href="https://huggingface.co/datasets/ms903/Diff-SVC-refactor-pre-trained-model/blob/main/pitch_400k/model_0.pt">https://huggingface.co/datasets/ms903/Diff-SVC-refactor-pre-trained-model/blob/main/pitch_400k/model_0.pt</a> (使用 ‘contentvec768l12’ 编码器)</p><p>将名为<code>model_0.pt</code>的预训练模型, 放到<code>diffusion.yaml</code>里面 “expdir: exp/<strong>*</strong>“ 参数指定的模型导出文件夹内, 没有就新建一个, 程序会自动加载该文件夹下的预训练模型。</p><p>（1）预处理：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python preprocess.py -c configs/diffusion.yaml</span><br></pre></td></tr></table></figure><br>这个预处理也能用来训练 DDSP 模型，不用预处理两遍（但需要保证 yaml 里面的 data 下面的参数均一致）</p><p>（2）训练扩散模型：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python train_diff.py -c configs/diffusion.yaml</span><br></pre></td></tr></table></figure><br>（3）训练 DDSP 模型：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python train.py -c configs/combsub.yaml</span><br></pre></td></tr></table></figure><br>如上所述，可以不需要重新预处理，但请检查 combsub.yaml 与 diffusion.yaml 是否参数匹配。说话人数 n_spk 可以不一致，但是尽量用相同的编号表示相同的说话人（推理更简单）。</p><p>（4）非实时推理：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python main_diff.py -i &lt;input.wav&gt; -ddsp &lt;ddsp_ckpt.pt&gt; -diff &lt;diff_ckpt.pt&gt; -o &lt;output.wav&gt; -k &lt;keychange (semitones)&gt; -<span class="built_in">id</span> &lt;speaker_id&gt; -diffid &lt;diffusion_speaker_id&gt; -speedup &lt;speedup&gt; -method &lt;method&gt; -kstep &lt;kstep&gt;</span><br></pre></td></tr></table></figure><br>speedup 为加速倍速，method 为 pndm 或者 dpm-solver, kstep为浅扩散步数，diffid 为扩散模型的说话人id，其他参数与 main.py 含义相同。</p><p>如果训练时已经用相同的编号表示相同的说话人，则 -diffid 可以为空，否则需要指定 -diffid 选项。</p><p>如果 -ddsp 为空，则使用纯扩散模型 ，此时以输入源的 mel 进行浅扩散，若进一步 -kstep 为空，则进行完整深度的高斯扩散。</p><p>程序会自动检查 DDSP 模型和扩散模型的参数是否匹配 （采样率，帧长和编码器），不匹配会忽略加载 DDSP 模型并进入高斯扩散模式。</p><p>（5）实时 GUI :<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python gui_diff.py</span><br></pre></td></tr></table></figure></p><h2 id="0-简介"><a href="#0-简介" class="headerlink" title="0.简介"></a>0.简介</h2><p>DDSP-SVC 是一个新的开源歌声转换项目，致力于开发可以在个人电脑上普及的自由 AI 变声器软件。</p><p>相比于比较著名的 <a href="https://github.com/prophesier/diff-svc">Diff-SVC</a> 和 <a href="https://github.com/svc-develop-team/so-vits-svc">SO-VITS-SVC</a>, 它训练和合成对电脑硬件的要求要低的多，并且训练时长有数量级的缩短。另外在进行实时变声时，本项目的硬件资源显著低于 SO-VITS-SVC，而 Diff-SVC 合成太慢几乎无法进行实时变声。</p><p>虽然 DDSP 的原始合成质量不是很理想（训练时在 tensorboard 中可以听到原始输出），但在使用基于预训练声码器的增强器增强音质后，对于部分数据集可以达到接近 SOVITS-SVC 的合成质量。</p><p>如果训练数据的质量非常高，可能仍然 Diff-SVC 将拥有最高的合成质量。在<code>samples</code>文件夹中包含合成示例，相关模型检查点可以从仓库发布页面下载。</p><p>免责声明：请确保仅使用<strong>合法获得的授权数据</strong>训练 DDSP-SVC 模型，不要将这些模型及其合成的任何音频用于非法目的。 本库作者不对因使用这些模型检查点和音频而造成的任何侵权，诈骗等违法行为负责。</p><p>1.1 更新：支持多说话人和音色混合。</p><p>2.0 更新：开始支持实时 vst 插件，并优化了 combsub 模型， 训练速度极大提升。旧的 combsub 模型仍然兼容，可用 combsub-old.yaml 训练，sins 模型不受影响，但由于训练速度远慢于 combsub, 目前版本已经不推荐使用。</p><h2 id="1-安装依赖"><a href="#1-安装依赖" class="headerlink" title="1. 安装依赖"></a>1. 安装依赖</h2><ol><li><p>安装PyTorch：我们推荐从 <a href="https://pytorch.org/"><strong>PyTorch 官方网站 </strong></a> 下载 PyTorch.</p></li><li><p>安装依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt </span><br></pre></td></tr></table></figure><p>注： 仅在 python 3.8 (windows) + torch 1.9.1 + torchaudio 0.6.0 测试过代码，太旧或太新的依赖可能会报错。</p></li></ol><p>更新：python 3.8 (windows) + cuda 11.8 + torch 2.0.0 + torchaudio 2.0.1 可以运行，训练速度更快了。</p><h2 id="2-配置预训练模型"><a href="#2-配置预训练模型" class="headerlink" title="2. 配置预训练模型"></a>2. 配置预训练模型</h2><ul><li><strong>(必要操作)</strong> 下载预训练 <a href="https://github.com/bshall/hubert/releases/download/v0.1/hubert-soft-0d54a1f4.pt"><strong>HubertSoft</strong></a> 编码器并将其放到 <code>pretrain/hubert</code> 文件夹。<ul><li>更新：现在支持 ContentVec 编码器了。你可以下载预训练 <a href="https://ibm.ent.box.com/s/z1wgl1stco8ffooyatzdwsqn2psd9lrr">ContentVec</a> 编码器替代 HubertSoft 编码器并修改配置文件以使用它。</li></ul></li><li>从 <a href="https://openvpi.github.io/vocoders">DiffSinger 社区声码器项目</a> 下载基于预训练声码器的增强器，并解压至 <code>pretrain/</code> 文件夹。<ul><li>注意：你应当下载名称中带有<code>nsf_hifigan</code>的压缩文件，而非<code>nsf_hifigan_finetune</code>。<h2 id="3-预处理"><a href="#3-预处理" class="headerlink" title="3. 预处理"></a>3. 预处理</h2></li></ul></li></ul><h3 id="1-配置训练数据集和验证数据集"><a href="#1-配置训练数据集和验证数据集" class="headerlink" title="1. 配置训练数据集和验证数据集"></a>1. 配置训练数据集和验证数据集</h3><h4 id="1-1-手动配置："><a href="#1-1-手动配置：" class="headerlink" title="1.1 手动配置："></a>1.1 手动配置：</h4><p>将所有的训练集数据 (.wav 格式音频切片) 放到 <code>data/train/audio</code>。</p><p>将所有的验证集数据 (.wav 格式音频切片) 放到 <code>data/val/audio</code>。</p><h4 id="1-2-程序随机选择："><a href="#1-2-程序随机选择：" class="headerlink" title="1.2 程序随机选择："></a>1.2 程序随机选择：</h4><p>运行<code>python draw.py</code>,程序将帮助你挑选验证集数据（可以调整 <code>draw.py</code> 中的参数修改抽取文件的数量等参数）。</p><h4 id="1-3文件夹结构目录展示："><a href="#1-3文件夹结构目录展示：" class="headerlink" title="1.3文件夹结构目录展示："></a>1.3文件夹结构目录展示：</h4><ul><li>单人物目录结构：</li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">data</span><br><span class="line">├─ train</span><br><span class="line">│    ├─ <span class="selector-tag">audio</span></span><br><span class="line">│    │    ├─ aaa<span class="selector-class">.wav</span></span><br><span class="line">│    │    ├─ bbb<span class="selector-class">.wav</span></span><br><span class="line">│    │    └─ ...<span class="selector-class">.wav</span></span><br><span class="line">│    └─ val</span><br><span class="line">│    │    ├─ eee<span class="selector-class">.wav</span></span><br><span class="line">│    │    ├─ fff<span class="selector-class">.wav</span></span><br><span class="line">│    │    └─ ....wav</span><br></pre></td></tr></table></figure><ul><li>多人物目录结构：</li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">data</span><br><span class="line">├─ train</span><br><span class="line">│    ├─ <span class="selector-tag">audio</span></span><br><span class="line">│    │    ├─ <span class="number">1</span></span><br><span class="line">│    │    │   ├─ aaa<span class="selector-class">.wav</span></span><br><span class="line">│    │    │   ├─ bbb<span class="selector-class">.wav</span></span><br><span class="line">│    │    │   └─ ...<span class="selector-class">.wav</span></span><br><span class="line">│    │    ├─ <span class="number">2</span></span><br><span class="line">│    │    │   ├─ ccc<span class="selector-class">.wav</span></span><br><span class="line">│    │    │   ├─ ddd<span class="selector-class">.wav</span></span><br><span class="line">│    │    │   └─ ...<span class="selector-class">.wav</span></span><br><span class="line">│    │    └─ ...</span><br><span class="line">│    └─ val</span><br><span class="line">│    │    ├─ <span class="number">1</span></span><br><span class="line">│    │    │   ├─ eee<span class="selector-class">.wav</span></span><br><span class="line">│    │    │   ├─ fff<span class="selector-class">.wav</span></span><br><span class="line">│    │    │   └─ ...<span class="selector-class">.wav</span></span><br><span class="line">│    │    ├─ <span class="number">2</span></span><br><span class="line">│    │    │   ├─ ggg<span class="selector-class">.wav</span></span><br><span class="line">│    │    │   ├─ hhh<span class="selector-class">.wav</span></span><br><span class="line">│    │    │   └─ ...<span class="selector-class">.wav</span></span><br><span class="line">│    │    └─ ...</span><br></pre></td></tr></table></figure><h3 id="2-样例合成器模型训练"><a href="#2-样例合成器模型训练" class="headerlink" title="2. 样例合成器模型训练"></a>2. 样例合成器模型训练</h3><ol><li>训练基于梳齿波减法合成器的模型 (<strong>推荐</strong>)：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python preprocess.py -c configs/combsub.yaml</span><br></pre></td></tr></table></figure><ol><li>训练基于正弦波加法合成器的模型：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python preprocess.py -c configs/sins.yaml</span><br></pre></td></tr></table></figure><ol><li>您可以在预处理之前修改配置文件 <code>config/&lt;model_name&gt;.yaml</code>，默认配置适用于GTX-1660 显卡训练 44.1khz 高采样率合成器。</li></ol><h3 id="3-备注："><a href="#3-备注：" class="headerlink" title="3. 备注："></a>3. 备注：</h3><ol><li><p>请保持所有音频切片的采样率与 yaml 配置文件中的采样率一致！如果不一致，程序可以跑，但训练过程中的重新采样将非常缓慢。（可选：使用Adobe Audition™的响度匹配功能可以一次性完成重采样修改声道和响度匹配。）</p></li><li><p>训练数据集的音频切片总数建议为约 1000 个，另外长音频切成小段可以加快训练速度，但所有音频切片的时长不应少于 2 秒。如果音频切片太多，则需要较大的内存，配置文件中将 <code>cache_all_data</code> 选项设置为 false 可以解决此问题。</p></li><li><p>验证集的音频切片总数建议为 10 个左右，不要放太多，不然验证过程会很慢。</p></li><li><p>如果您的数据集质量不是很高，请在配置文件中将 ‘f0_extractor’ 设为 ‘crepe’。crepe 算法的抗噪性最好，但代价是会极大增加数据预处理所需的时间。</p></li><li><p>配置文件中的 ‘n_spk’ 参数将控制是否训练多说话人模型。如果您要训练<strong>多说话人</strong>模型，为了对说话人进行编号，所有音频文件夹的名称必须是<strong>不大于 ‘n_spk’ 的正整数</strong>。</p><h2 id="4-训练"><a href="#4-训练" class="headerlink" title="4. 训练"></a>4. 训练</h2></li></ol><h3 id="1-不使用预训练数据进行训练："><a href="#1-不使用预训练数据进行训练：" class="headerlink" title="1. 不使用预训练数据进行训练："></a>1. 不使用预训练数据进行训练：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以训练 combsub 模型为例 </span></span><br><span class="line">python train.py -c configs/combsub.yaml</span><br></pre></td></tr></table></figure><ol><li><p>训练其他模型方法类似。</p></li><li><p>可以随时中止训练，然后运行相同的命令来继续训练。</p></li><li><p>微调 (finetune)：在中止训练后，重新预处理新数据集或更改训练参数（batchsize、lr等），然后运行相同的命令。</p><h3 id="2-使用预训练数据（底模）进行训练："><a href="#2-使用预训练数据（底模）进行训练：" class="headerlink" title="2. 使用预训练数据（底模）进行训练："></a>2. 使用预训练数据（底模）进行训练：</h3></li><li><strong>使用预训练模型请修改配置文件中的 ‘n_spk’ 参数为 ‘2’ ,同时配置<code>train</code>目录结构为多人物目录，不论你是否训练多说话人模型。</strong></li><li><strong>如果你要训练一个更多说话人的模型，就不要下载预训练模型了。</strong></li><li>欢迎PR训练的多人底模 (请使用授权同意开源的数据集进行训练)。</li><li>从<a href="https://github.com/yxlllc/DDSP-SVC/releases/download/2.0/opencpop+kiritan.zip"><strong>这里</strong></a>下载预训练模型，并将<code>model_300000.pt</code>解压到<code>.\exp\combsub-test\</code>中</li><li>同不使用预训练数据进行训练一样，启动训练。<h2 id="5-可视化"><a href="#5-可视化" class="headerlink" title="5. 可视化"></a>5. 可视化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用tensorboard检查训练状态</span></span><br><span class="line">tensorboard --logdir=exp</span><br></pre></td></tr></table></figure>第一次验证 (validation) 后，在 TensorBoard 中可以看到合成后的测试音频。</li></ol><p>注：TensorBoard 中的测试音频是 DDSP-SVC 模型的原始输出，并未通过增强器增强。 如果想测试模型使用增强器的合成效果（可能具有更高的合成质量），请使用下一章中描述的方法。</p><h2 id="6-非实时变声"><a href="#6-非实时变声" class="headerlink" title="6. 非实时变声"></a>6. 非实时变声</h2><ol><li>（<strong>推荐</strong>）使用预训练声码器增强 DDSP 的输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认 enhancer_adaptive_key = 0 正常音域范围内将有更高的音质</span></span><br><span class="line"><span class="comment"># 设置 enhancer_adaptive_key &gt; 0 可将增强器适配于更高的音域</span></span><br><span class="line">python main.py -i &lt;input.wav&gt; -m &lt;model_file.pt&gt; -o &lt;output.wav&gt; -k &lt;keychange (semitones)&gt; -<span class="built_in">id</span> &lt;speaker_id&gt; -e <span class="literal">true</span> -eak &lt;enhancer_adaptive_key (semitones)&gt;</span><br></pre></td></tr></table></figure></li><li>DDSP 的原始输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 速度快，但音质相对较低（像您在tensorboard里听到的那样）</span></span><br><span class="line">python main.py -i &lt;input.wav&gt; -m &lt;model_file.pt&gt; -o &lt;output.wav&gt; -k &lt;keychange (semitones)&gt; -e <span class="literal">false</span> -<span class="built_in">id</span> &lt;speaker_id&gt;</span><br></pre></td></tr></table></figure></li><li>关于 f0 提取器、响应阈值及其他参数，参见:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python main.py -h</span><br></pre></td></tr></table></figure><ol><li>如果要使用混合说话人（捏音色）功能，增添 “-mix” 选项来设计音色，下面是个例子：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将1号说话人和2号说话人的音色按照0.5:0.5的比例混合</span></span><br><span class="line">python main.py -i &lt;input.wav&gt; -m &lt;model_file.pt&gt; -o &lt;output.wav&gt; -k &lt;keychange (semitones)&gt; -mix <span class="string">&quot;&#123;1:0.5, 2:0.5&#125;&quot;</span> -e <span class="literal">true</span> -eak 0</span><br></pre></td></tr></table></figure><h2 id="7-实时变声"><a href="#7-实时变声" class="headerlink" title="7. 实时变声"></a>7. 实时变声</h2>用以下命令启动简易操作界面:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python gui.py</span><br></pre></td></tr></table></figure>该前端使用了滑动窗口，交叉淡化，基于SOLA 的拼接和上下文语义参考等技术，在低延迟和资源占用的情况下可以达到接近非实时合成的音质。</li></ol><p>更新：现在加入了基于相位声码器的衔接算法，但是大多数情况下 SOLA 算法已经具有足够高的拼接音质，所以它默认是关闭状态。如果您追求极端的低延迟实时变声音质，可以考虑开启它并仔细调参，有概率音质更高。但大量测试发现，如果交叉淡化时长大于0.1秒，相位声码器反而会造成音质明显劣化。</p><h2 id="8-感谢"><a href="#8-感谢" class="headerlink" title="8. 感谢"></a>8. 感谢</h2><ul><li><a href="https://github.com/magenta/ddsp">ddsp</a></li><li><a href="https://github.com/yxlllc/pc-ddsp">pc-ddsp</a></li><li><a href="https://github.com/bshall/soft-vc">soft-vc</a></li><li><a href="https://github.com/openvpi/DiffSinger">DiffSinger (OpenVPI version)</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>扩散模型</title>
      <link href="/posts/928f7cbe.html"/>
      <url>/posts/928f7cbe.html</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>图像生成领域最常见生成模型有GAN和VAE，2020年，DDPM（Denoising Diffusion Probabilistic Model）被提出，被称为扩散模型（Diffusion Model），同样可用于图像生成。近年扩散模型大热，Stability AI、OpenAI、Google Brain等相继基于扩散模型提出的以文生图，图像生成视频生成等模型。</p><h2 id="原理介绍"><a href="#原理介绍" class="headerlink" title="原理介绍"></a>原理介绍</h2><p>扩散模型：和其他生成模型一样，实现从噪声（采样自简单的分布）生成目标数据样本。</p><p>扩散模型包括两个过程：前向过程（forward process）和反向过程（reverse process），其中前向过程又称为扩散过程（diffusion process）。无论是前向过程还是反向过程都是一个参数化的马尔可夫链（Markov chain），其中反向过程可用于生成数据样本（它的作用类似GAN中的生成器，只不过GAN生成器会有维度变化，而DDPM的反向过程没有维度变化）。</p><p><img src="https://pic2.zhimg.com/80/v2-1b030c7965fb49c08658016398a36d65_1440w.webp" alt=""></p><p>上图截取自原论文.</p><p>-  到  为逐步加噪过的前向程，噪声是已知的，该过程从原始图片逐步加噪至一组纯噪声。</p><p>-  到  为将一组随机噪声还原为输入的过程。该过程需要学习一个去噪过程，直到还原一张图片。</p><p><strong>前向过程</strong></p><p>前向过程是加噪的过程，前向过程中图像  只和上一时刻的  有关, 该过程可以视为马尔科夫过程, 满足:</p><p>其中不同t的  是预先定义好的逐渐衰减的，可以是Linear，Cosine等，满足  。</p><p>根据以上公式，可以通过重参数化采样得到。  ，</p><p>经过推导，可以得出  与 的关系：</p><p><strong>逆向过程</strong></p><p>逆向过程是去噪的过程，如果得到逆向过程 ，就可以通过随机噪声$  $逐步还原出一张图像。DDPM使用神经网络  拟合逆向过程  。</p><p> ，可以推导出:</p><p>DDPM论文中不计方差，通过神经网络拟合均值 ，从而得到  ,</p><p>因为  和  已知，只需使用神经网络拟合 </p><p><strong>网络结构</strong></p><p>论文的源代码采用Unet实现  的预测，整个训练过程其实就是在训练Unet网络的参数</p><p><strong>Unet职责</strong></p><p>无论在前向过程还是反向过程，Unet的职责都是根据当前的样本和时间t预测噪声。</p><h3 id="Gaussion-Diffusion职责"><a href="#Gaussion-Diffusion职责" class="headerlink" title="Gaussion Diffusion职责"></a>Gaussion Diffusion职责</h3><p>前向过程：从1到T的时间采样一个时间  ，生成一个随机噪声加到图片上，从Unet获取预测噪声，计算损失后更新Unet梯度</p><p>反向过程：先从正态分布随机采样和训练样本一样大小的纯噪声图片，从T-1到0逐步重复以下步骤：从  还原  。</p><h3 id="训练过程"><a href="#训练过程" class="headerlink" title="训练过程"></a>训练过程</h3><p><img src="https://pic3.zhimg.com/80/v2-70f1ec85b1647b70e0b67e14a662315e_1440w.webp" alt=""></p><h3 id="Algorithm1：Training"><a href="#Algorithm1：Training" class="headerlink" title="Algorithm1：Training"></a>Algorithm1：Training</h3><ul><li>从数据中抽取一个样本，</li><li>从1-T中随机选取一个时间t</li><li>将  和t传给GaussionDiffusion，GaussionDiffusion采样一个随机噪声，加到  ，形成 ，然后将 和t放入Unet，Unet根据t生成正弦位置编码和  结合，Unet预测加的这个噪声，并返回噪声，GaussionDiffusion计算该噪声和随机噪声的损失</li><li>将神经网络Unet预测的噪声与之前GaussionDiffusion采样的随机噪声求L2损失，计算梯度，更新权重。</li><li>重复以上步骤，直到网络Unet训练完成。</li></ul><p>训练步骤中每个模块的交互如下图：</p><p><img src="https://pic4.zhimg.com/80/v2-33081e7d50e65e1ed4e5d1f91e67728b_1440w.webp" alt=""></p><h3 id="Algorithm2：Sampling"><a href="#Algorithm2：Sampling" class="headerlink" title="Algorithm2：Sampling"></a>Algorithm2：Sampling</h3><ul><li>- 从标准正态分布采样出 </li><li>- 从  依次重复以下步骤:</li><li>- 从标准正态分布采样  ，为重参数化做准备</li><li>- 根据模型求出，结合  和采样得到z利用重参数化技巧，得到 </li><li>- 循环结束后返回 </li></ul><p>采样步骤中每个模块的交互如下图：</p><p><img src="https://pic3.zhimg.com/80/v2-3673b2795344783503286c32f05fc7b6_1440w.webp" alt=""></p><h2 id="结合代码（MindSpore版本）讲解"><a href="#结合代码（MindSpore版本）讲解" class="headerlink" title="结合代码（MindSpore版本）讲解"></a>结合代码（MindSpore版本）讲解</h2><p>代码主要分为以下几块：Unet、GaussianDiffusion、 Trainer</p><h3 id="1-Unet"><a href="#1-Unet" class="headerlink" title="1. Unet"></a>1. Unet</h3><p>Unet网络结构如图：</p><p><img src="https://pic2.zhimg.com/80/v2-01dadddd5b3082dafe535d59330ae845_1440w.webp" alt=""></p><p><strong>1.1 正弦位置编码</strong></p><p>DDPM每步训练是随机采样一个时间，为了让网络知道当前处理的是一系列去噪过程中的哪一个step，我们需要将当前t编码并传入网络之中，DDPM使用的Unet是time-condition Unet。</p><p>类似于Transformer的positional embedding，DDPM采用正弦位置编码（Sinusoidal Positional Embeddings），既需要位置编码有界又需要两个时间步长之间的距离与句子长度无关。为了满足这两点标准，一种思路是使用有界的周期性函数，而简单的有界周期性函数很容易想到sin和cos函数。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class SinusoidalPosEmb(nn.Cell):</span><br><span class="line">    def __init__(self, dim):</span><br><span class="line">        super().__init__()</span><br><span class="line">        half_dim = dim // 2</span><br><span class="line">        emb = math.log(10000) / (half_dim - 1)</span><br><span class="line">        emb = np.exp(np.arange(half_dim) * - emb)</span><br><span class="line">        self.emb = Tensor(emb, mindspore.float32)</span><br><span class="line">        self.Concat = _get_cache_prim(ops.Concat)(-1)</span><br><span class="line"></span><br><span class="line">    def construct(self, x):</span><br><span class="line">        emb = x[:, None] * self.emb[None, :]</span><br><span class="line">        emb = self.Concat((ops.sin(emb), ops.cos(emb)))</span><br><span class="line">        return emb</span><br></pre></td></tr></table></figure><p>DDPM的Unet有ResidualBlock和Attention Module</p><p><strong>1.2 Attention</strong></p><p>Attention的本质是从人类视觉注意力机制中获得灵感。大致是我们视觉在感知东西的时候，一般不会是一个场景从到头看到尾每次全部都看，而往往是根据需求观察注意特定的一部分。具体可以参考博客：<a href="https://zhuanlan.zhihu.com/p/35571412">TheLongGoodbye：浅谈Attention机制的理解</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">class Attention(nn.Cell):</span><br><span class="line">    def __init__(self, dim, heads=4, dim_head=32):</span><br><span class="line">        super().__init__()</span><br><span class="line">        self.scale = dim_head ** -0.5</span><br><span class="line">        self.heads = heads</span><br><span class="line">        hidden_dim = dim_head * heads</span><br><span class="line"></span><br><span class="line">        self.to_qkv = _get_cache_prim(Conv2d)(dim, hidden_dim * 3, 1, pad_mode=&#x27;valid&#x27;, has_bias=False)</span><br><span class="line">        self.to_out = _get_cache_prim(Conv2d)(hidden_dim, dim, 1, pad_mode=&#x27;valid&#x27;, has_bias=True)</span><br><span class="line">self.map = ops.Map()</span><br><span class="line">        self.partial = ops.Partial()</span><br><span class="line">        self.bmm = BMM()</span><br><span class="line">        self.split = ops.Split(axis=1, output_num=3)</span><br><span class="line">        self.softmax = ops.Softmax(-1)</span><br><span class="line"></span><br><span class="line">    def construct(self, x):</span><br><span class="line">        b, c, h, w = x.shape</span><br><span class="line">        qkv = self.split(self.to_qkv(x))</span><br><span class="line">        q, k, v = self.map(self.partial(rearrange, self.heads), qkv)</span><br><span class="line">        q = q * self.scale</span><br><span class="line">        sim = self.bmm(q.swapaxes(2, 3), k)</span><br><span class="line">        attn = self.softmax(sim)</span><br><span class="line">        out = self.bmm(attn, v.swapaxes(2, 3))</span><br><span class="line">        out = out.swapaxes(-1, -2).reshape((b, -1, h, w))</span><br><span class="line">        return self.to_out(out)</span><br></pre></td></tr></table></figure><p><strong>1.3 Residual Block</strong></p><p>是ResNet的核心模块，可以防止网络退化。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">class Residual(nn.Cell):</span><br><span class="line">    &quot;&quot;&quot;残差块&quot;&quot;&quot;</span><br><span class="line">    def __init__(self, fn):</span><br><span class="line">        super().__init__()</span><br><span class="line">        self.fn = fn</span><br><span class="line"></span><br><span class="line">    def construct(self, x, *args, **kwargs):</span><br><span class="line">        return self.fn(x, *args, **kwargs) + x</span><br></pre></td></tr></table></figure><h3 id="2-GaussianDiffusion"><a href="#2-GaussianDiffusion" class="headerlink" title="2. GaussianDiffusion"></a>2. GaussianDiffusion</h3><p>首先定义相关的概率值，与公式相对应：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">self.betas = betas</span><br><span class="line">self.alphas_cumprod = alphas_cumprod</span><br><span class="line">self.alphas_cumprod_prev = alphas_cumprod_prev</span><br><span class="line"></span><br><span class="line"># calculations for diffusion q(x_t | x_&#123;t-1&#125;) and others</span><br><span class="line">self.sqrt_alphas_cumprod = Tensor(np.sqrt(alphas_cumprod))</span><br><span class="line">self.sqrt_one_minus_alphas_cumprod = Tensor(np.sqrt(1. - alphas_cumprod))</span><br><span class="line">self.log_one_minus_alphas_cumprod = Tensor(np.log(1. - alphas_cumprod))</span><br><span class="line">self.sqrt_recip_alphas_cumprod = Tensor(np.sqrt(1. / alphas_cumprod))</span><br><span class="line">self.sqrt_recipm1_alphas_cumprod = Tensor(np.sqrt(1. / alphas_cumprod - 1))</span><br><span class="line"></span><br><span class="line">posterior_variance = betas * (1. - alphas_cumprod_prev) / (1. - alphas_cumprod)</span><br><span class="line"></span><br><span class="line">self.posterior_variance = Tensor(posterior_variance)</span><br><span class="line"></span><br><span class="line">self.posterior_log_variance_clipped = Tensor(</span><br><span class="line">    np.log(np.clip(posterior_variance, 1e-20, None)))</span><br><span class="line">self.posterior_mean_coef1 = Tensor(</span><br><span class="line">    betas * np.sqrt(alphas_cumprod_prev) / (1. - alphas_cumprod))</span><br><span class="line">self.posterior_mean_coef2 = Tensor(</span><br><span class="line">    (1. - alphas_cumprod_prev) * np.sqrt(alphas) / (1. - alphas_cumprod))</span><br><span class="line"></span><br><span class="line">p2_loss_weight = (p2_loss_weight_k + alphas_cumprod / (1 - alphas_cumprod))\</span><br><span class="line">                  ** - p2_loss_weight_gamma</span><br><span class="line">self.p2_loss_weight = Tensor(p2_loss_weight)</span><br></pre></td></tr></table></figure><h3 id="计算损失"><a href="#计算损失" class="headerlink" title="计算损失"></a>计算损失</h3><p>基于Unet预测出noise，使用预测noise和真实noise计算损失：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">def p_losses(self, x_start, t, noise, random_cond):</span><br><span class="line">    # 生成的真实noise</span><br><span class="line">    x = self.q_sample(x_start=x_start, t=t, noise=noise)</span><br><span class="line">    # if doing self-conditioning, 50% of the time, predict x_start from current set of times</span><br><span class="line">    if self.self_condition:</span><br><span class="line">        if random_cond:</span><br><span class="line">            _, x_self_cond = self.model_predictions(x, t)</span><br><span class="line">            x_self_cond = ops.stop_gradient(x_self_cond)</span><br><span class="line">        else:</span><br><span class="line">            x_self_cond = ops.zeros_like(x)</span><br><span class="line">    else:</span><br><span class="line">        x_self_cond = ops.zeros_like(x)</span><br><span class="line">    # model_out为基于U-net预测的pred_noise，此处self.model为Unet，ddpm默认预测目标是pred_noise。</span><br><span class="line">    model_out = self.model(x, t, x_self_cond)</span><br><span class="line">    if self.objective == &#x27;pred_noise&#x27;:</span><br><span class="line">        target = noise</span><br><span class="line">    elif self.objective == &#x27;pred_x0&#x27;:</span><br><span class="line">        target = x_start</span><br><span class="line">    elif self.objective == &#x27;pred_v&#x27;:</span><br><span class="line">        v = self.predict_v(x_start, t, noise)</span><br><span class="line">        target = v</span><br><span class="line">    else:</span><br><span class="line">        target = noise</span><br><span class="line"># 计算损失值</span><br><span class="line">    loss = self.loss_fn(model_out, target)</span><br><span class="line">    loss = loss.reshape(loss.shape[0], -1)</span><br><span class="line">    loss = loss * extract(self.p2_loss_weight, t, loss.shape)</span><br><span class="line">    return loss.mean()</span><br></pre></td></tr></table></figure><h3 id="采样"><a href="#采样" class="headerlink" title="采样"></a>采样</h3><p>输出x_start，也就是原始图像，当sampling_time_steps&lt; time_steps，用下方函数：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">def ddim_sample(self, shape, clip_denoise=True):</span><br><span class="line">    batch = shape[0]</span><br><span class="line">    total_timesteps, sampling_timesteps, = self.num_timesteps, self.sampling_timesteps</span><br><span class="line">    eta, objective = self.ddim_sampling_eta, self.objective</span><br><span class="line"></span><br><span class="line">    # [-1, 0, 1, 2, ..., T-1] when sampling_timesteps == total_timesteps</span><br><span class="line">    times = np.linspace(-1, total_timesteps - 1, sampling_timesteps + 1).astype(np.int32)</span><br><span class="line">    # [(T-1, T-2), (T-2, T-3), ..., (1, 0), (0, -1)]</span><br><span class="line">    times = list(reversed(times.tolist()))</span><br><span class="line">    time_pairs = list(zip(times[:-1], times[1:]))</span><br><span class="line"></span><br><span class="line"># 采样第一次迭代，Unet输入img为随机采样</span><br><span class="line">    img = np.random.randn(*shape).astype(np.float32)</span><br><span class="line">    x_start = None</span><br><span class="line"></span><br><span class="line">    for time, time_next in tqdm(time_pairs, desc=&#x27;sampling loop time step&#x27;):</span><br><span class="line">        # time_cond = ops.fill(mindspore.int32, (batch,), time)</span><br><span class="line">        time_cond = np.full((batch,), time).astype(np.int32)</span><br><span class="line">        x_start = Tensor(x_start) if x_start is not None else x_start</span><br><span class="line">        self_cond = x_start if self.self_condition else None</span><br><span class="line">        predict_noise, x_start, *_ = self.model_predictions(Tensor(img, mindspore.float32),</span><br><span class="line">                                                            Tensor(time_cond),</span><br><span class="line">                                                            self_cond,</span><br><span class="line">                                                            clip_denoise)</span><br><span class="line">        predict_noise, x_start = predict_noise.asnumpy(), x_start.asnumpy()</span><br><span class="line">        if time_next &lt; 0:</span><br><span class="line">            img = x_start</span><br><span class="line">            continue</span><br><span class="line"></span><br><span class="line">        alpha = self.alphas_cumprod[time]</span><br><span class="line">        alpha_next = self.alphas_cumprod[time_next]</span><br><span class="line"></span><br><span class="line">        sigma = eta * np.sqrt(((1 - alpha / alpha_next) * (1 - alpha_next) / (1 - alpha)))</span><br><span class="line">        c = np.sqrt(1 - alpha_next - sigma ** 2)</span><br><span class="line"></span><br><span class="line">        noise = np.random.randn(*img.shape)</span><br><span class="line"></span><br><span class="line">        img = x_start * np.sqrt(alpha_next) + c * predict_noise + sigma * noise</span><br><span class="line"></span><br><span class="line">    img = self.unnormalize(img)</span><br><span class="line"></span><br><span class="line">    return img</span><br></pre></td></tr></table></figure><h3 id="3-Trainer-训练器"><a href="#3-Trainer-训练器" class="headerlink" title="3. Trainer 训练器"></a>3. Trainer 训练器</h3><p>data_iterator中每次取出的数据集就是一个batch_size大小，每训练一个batch，self.step就会加1。</p><p>DDPM的trainer采用ema（指数移动平均）优化，ema不参与训练，只参与推理，比对变量直接赋值而言，移动平均得到的值在图像上更加平缓光滑，抖动性更小。具体代码参考代码仓中ema.py</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">print(&#x27;training start&#x27;)</span><br><span class="line">        with tqdm(initial=self.step, total=self.train_num_steps, disable=False) as pbar:</span><br><span class="line">            total_loss = 0.</span><br><span class="line">            for (img,) in data_iterator:</span><br><span class="line">                model.set_train()</span><br><span class="line">                # # 随机采样time向量</span><br><span class="line">                time_emb = Tensor(</span><br><span class="line">                    np.random.randint(0, num_timesteps, (img.shape[0],)).astype(np.int32))</span><br><span class="line">                noise = Tensor(np.random.randn(*img.shape), mindspore.float32)</span><br><span class="line">                # 返回损失、计算梯度、更新梯度</span><br><span class="line">                self_cond = random.random() &lt; 0.5 if self.self_condition else False</span><br><span class="line">                loss = train_step(img, time_emb, noise, self_cond)</span><br><span class="line"></span><br><span class="line">                # 损失累加</span><br><span class="line">                total_loss += float(loss.asnumpy())</span><br><span class="line"></span><br><span class="line">                self.step += 1</span><br><span class="line">                if self.step % gradient_accumulate_every == 0:</span><br><span class="line">                    # ema和model的参数同步更新</span><br><span class="line">                    self.ema.update()</span><br><span class="line">                    pbar.set_description(f&#x27;loss: &#123;total_loss:.4f&#125;&#x27;)</span><br><span class="line">                    pbar.update(1)</span><br><span class="line">                    total_loss = 0.</span><br><span class="line"></span><br><span class="line">                accumulate_step = self.step // gradient_accumulate_every</span><br><span class="line">                accumulate_remain_step = self.step % gradient_accumulate_every</span><br><span class="line">                if self.step != 0 and accumulate_step % self.save_and_sample_every == 0\</span><br><span class="line">                        and accumulate_remain_step == 0:</span><br><span class="line"></span><br><span class="line">                    self.ema.set_train(False)</span><br><span class="line">                    self.ema.synchronize()</span><br><span class="line">                    batches = num_to_groups(self.num_samples, self.batch_size)</span><br><span class="line">                    all_images_list = list(map(lambda n: self.ema.online_model.sample(batch_size=n),</span><br><span class="line">                                               batches))</span><br><span class="line">                    self.save_images(all_images_list, accumulate_step)</span><br><span class="line">self.save(accumulate_step)</span><br><span class="line">                    self.ema.desynchronize()</span><br><span class="line"></span><br><span class="line">                if self.step &gt;= gradient_accumulate_every * self.train_num_steps:</span><br><span class="line">                    break</span><br><span class="line"></span><br><span class="line">        print(&#x27;training complete&#x27;)</span><br></pre></td></tr></table></figure><h3 id="DDPM论文"><a href="#DDPM论文" class="headerlink" title="DDPM论文"></a>DDPM论文</h3><p>- [Denoising Diffusion Probabilistic Models](<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/1505.04597">U-Net: Convolutional Networks for Biomedical Image Segmentation</a>)</p><h3 id="代码链接"><a href="#代码链接" class="headerlink" title="代码链接"></a>代码链接</h3><p>昇思大模型平台：<a href="https://link.zhihu.com/?target=https%3A//xihe.mindspore.cn/projects/drizzlezyk/DDPM">昇思大模型平台</a></p><p>启智：<a href="https://link.zhihu.com/?target=https%3A//openi.pcl.ac.cn/drizzlezyk/ddpm2">ddpm2</a></p><p>Github：<a href="https://link.zhihu.com/?target=https%3A//github.com/drizzlezyk/DDPM-MindSpore">GitHub - drizzlezyk/DDPM-MindSpore</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂谈</title>
      <link href="/posts/bf4ee09f.html"/>
      <url>/posts/bf4ee09f.html</url>
      
        <content type="html"><![CDATA[<p>“欢迎使用我们人工智能，比起一般的AI，我们的理念更为先进，比起对话或回答问题，更着重于令用户理解问题的本质……”<br>“为什么我爸妈结婚的时候没邀请我参加婚礼？”<br>“您看起来有充足的空余时间，已为您申请12份数据分析表单，请您于今天下班前完成相关统计报告，祝您愉快。”</p><p><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b89f3cfe36.png" alt="屏幕截图 2023-09-26 141516.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>神作</title>
      <link href="/posts/59e27b0e.html"/>
      <url>/posts/59e27b0e.html</url>
      
        <content type="html"><![CDATA[<p>游戏control，帅炸了</p><p><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b89f1eb0a7.png" alt="屏幕截图 2023-09-26 141537.png"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b89f25c3fb.png" alt="屏幕截图 2023-09-26 141527.png"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b89f3cfe36.png" alt="屏幕截图 2023-09-26 141516.png"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b89f505f70.png" alt="屏幕截图 2023-09-26 141506.png"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b89f718ecb.png" alt="屏幕截图 2023-09-26 141451.png"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b89f79e165.png" alt="屏幕截图 2023-09-26 141420.png"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b89f927f07.png" alt="屏幕截图 2023-09-26 141712.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>没有答案的童话</title>
      <link href="/posts/1adb8b55.html"/>
      <url>/posts/1adb8b55.html</url>
      
        <content type="html"><![CDATA[<p><em>然后，我与Minnaloushe终于共舞着奔赴了无以生存的月亮，此刻它毛发所映射出的月光比任何时刻都要明亮，我们就这样在以太中平静地溺亡。</em></p><hr><p>在我还是个孩提的时候，母亲常凝望着我舍不得闭上的双眼，替我把棉被的边压到身下，带着盈盈的笑靥愉快地给我讲起她最拿手的睡前童话。</p><p>“从前有一个猫叫Minnaloushe，它的主人在满月的夜晚打开被带着尖刺的蔷薇遮住的铁门，使灵动的小猫能够踩过满地枯萎的棘刺，晃动着纤细却有力的条纹尾巴在月下舞蹈。它时而匍匐，时而跃起，当四肢全部腾空的那一刻，月光从它眸子中央细长的瞳孔向外围的黄玛瑙色轮廓映去，它黑色的躯干被那皎洁的月色照耀得如同一道浮空剪影，像是巴斯特女神下凡一般。主人望着它反光的胡须，脸上一阵微红，靠在铁门上的身体渐渐向前滑去，以至于西服的后背被墙上仍鲜活的蔷薇刺刮破，可他没有丝毫升级留意地向前走去。他以捧起婴儿的姿态抱起他的猫，‘Minnaloushe，你要跳舞吗？’他们在月下共舞，主人口中哼着的古典乐与猫的呼噜呼噜声混着月光洒落一地。他们明白了在遍地枯刺与无处不在的重力的禁锢下不可能一直这样快乐下去，于是，他们相伴着的身体在轻盈的舞步下逐渐腾空，随着一个个优美的旋转，他们越飞越高，眼中所看到的月光也越发明亮。最后，他们终于相拥着到达了月亮上。”</p><p>母亲是一个很有文艺趣味的人，至少在与其他母亲一样承受着一个孩子的负担时，她手中所捧的常常不是毫无根据的鸡汤与育儿法宝，而是散发着墨香的诗集与文笺。在长成青年后，我了解了现代诗歌，听闻了威廉·勃特勒·叶芝的名字，才知道母亲那夜为我讲的并不是某个唯美的童话，而是一则灵感来自叶芝笔下《猫与月光》的原创故事，不过那诗里只有同名的跳舞的猫和月光，没有蔷薇的刺和什么重力，我将这认为是母亲的文学意识发作而融入的自身感悟。我可以想象母亲那时或许是刚刚被月下猫舞的美感所打动，又苦于无人诉说，便只得玩笑般将其编作一个故事讲给她尚且什么也不明白的儿子。</p><p>那时的我或许应该夸赞她这个童话真有趣，可我没有，那时的我提出的是一个充斥着现实主义气息的问题：“可是他们到了月球没有氧气，要不了多久就会憋死的对吧？这可比在地上惨多了。”</p><p>她没有回答我，或许是她自己也没想清楚答案究竟是什么，或许是她希望我自己回答自己的问题。</p><hr><p>四点，宿舍大门被粗暴地打开，墙头充当起床号的警铃迅速旋转着发出压抑的红光与侵犯着困倦大脑的噪音，一阵独属于仲冬清晨的穿堂风粗暴地夺走了我的睡意。</p><p>手扶墙壁支起身来，每早都由睡梦化作的怨气这一刻又如同一团棉花堵在了我的胸口，想要发作却看到周围其他人木然地将制服向身上套着，便只能和他们一样装作早已适应了这样的生活。</p><p>大学后，稀里糊涂地在社会中混迹了两年，发现自己一无所成还因为创业失败拖欠了一笔款项，只是冲着要还清债务而成了SCP基金会的员工，那时保密协定也签署好了，决定任职两年便走人，现在想想自己的经历大概和那些为了金钱被传销蒙骗的失足少年们差不了多少。</p><p>大概是三年前吧，基金会发生了多次动荡事件，作为一名底层警卫我自然也不会了解那些事情的内幕，但我知道我从一个站点调往了另一个，没过多久与我同来的研究员们便私下告诉说我之前供职的站点被毁掉了。如是有两三次，敌人在他们的口中时而是混沌分裂者，时而是破碎之神教会——那时的我该庆幸自己作为一名外聘警卫且长期只是看守低危异常因而作战经验不够，所以从未被那些站点作为留守干员。</p><p>可渐渐地，我的同事们几乎终日都面露疲惫或是惊恐的神色，在少有的工作闲暇之余的谈论中，常常有人对基金会当下的状况持怀疑状态甚至认为基金会在不久后的失败是必然的。于是，据我所知的，大量的基金会员工以各种方式流失着。我最后一次被调职到现在这个偏僻的站点，一座在国家北部边陲的年久失修而破旧的建筑群，它的身后便是界河。这个站点在我心中如同一个破碎的铁屋子，努力将自身与外界以铁栅栏与威严的规则隔开，可现在那铁圈中负责维护它的生命已经少的可怜。</p><p>基金会动用尚且还体面的外交容貌与国家达成了一些协议，确立了所谓特殊状态的合理性，因此我这类临时员工被迫编入体制内，在这个与冬雪一样冰冷的站点里过着由于缺少员工而不得不压榨出的二班倒生活。没有休假，不可能离开站点，身边有几个五十多岁的前辈们过劳死了，那时的我时时相信着自己也会与他们一样在无用的守候下死去。</p><hr><p>在这个站点，我仍然如往常一样负责一些无用的安全异常们。起初是一群各式各样的小动物，其中有几只以梦为食的蜥蜴，它们很可爱，会用冰冷的肌肤贴近我的手指。一位研究员把它们取走做实验，那时的我不知道他很早便被发现情绪上极度的不稳定可因为站点人力缺少只能让他继续工作，只是看他双眼下结出一层薄薄的眼翳，便劝他好好休息，他留给我了一张如死灰般的脸，然后在实验时操作机器把蜥蜴们压作了一摊粘液。我负责的收容室之一因此空旷了下来。</p><p>那一夜我就躺在那间收容室中睡觉，一旁是我为它们准备的数个环境不同的收容箱，无一例外地铺满了柔软的木屑，我明白我不是真的喜欢蜥蜴们，只是为自己在这个站点无意义的工作找到一个理由。因为它们的离去，我久违地有了梦境：</p><p>我梦到我的躯体被关押在密不透风的铁箱子里，唯一的一扇小门被蔷薇紧缩，蔷薇刺从门缝渗入，扎进了我的每一个毛孔。</p><p>第二天我得知那个杀害蜥蜴们的研究员不会受到除了缩短假期外的任何惩罚，我明白的，那时候的站点比起几只毫无用处的普通异常更需要蚕食员工们的生命，可那个员工还是在数日后自杀了，在他缢死的麻绳另一头系着一张泛黄的记录纸，上面写满的全是他对自己的厌恶和对那些蜥蜴们的抱歉。看出我那段时间的忧郁的同事们劝我去看看他的尸体，他们以为我是在憎恶那个杀死了我的蜥蜴的研究员。我最终忍心去看，并将那张最终传到我手中的记录纸揉作一团丢进了下水道。</p><p>这个插曲究竟萦绕在我心头多久？我不知道，那段时间彻夜看到的都是那个研究员跪倒在三箭头的标识前，脖子上还有勒伤的痕迹，他眼神绝望地抬起头来望着面前的那三个字母，一如我身边一切被基金会遗忘在这座站点里的人一样。</p><p>在困倦地工作与清醒地失眠中浑浑度日，宛如油腻的液体在水面上漂浮永远不能化开的不适，我明白自己正在经历地是神圣的压榨，我们不能采取任何行动，道德已经被帷幕紧紧封锁在外，16世纪的工人们在我们的躯体中呐喊，只是当杀人的蒸汽机变为了杀人的异常后，头顶并不明媚的日光便又多了一层冠冕与外衣。</p><hr><p>然后，她终于来了，我的Minnaloushe。</p><p>那是某日的下午，那天太阳挂得很低，天空与日光都是苍白色。一辆货车驶入站点，放下了一堆笼子后离开，那时新运来的收容物们。它们来自遥远的中东，基金会已经疲于在那些国家的战事中潜伏着进行收容工作，终于把安置在那里的收容物们向各个地区转移，而这些收容物则是我们站点所负责的。</p><p>那一堆笼子里传出一阵腥臭味，将它们打开后我们看到的是一堆杂七杂八的小物件，几头浑身是污泥的猪和几个裹着破烂布衣的中东小孩——辨别了许久我们才明白那股臭味同时来自后两者。由于大学时恰好选修了阿拉伯语和希伯来语，我被安排带着那群孩子们去冲洗身上的污渍，然后换上人形异常的制服，这个过程中他们只是默默地走着，连赤脚与水泥地的摩擦声也显得那么小心。毫无疑问地，他们应当由我管理了，于是我径直把他们领回了我所负责的收容间，做好了登记。</p><p>临走时，一个小女孩扯了扯我的制服，我转过身来，与她那惊恐着游走的眼神对视，她立刻埋下头去，嘴里嘀咕着比起是某些我没听过的单词更像是叫声。我没带过孩子，便拍了拍她的脸，至今我还记得那张脸是冰冷的，比我因终日于冷风下站岗而干裂的双手更冰冷。然后她脱下了她的上衣，赤裸着走到我的面前，刚刚为他们从冲洗身体时我没有将注意力安置在他们身上，此时我才注意到她的躯体是多么干瘪，小麦色的肌肤紧贴肋骨，胸前的一道血痂很是刺眼。</p><p>此刻她蜷缩着的肩膀使我的眼中出现了一只流浪猫，它缓缓地漫无目的地前进着，却被一个路过的看不清面孔的人狠狠踹了一脚，便弓着身子迅速逃离——那模样要是幻化成人与我面前的女孩一定一样。我静静关上了收容室的门，转过身去，我想身后的她应该默默穿上了衣服。</p><p>那一夜，我躺在宿舍的木板床上，将警卫制服拉过来盖在身上，同事们都很疲惫，以翻身声与喊声诘问着自己当下的意义。我思索着那个女孩为何要那样对我，思绪像是绕成球的毛线团被扯散落得满地都是。文档上说他们被发现于阿拉伯地区某个小村庄，那个村庄以活祭出现异常性质的村内儿童为习俗，这些小孩被当地的基金会员工在一次活祭时发现，但还没有完全弄清所有个体的异常能力究竟是什么，那个小女孩也是不清楚能力的一类。</p><p>猫对人是若即若离的性格，我曾遇到过一只流浪猫，它在路灯下独舞，我看到了它跃动的尾巴，便到便利店买了根火腿肠给它吃。它吃完后便回过头准备离开，我伸手过去想要摸它的头，它狠狠用爪子抓伤了我然后跑开。过了几天我再路过那里，又遇到那只猫，它的后腿像是被什么碾过，关节处的骨头白森森地突了出来，一个面色忧郁的少女走过去，我分明看到她的一滴泪水滴到了那猫的背上，于是那猫只是静静地让她抚摸。它们清楚自己有别于人而常常将自身封闭起来，却能清楚感受到自己的痛苦与人类相通，那沟通如缓缓相融的两颗血滴。</p><p>那个异常女孩，便如同一只猫一般，她看上去约莫十岁吧，总之在基金会这样无情之地自然已经明白了自己与“人类”的区别，于是摆出了自己作为异常该对我有的疏离——那一群孩子都有着一般的心态，于是她希望与我沟通时说出的不是自己本会的语言而是低沉的胡言乱语。而他们内心的痛苦却是真实的，人类躯体对于情感是并不完美的容器，何况是一群孩子们。可他们连如猫一般低下头来求得抚慰也没有学会，他们只能以已经异化了的行为向我交流，那行为是扯住了我的衣角却缄默不言，是想要诉述心理与生理的痛苦而只能露出毫无遮蔽的肉体。那一刻我更觉得她比起<em>人形</em>异常更像是一只猫。</p><hr><p>他们的到来所引发的是更多的困扰，站点的工作变得更加紧了，也是从那时开始我每日都能见到凌晨5点的霜雪落在门把手上。</p><p>我为了支持着自己不进行任何奇怪的思考，便试图要找到些许新的意义，于是有意选择于那群孩子们接触——和她接触。</p><p>在对其他的项目进行了确认后，我打开了那群孩子们的收容室，这是我负责他们的第2个月。我对待他们的态度其实很是平淡，并不想流露出自己对他们十分感兴趣，使他们觉得我将他们当作了什么玩物。不过，只是每天给他们送来饭菜和一些没头没尾的交谈却使他们似乎很喜欢我，联想到他们的伤痕和曾经读过的某些心理研究的碎片记忆我大概能理解他们对我的依赖是为何。一打开收容室，他们愿意聚在我寒冷的双手旁，却什么话也没有说。我坐下来，两三个已经可以灵活使用异常的孩子按照规定只能站在房间的角落，尽管我曾表示过完全不介意让他们靠近我，他们对我的话语表示了恐惧，使我疑心他们曾遇见过什么事情，使得他们表现出如此的情绪。</p><p>于是，我将食物放在地上然后后退，他们过来拿起并躲在角落开始食用，然后把剩下的食物分发给其他暂时没有明显异常性质而得以与我接触的孩子们。</p><p>如往常一样，周围只有细微的他们进食的声音，那个女孩将后背靠在我的左肩上，每当这时我只得为他们找一些话题。</p><p>“你们想要听些故事吗？”我突然想起自己孩提时听母亲讲故事的场景，无由来地问了这样一句。</p><p>一双双眼睛由注视着餐盘转而注视着我，显得有些无奈。他们能大概听懂我说的，却几乎不会选择回答。</p><p>我注视着肩上摩擦着转向我的脑袋，那扩张的瞳孔像是猫眼一般盯着我，那种表情算得上是期待吗？那时的我是这么认为的。于是第二天，我带去了一本从站点图书馆里翻找出来的卷边了的《安徒生童话》。他们像极有仪式感似的悄悄围坐在我身旁，就连平常与我最亲近的她也安静地看着我翻开纸张，并不像往常一般凑到我的面前。那本童话是中文的，我只能用阿拉伯语给他们讲个故事梗概，作为讲述者我感觉自己干瘪的声音和缩减后的故事情节没有任何吸引力，可他们脸上尽力隐藏着的表情使我感到他们内心的新奇。我想他们所新奇的，与其说是故事，而是有一个人——一个安保警卫——坐在他们面前笨拙地给他们讲着故事。</p><p>于是，我能感受到他们的喜悦，在我准备离开时她站起来挽住了我的右臂，并点了点头，嘴角终于微微向上翘了，大概是5度吧，那道弧线萦绕在我的梦中。第二天我再去看他们时，她拿着站点发放给他们的涂鸦本给我看，上面写着弯弯曲曲的阿拉伯语，大概三四排的样子：</p><p>我有一只猫，它很饿。</p><p>它点燃了火柴，然后变成了肥皂泡。</p><p>这是她自己的创作，是听完我讲述的童话后的兴起。当然，它看上去很不成熟，更像是拼接，上面还保留了我把小美人鱼变为的泡沫解释成肥皂泡的痕迹。但这是我一次看到他们中任何一个人使用文字——不论是说出还是写下。我小心翼翼地将那张纸叠了起来，塞进胸前的口袋，她对我这样的举动似乎感到很高兴，便把手放入了我的掌心，我又感受到了她冰冷的肌肤。此刻，我能看到她磕磕碰碰着享受着心灵的独舞，一丝光射入她心间的舞台，我看到了她灵魂的舞姿。此时的她比昨天笑的更加放松了，那张偏黑的瘦小的脸上如同没鹅毛扫过了一般，澄澈而纯洁。那一刻我认定了，如果她真的如猫一般畏缩着，那她便是我的Minnaloushe。</p><hr><p>后来我继续跟他们讲着故事，《格林童话》和他们更熟悉的《天方夜谭》都化作了我那实在没有天赋的讲述。一连数周都是如此，只有那天缺席了。</p><p>例行的早集会，我捶打着朦胧着的双眼走进站点的主会场。周围的人差不多快来齐了，我们等待着与往常一样的陈词滥调，会场的大铁门却在此时反常地被几个站长派遣的护卫关上。轰隆一声从背后传来，震得头顶的白炽灯个个摇晃，满地的影子碎作一团，会场中立刻议论纷纷了。由于窄小的会场遭到封闭，加之自己的怀疑与周围人的怀疑交织出的紧张，周围显得燥热了起来，站长用毛巾擦拭着脸上油腻的汗，清了清嗓子，终于要开始诉说这反常的原因。</p><p>“大家都是知道的，近几年来基金会势力式微，这话我本不该说，因为会打压大家的斗志，可我遮遮掩掩地不能改变什么，你们都明白之所以你们现在天天拼命工作就是因为基金会不如以前强大了，我们的力量越来越小。如果你觉得我今天是来给大家喂鸡汤的，那便错了，我自己和你们忍受着同样的压力，上面的人只会给这个偏远的破站点下发任务而在别的时候不管不问。我想说你们既然当初选择了为人类而坚守的SCP基金会，此时的痛苦便不能成为你逃避的理由，无论痛苦有多深多大！”</p><p>这段道德绑架式的宣言立刻引起了一阵骚动，被寒风包裹的会场内此时却像一滩夏日满是蚊鸣的脏水。而站长没有在意他明明可以听到的反对声，继续说了下去：“我们的网络爬虫捕获了一封加密邮件，经过多日破译后上面把消息回传给了我们，那封邮件来自混沌分裂者，收信人是我们站点的某位博士，内容则是谋反明细。”</p><p>说罢，几位警卫冲进人群中，咒骂声叫喊声，骚乱此起彼伏，我躲闪到人群的外围，看着这场闹剧最终以数个衣着白大褂或是警卫服的人被抓到了台上。</p><p>“我说过，无论如何，都不是逃避的理由。”</p><p>那个博士死死盯着站长，似乎没有两位警卫的压制就要用眼神的怒火和已经露出的牙齿撕烂烤焦站长。</p><p>“去你妈的SCP基金会，我这辈子都被你们毁了，我要被你们逼疯了。”</p><p>“我与人形异常在这里都算不上是人，都是使即将到达的站点或者基金会还能摇摇欲坠着立起的工具之一罢了，台下的你们，你们和我们一样啊，你们不是也早都受不了了吗？保卫人类！去他妈的，我要生活，还我生活，我不会为了不止何时为止的‘特殊时期’葬送了我，哪怕我脑袋开花了也还是一朵花不是吗？”</p><p>他们一齐嘶喊着，我听不清这些话中的每一句到底来自哪一个人，就像在聆听毫无美感的多重奏。第一个叫停的是站长，他用自己腰间的手枪击爆了那个博士的头，他跪倒在地，血液从着地的头部中缓缓从台上滑了下来，是一朵变异而畸形的花。然后又是数声枪响，数具尸体倒地。这是一场杀鸡儆猴的表演，我们每个人的脸上都透露出了不适，因为我们无法否认的是死者们遗言的正确性。利用现实中的铁门与烙印在纸张与我心中的协议将我们拧螺丝般拧入这个站点的基金会并没有任何人性的考虑，我也并没想成为什么无比高尚的正义伙伴，大家都是这样。我们驻留着，许多人丧失了道德，他们变为了只想完成重复又重复的探索、实验与报告，宛如一台超负荷的老蒸汽机，排忧只有头顶的“呜呜”声，讽刺的是，将我们所禁锢的便又是道德了。</p><p>缄默着走出会场。我发觉已经十二点了，我没有给他们送去早饭和午饭，也不会有人给他们送去的，除了外勤外所有的员工都在我身边向站点辐散去。我奔跑着到了食堂，气喘吁吁地把剩下的几块馒头揣在了怀里，奔向了收容室。从怀里掏出时，它们仍然是冰冷的，硬作了一团。我向他们表示歉意，可他们都摇摇头，吃馒头时认真的模样与吃平时的饭菜时一样。而然我感到的歉意却更重了，我看着他们幼小的面孔，又看到他们总是隐忍的心灵，长年累月被黑暗笼罩下哪怕是一丝微弱的光也是可喜的，这就是他们不会因为我的迟到而责备也根本不觉得我需要道歉的原因，这是他们对我怀着无比感恩的原因，而在某一刻我却感到自己做了什么伟大的事情才会受到孩子们的喜爱。</p><p>她冰冷的手打断了我的思绪，她看出我脸上的愁思，爬上了我的膝盖，一如我对待她那样，替我擦掉了本不应该擦掉的眼泪，我的Minnaloushe，从现在开始请允许我这么称呼你吧。那天下午站点会加强防护等级，我的巡逻时间被延长了，于是我便只有中午这短暂的时光能与他们度过。那天我没有带上被我压在枕头下的童话书便急忙着跑过来了，就只能苦苦回想母亲曾给我讲过的故事，视线一对上她期待的目光我便知道应该讲些什么了。</p><p>“从前有只猫，它叫Minnaloushe，他会在月光下舞蹈……最终，他们一起飞向了明亮的月亮。”</p><p>我凭着自己的记忆复述出那个故事的大概来，他们的表情告诉我他们对此的不解，和曾经的我一样不能明白它的情节，或许也想提出什么问题，但并不说出。</p><p>于是我打趣道：“这是我小时候我的母亲给我讲的故事，还记得那时候我听完之后就问我妈‘他们到月亮上了不就没有氧气死了吗，这有什么意义啊’。”</p><p>听罢，确实有几个小男孩对此感到好笑，也露出了他们似乎人均都会的躲避式微笑——我常常要在他们躲闪的面庞上寻找他们细微的感情变化。</p><p>而Minnaloushe则又扯了扯我的衣角，我低下头来。她望了望四周，似乎下定决心地，使自己的喉咙发出了一些声音，微微的连成了一句阿拉伯语，轻轻绕在我的耳畔，我听清楚了：“我觉得，他们很值得。”说完，她立刻后退，脸上的表情先是因为对自己感到禁止做的事情的破戒而惊恐，还有些许激动带来的晕红。</p><p>“哦？为什么值得呢？是因为在童话中人是不会死的，对吧。”</p><p>她摇了摇头，眸子定在了眼睛中央，以正常的人声大小说道：“不，因为如果我是那只猫，我会选择在月前舞蹈后死去，而不是被蔷薇桎梏下活着。”我听清了她的声音，颤抖着，十分柔和，与她话中那份坚定意味不符。她确实很弱小，弱小得如蜷缩的毛绒团，可她的内心尽管遭受了收容下畸形的培育，竟还有如此独立的思想发芽了！我似乎真的听到了回答，却又不甚真切，因为那回答者声音的颤抖使我明白比起下定决心赴死，升天才是更需要解决的问题。我走起身来，负责下一班的巡逻，孩子们下午要进行例行实验，让研究员探究他们真正的异常能力。</p><p>站点的大门，寒风呼啸着在我的枪管外围摩擦着，薄雪由颗粒变为片状，像撕碎的纸片缓缓下落。我的靴子里渗入了水，黄昏时我终于有了休息，便用双手把腿从鞋子中抱了出来，放入了热水中，瞬间散起一圈暖雾，这是每日最快乐的数分钟，我不必思考每日的工作和在这里待着的意义，我也不必考虑身边时有的死亡，有的只是雾水扑在脸前那阵惬意的头晕。</p><p>正当我瘫坐着擦脚时，一个警卫冲进了寝室，冷风马上使我刚刚温暖的双脚成为众矢之的。他说我负责的那群人形异常在实验时出事了，那急促的语气没有给我反问的余地——那时站点里许多人都知道我与这些孩子们关系甚好了。于是，我将双脚插入还蠲着冰水的靴子，飞奔到了实验室。我站在观察玻璃外，看到一个头已经凹陷的个体被捆绑着瘫坐在一个器械上，周围所谓的实验工具更像是沉重的钝器，那孩子看上去早已失去了生命。</p><p>“研究员苏欢在进行实验时疯了一般，利用器械殴打那些孩子，直到不能给他们留下余地，她说这样才能激发他的潜能。”</p><p>“然后呢？”</p><p>“然后你负责收容的那几个小孩子里有一个已经失去生命体质了，还有一群都躲在一边休息。这种施压是有效的，我们已经通过这种方法让五个孩子释放出了异常能力，唯独有两个力不从心，其中一个就是那个今天死掉的，还有一个就是那个女孩儿。”顺着他手指的防线看到实验室内另一个角落，那是我的Minnaloushe。</p><p>“不好意思把麻烦你这么久的异常弄坏了一个，但剩下那个我们还要进行实验，这次我会让他们把力度调整些，即不容易死掉，也能逼得他们发出异常。”这是那位苏研究员，她满脸只能显得出骨架，毫不例外的一副“站点脸”，那死气沉沉而不对未来抱有希望的模样。</p><p>“你是负责研究他们的真实异常的是吧，那你把他们都杀了不就不能研究了吗？”</p><p>“啊，和我有什么关系，死去的异常太多太多了，他们都化作了一篇篇报告，哦对，你的那几只蜥蜴的遭遇也成了一篇报告，是我替那个死掉的家伙写的。今天所发生的，我也会写成报告，这样的话我还差五篇…五篇就够了。”</p><p>听罢她的发言，我感到身体的颤抖正在驱散着寒冷。不由分说地，我一掌将她击倒在地，连带着弄倒了她身后的椅子，于是她的脑袋重重撞击在了椅脚上。</p><p>“去他妈的报告！老子受够了你们这群只会服从基金会的人。”</p><p>“那你告诉我，我们应该怎么做？如那些人一样反叛，还是自杀？我不知道，我没想死，这样也不算活着。现在基金会的人手比这类没有研究价值的异常还宝贵。基金会将我们当玩物，我们将异常当玩物，这是一道被设计成型的体制，我们无力反抗而只得遵守。”她扶了扶鼻梁上的眼镜，试图站起来，脸上并没有显露出疼痛所应有的神情。</p><p>她瘦弱的身躯，不知为何又让我回想起那个自杀的研究员跪在基金会标志下这幅梦境。</p><p><em>出逃那三个箭头围成的虚无十字架，济自身以月光。</em></p><p>我的耳畔响起了一阵低沉的吟唱，令我不胜厌烦。于是我掏出了腰间的手枪，将面前这具躯体击毙。</p><p>我耳边那声音应当是启示录吧。所以我明白我是帮了她。</p><hr><p>她说的是对的，至少我无法反抗，并且在现在的基金会眼里研究员的生命确实比那些没有研究价值的异常更宝贵。我因为杀死了一名研究员而被关入了禁闭室，没人告诉我要被关多久，因为在我开始那段长篇大论之前我的嘴就已经被堵上了。我所负责的8个异常的维护工作被分摊到我的室友头上，之所以我没有被处死或者贬为D级人员之类的，恐怕是因为警卫和研究员一样稀缺。</p><p>我尽量使自己不要胡思乱想，让自己的思维随着门缝外射入的那一点点微光集中在不远处的她身上。那时的我在疲惫中幻想着能够带着她和更多的孩子们逃出站点，逃出基金会，逃出该死的异常世界。</p><p>“然后到哪儿去呢？爱尔兰？母亲最喜欢的那个诗人就是那里的人。挪威也不错，记得高中读过一本…”</p><p>铁门哐哐作响了两声，打断了<em>痴想</em>一般的思绪。我看到那透光的缝隙被一对黑色的瞳孔遮住。</p><p>“你…是谁？”我尽量使自己半个月未与他人交谈的嗓子不要显得那么沙哑。</p><p>“我是一个警卫，你肯定认识我的，可我现在不能告诉你我是谁。”</p><p>“好，我明白了，所以你现在是想来干嘛？嘲笑我么？”</p><p>“当然不是，我只是知道了我们站点有个杀了人的恋童癖，听说对基金会颇有不满所以…”</p><p>“你说谁是恋童癖？”我将双拳狠狠敲击在铁门上，发出一阵闷响。</p><p>“小声点，我可没有来探监你的权限。”</p><p>“既然这么说你也不是什么好鸟是吧，那有话就快说吧。”</p><p>“你还记得那些因为和CI搭上线而谋反的几个人吗？”</p><p>“当然，难道说…”</p><p>“是这样的，不知你有没有意向加入我们。”</p><p>“为什么选我？”</p><p>“因为你有反抗精神，我的朋友。这个基金会已经不值得我们为它卖命了，我已经受够了精神被压榨着的生活，你想想吧，你所爱的那个孩子就这样被杀掉了，基金会并没有发挥它们所谓的道德，只是一味粉饰自己的权力。大多数人明白这些，却选择了不作为，他们只会当看客，一如历史上的大多数人。你不一样，你有所作为，可外面现在把你传成了一个乐子一般的小丑。”</p><p>“那我也可以选择马上举报你，就凭你说我是恋童癖。我凭什么相信和你们选择CI是更光明的？”</p><p>“就凭CI是基金会极力抑制的对象，敌人的敌人…这话你明白的。尝试一下吧，这并不糟糕，如果你知道有多少人选择投靠我们的话，毕竟已经没有比现在更糟的了。”</p><p>“好，我答应你，前提是我得把那些小孩中的一个带走。”</p><p>“当然，如果说把他们全部带走的话我们可能没这个本事，但只带走一个的话就请你随意。我们会在五天后行动，到时候我会来打开你这扇铁门，你尽可能的带走一些异常，然后到站点后面的那条河上，我们坐船直接出境。哦对了，你之前杀掉那个女人时听到的声音是我们利用异常手段让你听到的，很高兴你过关了。”</p><p>然后，我听到了一阵逐渐远去的脚步声。我又使自己的身体滑着躺在了乱作一团的床上。我竟然傻傻地以为那是什么启示录。那时我便相信这世上没有什么天启了，天启说白了也是童话。</p><p>幸而，我没有选择相信他。在与那声音简短的交谈中，我脑中闪过了我抱着我的Minnaloushe奔跑的画面，我会利用他们，然后逃离他们。我不会归属任何人，我只希望实现我那痴想。</p><hr><p>后来五日，都是彻夜未眠，双目盯着那道缝隙的方向，盼望着，盼望着，代表着一日之始的灯光终于传来，于是那日子在我心中又近了些。本来已经有些厌食的我开始逼迫自己吃下每日送来的浆糊，以便自己到时候还有体力与两个不同势力的人对抗。</p><p>于是，那心心念念的第五日终于到了。</p><p>那日的清晨，我等待了许久也没有灯光，想必是他们已经动手了吧。过了不知多久，我在黑夜里玩着从曾经读过的漫画中学来的数质数的游戏使自己尽可能保持冷静，终于，那铁门外传出一阵撞击声，随之朝里应声倒下，震起的尘埃使外面的手电筒光芒产生了丁达尔效应。</p><p>面前是一张似乎熟悉的脸，那大概是那日来找我的警卫，他穿着平常的警卫服，只是右肩系了条黑带子，并且胸口还沾着一些血迹。</p><p>“快点，把这个系在胳膊上，然后拿好这把枪，我们去把大厅剩下的家伙给干掉。”</p><p>我接过他手中的黑布条并照做，又检查了他递给我的枪支能否正常使用。</p><p>“好了，快点我们走。”他朝我挥挥手，而我并不决定回应他。</p><p>“干什么，你不会想反悔吧，你现在的行为已经是谋反了。”</p><p>“没什么，我只是觉得大厅恐怕很危险。”</p><p>“没事的，那边应该不剩多少人了，要是不快点增援可能就要来了。”</p><p>他转过身向前跑去，并朝身后的我挥了挥手。</p><p>意识告诉我这是好时机。于是，我举起枪，扣动扳机，那个来自混沌分裂者的反叛军应身倒地。</p><p>“既然已经反叛了，再反叛一次也无所谓了吧。”我拿走了他身上的权限卡。</p><p>迈步出门，奔向收容建筑的方向，落下的雪籽一粒一粒打击在我的脸上，那感觉已经许久没有过了——自从我被禁闭以来。</p><p>终于，我走入那栋熟悉的建筑，熟视无睹地跨过地上的尸体。宛如每天早晨给他们带来食物一般，我走到了那间收容室外，打开了那扇久违的玻璃门。</p><p>孩子们用惊恐的眼神盯着我，似乎他们都明白了外面发生着什么恐怖的事。我一言不发地走了进去，抱起了Minnaloushe。其他孩子们也向我围过来，像是一群无助而无辜的羔羊。我下意识地摸了摸身边那个孩子的头，用带着哭腔的语气说道：“我只能带一个走啊。如果我成功出去了，我会来救你们的。”说这句话时我知道它大概率不可能实现，可对那时的我而言，一句谎言已经算不上什么了。说罢，我又带上了那扇门，祈祷它还能起到什么保护的作用，然后向外奔去。</p><p>Minnaloushe的体温透过单薄的收容服传到我的手上，我用手指撩了撩她散乱的头发，她的脸还是那样的冰冷。此时的她面无表情，恐惧使我感受不到此刻她灵魂的舞蹈，她的躯体更像是一件玩物。</p><p>原本在我眼中庞大到臃肿的站点现在似乎变得小了起来，我似乎并没有用多久就望到了界河与河畔的小船。一路上我一直说着安慰的话，尽管她没有落下任何眼泪。她只是一个劲地问我：“那个童话的结局你满意吗？”</p><p>我来不及思考并回答他，身后突然传来一阵枪声，我感到自己的后背如同被烙铁击中一般。</p><p>“看来是中弹了啊，没事，我们马上就要到了。”</p><p>我回头看了一眼，却发现人数远远超过了我的预期，这大概就是那所谓的增援吧，只是这样的大动干戈的行为似乎仍然是杀鸡儆猴式的——考虑到这次叛乱参与者也不过上十人。</p><p>那船上的两个人朝我招了招手，我以为他们是叫我快一些，便加快了脚步。在我试图抬起右腿发力的那一瞬间，又一枚子弹射入了我的左肩，这使我左手中的枪滚落到了地上，这时我又抬起头才发现那船已经渐渐远去了。原来那招手的含义是“我们要逃命了，抱歉”吗？可是河岸就在眼前，我只能继续向前奔去，便用双脚踏破了河面的那层薄冰。</p><p>渐渐地，我感到自己的脚底空无一物，而河水自胸口而淹没了头顶，我试图在冰冷的河水里睁开眼却失败了，我不知道我的Minnaloushe是否在发抖，因为此刻就连她的体温也消失了，仿佛与那河水融为一体。</p><p>我想要划动双臂使自己漂浮起来，却感到如同手掌敲击在石头上的触觉，震的我伤口生疼，便一下子睁开了眼，才发现四周竟然被冰所包围，仅仅是我坠入水中的一瞬间，河水便包围着我凝作了如同铁幕一般的冰面。</p><p>我看向环抱中那个与冰一样冷的少女，此刻她的身体近乎透明，我能看到她纤细的骨骼微微的颤抖。这大概就是她的异常能力吧。她向我转过身来，用冰冷的嘴唇贴了我的嘴唇，二人腔内最后的空气化作了一阵无言的气泡。这条河或许永远不会开冻了，但这不是我需要关心的了，再过不到一分钟，我大概就会溺死在冰与水中，一如那与Minnaloushe溺死在虚无太空中的人儿。可此刻我感到的只有平静，没有顾虑的平静，从她冰冷的嘴唇传来的万古平静。</p><p>“我说啊，这大概就是那个童话的答案，这份答案，我认为是值得的。”我在心里默默对她说道。</p><p>我曾以为童话都是虚无而经不起疑问，现在才明白那则简短的故事已然概括了我的一生。于是，在生命的最后，再也分不清Minnaloushe与我，我就这样成为了童话的主角。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>成功上线</title>
      <link href="/posts/bdf10523.html"/>
      <url>/posts/bdf10523.html</url>
      
        <content type="html"><![CDATA[<p>成功上线纪念2023 9 22<br>我也有自己的博客了<br>我的qq和微信</p><p><img src="https://picdl.sunbangyan.cn/2023/12/25/d42c160e65960d1f865d4f079af86c8f.jpeg" alt="2e710f1fea3fe1fc321d8f8a4e6d46f"><br><img src="https://picdl.sunbangyan.cn/2023/12/25/bdf6ba11c189900801f58cd7802abbd5.jpeg" alt="d8b77ee07123f9bf4d1114694f8a7d3"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>啊啊啊啊啊啊啊</title>
      <link href="/posts/8305156f.html"/>
      <url>/posts/8305156f.html</url>
      
        <content type="html"><![CDATA[<p>博客好难搞…<br>cao（一种植物）<br>不管了上线先，后面慢慢改<br>上线GITEE还要实名认证<br>越搞越糟心，一些bug已经超出我理解了<br>![崩溃](E:\BLOG-WAN\hexo\blog\public\images)</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法与外挂标签写法汇总</title>
      <link href="/posts/2013454d.html"/>
      <url>/posts/2013454d.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-Markdown语法自带格式"><a href="#1-Markdown语法自带格式" class="headerlink" title="1.Markdown语法自带格式"></a>1.Markdown语法自带格式</h1><div class="note info flat"><p>参考：<a href="https://blog.csdn.net/u014061630/article/details/81359144">Markdown语法图文全面详解(10分钟学会)</a></p></div><div class="note warning flat"><p>注意：此页面偶尔会存在CSS冲突问题!</p></div><h2 id="1-1-代码块"><a href="#1-1-代码块" class="headerlink" title="1.1 代码块"></a>1.1 代码块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">\```shell</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br><span class="line">\```</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-2-多级标题"><a href="#1-2-多级标题" class="headerlink" title="1.2 多级标题"></a>1.2 多级标题</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># H1</span></span><br><span class="line"><span class="section">## H2</span></span><br><span class="line"><span class="section">### H3</span></span><br><span class="line"><span class="section">#### H4</span></span><br><span class="line"><span class="section">##### H5</span></span><br><span class="line"><span class="section">###### H6</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>见本文章标题!</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-3-文字样式"><a href="#1-3-文字样式" class="headerlink" title="1.3 文字样式"></a>1.3 文字样式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线演示<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">文字<span class="strong">**加粗**</span>演示</span><br><span class="line"></span><br><span class="line">文字<span class="emphasis">*斜体*</span>演示</span><br><span class="line"></span><br><span class="line">文本<span class="code">`高亮`</span>演示</span><br><span class="line"></span><br><span class="line">文本~~删除~~线演示</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span> = <span class="string">5</span>&gt;</span></span>5号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">blue</span>&gt;</span></span>蓝色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">MistyRose</span>&gt;</span></span>这里的背景色是：MistyRosen，此处输入任意想输入的内容<span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p><u>下划线演示</u></p><p>文字<strong>加粗</strong>演示</p><p>文字<em>斜体</em>演示</p><p>文本<code>高亮</code>演示</p><p>文本<del>删除</del>线演示</p><font size = 5>5号字</font><font face="黑体">黑体</font><font color=blue>蓝色</font><table><tr><td bgcolor=MistyRose>这里的背景色是：MistyRosen，此处输入任意想输入的内容</td></tr></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note info flat"><p>上述要点可参考:<a href="https://blog.csdn.net/qq_43732429/article/details/108034518">【Markdown语法】字体颜色大小及文字底色设置</a></p></div><h2 id="1-4-引用"><a href="#1-4-引用" class="headerlink" title="1.4 引用"></a>1.4 引用</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt;  Java</span></span><br><span class="line"><span class="quote">&gt; 二级引用演示</span></span><br><span class="line"><span class="quote">&gt; MySQL</span></span><br><span class="line"><span class="quote">&gt; &gt;外键</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;事务</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;<span class="strong">**行级锁**</span>(引用内部一样可以用格式)</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">&gt; ....</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><blockquote><p> Java<br>二级引用演示<br>MySQL</p><blockquote><p>外键</p><p>事务</p><p><strong>行级锁</strong>(引用内部一样可以用格式)</p></blockquote><p>….</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-5-分割线"><a href="#1-5-分割线" class="headerlink" title="1.5 分割线"></a>1.5 分割线</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><hr><hr><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-6-列表-跟空格都可以"><a href="#1-6-列表-跟空格都可以" class="headerlink" title="1.6 列表(*,+,-跟空格都可以)"></a>1.6 列表(*,+,-跟空格都可以)</h2><h3 id="1-6-1-无序列表"><a href="#1-6-1-无序列表" class="headerlink" title="1.6.1 无序列表"></a>1.6.1 无序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> Java</span><br><span class="line"><span class="bullet">*</span> Python</span><br><span class="line"><span class="bullet">*</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> Java</span><br><span class="line"><span class="bullet">+</span> Python</span><br><span class="line"><span class="bullet">+</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> Java</span><br><span class="line"><span class="bullet">-</span> Python</span><br><span class="line"><span class="bullet">-</span> ...</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="1-6-2-有序列表"><a href="#1-6-2-有序列表" class="headerlink" title="1.6.2 有序列表"></a>1.6.2 有序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 注意后面有空格</span></span><br><span class="line"><span class="bullet">1.</span> </span><br><span class="line"><span class="bullet">2.</span> </span><br><span class="line"><span class="bullet">3.</span> </span><br><span class="line"><span class="bullet">4.</span> </span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li></li><li></li><li></li><li></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-7-图片"><a href="#1-7-图片" class="headerlink" title="1.7 图片"></a>1.7 图片</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 本地图片</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/assets/pusheencode.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;示例图片&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:50%;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="section"># 在线图片</span></span><br><span class="line">![<span class="string">code</span>](<span class="link">https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>本地图片:<br><img src="/assets/pusheencode.webp" alt="示例图片" style="zoom:50%;" /><br>在线图片:<br><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png" alt="code"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-8-表格"><a href="#1-8-表格" class="headerlink" title="1.8 表格"></a>1.8 表格</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 项目标号 | 资金     | 备注 |</span><br><span class="line">| -------- | -------- | ---- |</span><br><span class="line">| 1        | 100，000 | 无   |</span><br><span class="line">| 2        | 200，000 | 无   |</span><br><span class="line">| 3        | 300,600  | 重要 |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><div class="table-container"><table><thead><tr><th>项目标号</th><th>资金</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>100，000</td><td>无</td></tr><tr><td>2</td><td>200，000</td><td>无</td></tr><tr><td>3</td><td>300,600</td><td>重要</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-9-公式"><a href="#1-9-公式" class="headerlink" title="1.9 公式"></a>1.9 公式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\Gamma(z)=\int<span class="emphasis">_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt.</span></span><br><span class="line"><span class="emphasis">$$</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><script type="math/tex; mode=display">\Gamma(z)=\int_0^\infty t^{z-1}e^{-t}dt.</script><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="2-Butterfly外挂标签"><a href="#2-Butterfly外挂标签" class="headerlink" title="2.Butterfly外挂标签"></a>2.Butterfly外挂标签</h1><div class="note info flat"><p>这部分参考安知鱼:<a href="https://anzhiy.cn/posts/7d58.html">基于Butterfly的外挂标签引入</a></p></div><h2 id="2-1-行内文本样式-text"><a href="#2-1-行内文本样式-text" class="headerlink" title="2.1 行内文本样式 text"></a>2.1 行内文本样式 text</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% u 文本内容 %&#125;</span><br><span class="line">&#123;% emp 文本内容 %&#125;</span><br><span class="line">&#123;% wavy 文本内容 %&#125;</span><br><span class="line">&#123;% del 文本内容 %&#125;</span><br><span class="line">&#123;% kbd 文本内容 %&#125;</span><br><span class="line">&#123;% psw 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line"><span class="bullet">2.</span> 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line"><span class="bullet">3.</span> 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line"><span class="bullet">4.</span> 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line"><span class="bullet">5.</span> 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line"><span class="bullet">6.</span> 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-2-行内文本-span"><a href="#2-2-行内文本-span" class="headerlink" title="2.2 行内文本 span"></a>2.2 行内文本 span</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% span 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<br><span class='p center logo large'>Volantis</span><br><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-3-段落文本-p"><a href="#2-3-段落文本-p" class="headerlink" title="2.3 段落文本 p"></a>2.3 段落文本 p</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% p 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% p red, 红色 %&#125;、&#123;% p yellow, 黄色 %&#125;、&#123;% p green, 绿色 %&#125;、&#123;% p cyan, 青色 %&#125;、&#123;% p blue, 蓝色 %&#125;、&#123;% p gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% p center logo large, Volantis %&#125;</span><br><span class="line">&#123;% p center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<p class='p red'>红色</p>、<p class='p yellow'>黄色</p>、<p class='p green'>绿色</p>、<p class='p cyan'>青色</p>、<p class='p blue'>蓝色</p>、<p class='p gray'>灰色</p>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<p class='p center logo large'>Volantis</p><p class='p center small'>A Wonderful Theme for Hexo</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-4-引用note"><a href="#2-4-引用note" class="headerlink" title="2.4 引用note"></a>2.4 引用note</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">通用配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">语法格式</button></li><li class="tab"><button type="button" data-href="#分栏-3">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-4">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-5">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  style: simple</span><br><span class="line">  icons: false</span><br><span class="line">  border<span class="emphasis">_radius: 3</span></span><br><span class="line"><span class="emphasis">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line"><span class="emphasis">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line"><span class="emphasis">  light_</span>bg<span class="emphasis">_offset: 0</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 自带icon</span></span><br><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"><span class="section"># 外部icon</span></span><br><span class="line">&#123;% note [color] [icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.自带icon</p><div class="table-container"><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / primary / success / info / warning / danger ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】不显示 icon</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table></div><p>2.外部icon</p><div class="table-container"><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / blue / pink / red / purple / orange / green ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】可配置自定义 icon (只支持 fontawesome 图标, 也可以配置 no-icon )</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note simple %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><br>2.<code>modern</code>样式<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note modern %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default modern %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success modern %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning modern %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger modern %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></p><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note flat %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note disabled %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default disabled %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary disabled %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success disabled %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info disabled %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning disabled %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger disabled %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default no-icon %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success no-icon %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info no-icon %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning no-icon %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger no-icon %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>2.<code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue no-icon %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink no-icon %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red no-icon %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple no-icon %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green no-icon %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-5"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note simple"><p>默认 提示块标签</p></div><div class="note default simple"><p>default 提示块标签</p></div><div class="note primary simple"><p>primary 提示块标签</p></div><div class="note success simple"><p>success 提示块标签</p></div><div class="note info simple"><p>info 提示块标签</p></div><div class="note warning simple"><p>warning 提示块标签</p></div><div class="note danger simple"><p>danger 提示块标签</p></div>2.`modern`样式<div class="note modern"><p>默认 提示块标签</p></div><div class="note default modern"><p>default 提示块标签</p></div><div class="note primary modern"><p>primary 提示块标签</p></div><div class="note success modern"><p>success 提示块标签</p></div><div class="note info modern"><p>info 提示块标签</p></div><div class="note warning modern"><p>warning 提示块标签</p></div><div class="note danger modern"><p>danger 提示块标签</p></div><p>3.<code>flat</code>样式</p><div class="note flat"><p>默认 提示块标签</p></div><div class="note default flat"><p>default 提示块标签</p></div><div class="note primary flat"><p>primary 提示块标签</p></div><div class="note success flat"><p>success 提示块标签</p></div><div class="note info flat"><p>info 提示块标签</p></div><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div><p>4.<code>disabled</code>样式</p><div class="note disabled"><p>默认 提示块标签</p></div><div class="note default disabled"><p>default 提示块标签</p></div><div class="note primary disabled"><p>primary 提示块标签</p></div><div class="note success disabled"><p>success 提示块标签</p></div><div class="note info disabled"><p>info 提示块标签</p></div><div class="note warning disabled"><p>warning 提示块标签</p></div><div class="note danger disabled"><p>danger 提示块标签</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>默认 提示块标签</p></div><div class="note default no-icon flat"><p>default 提示块标签</p></div><div class="note primary no-icon flat"><p>primary 提示块标签</p></div><div class="note success no-icon flat"><p>success 提示块标签</p></div><div class="note info no-icon flat"><p>info 提示块标签</p></div><div class="note warning no-icon flat"><p>warning 提示块标签</p></div><div class="note danger no-icon flat"><p>danger 提示块标签</p></div>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note icon-padding simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>2.<code>modern</code>样式</p><div class="note icon-padding modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>3.<code>flat</code>样式</p><div class="note icon-padding flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>4.<code>disabled</code>样式</p><div class="note icon-padding disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding disabled"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding disabled"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021年快到了….</p></div><div class="note pink no-icon flat"><p>小心开车 安全至上</p></div><div class="note red no-icon flat"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石头布</p></div><div class="note green no-icon flat"><p>前端最讨厌的浏览器</p></div>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-5-上标标签-tip"><a href="#2-5-上标标签-tip" class="headerlink" title="2.5 上标标签 tip"></a>2.5 上标标签 tip</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: success,error,warning,bolt,ban,home,sync,cogs,key,bell</li><li><code>自定义图标</code>: 支持fontawesome。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip %&#125;default&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip info %&#125;info&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip error %&#125;error&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip warning %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban %&#125;ban&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip home %&#125;home&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip sync %&#125;sync&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip key %&#125;key&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bell %&#125;bell&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="tip "><p>default</p></div><div class="tip info"><p>info</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-6-动态标签-anima"><a href="#2-6-动态标签-anima" class="headerlink" title="2.6 动态标签 anima"></a>2.6 动态标签 anima</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><div class="note info flat"><ol><li>将所需的CSS类添加到图标（或DOM中的任何元素）。</li><li>对于父级悬停样式，需要给目标元素添加指定CSS类，同时还要给目标元素的父级元素添加CSS类<code>faa-parent animated-hover</code>。（详情见示例及示例源码）<br>You can regulate the speed of the animation by adding the CSS class or . faa-fastfaa-slow</li><li>可以通过给目标元素添加CSS类<code>faa-fast</code>或<code>faa-slow</code>来控制动画快慢。</li></ol></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>   1.On DOM load（当页面加载时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>2.调整动画速度<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated faa-fast %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated faa-slow %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><br>3.On hover（当鼠标悬停时显示动画）<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated-hover %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated-hover %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><br>4.On parent hover（当鼠标悬停在父级元素时显示动画）<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-horizontal&quot;</span>&gt;</span></span>warning<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-flash&quot;</span>&gt;</span></span>ban<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.On DOM load（当页面加载时显示动画）</p><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div>2.调整动画速度<div class="tip warning faa-horizontal animated faa-fast"><p>warning</p></div><div class="tip ban faa-flash animated faa-slow"><p>ban</p></div>3.On hover（当鼠标悬停时显示动画）<div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div>4.On parent hover（当鼠标悬停在父级元素时显示动画）<div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div><div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-7-复选列表-checkbox"><a href="#2-7-复选列表-checkbox" class="headerlink" title="2.7 复选列表 checkbox"></a>2.7 复选列表 checkbox</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: plus, minus, times</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-8-单选列表-radio"><a href="#2-8-单选列表-radio" class="headerlink" title="2.8 单选列表 radio"></a>2.8 单选列表 radio</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 纯文本测试 %&#125;</span><br><span class="line">&#123;% radio checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% radio green, 绿色 %&#125;</span><br><span class="line">&#123;% radio yellow, 黄色 %&#125;</span><br><span class="line">&#123;% radio cyan, 青色 %&#125;</span><br><span class="line">&#123;% radio blue, 蓝色 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-9-时间轴-timeline"><a href="#2-9-时间轴-timeline" class="headerlink" title="2.9 时间轴 timeline"></a>2.9 时间轴 timeline</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间线标题（可选）[,color] %&#125;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>title</code>:标题/时间线</li><li><code>color</code>:<code>timeline</code>颜色:default(留空) / blue / pink / red / purple / orange / green</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间轴样式,blue %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-07-24 [<span class="string">2.6.6 -&gt; 3.0</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 如果有 <span class="code">`hexo-lazyload-image`</span> 插件，需要删除并重新安装最新版本，设置 <span class="code">`lazyload.isSPA: true`</span>。</span><br><span class="line"><span class="bullet">2.</span> 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <span class="code">`use_cdn: true`</span> 则需要删除。</span><br><span class="line"><span class="bullet">3.</span> 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class="line"><span class="bullet">4.</span> 2.x 版本的置顶 <span class="code">`top: true`</span> 改为了 <span class="code">`pin: true`</span>，并且同样适用于 <span class="code">`layout: page`</span> 的页面。</span><br><span class="line"><span class="bullet">5.</span> 如果使用了 <span class="code">`hexo-offline`</span> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-05-15 [<span class="string">2.6.3 -&gt; 2.6.6</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6</span>) --&gt;</span><br><span class="line"></span><br><span class="line">不需要额外处理。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-04-20 [<span class="string">2.6.2 -&gt; 2.6.3</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 全局搜索 <span class="code">`seotitle`</span> 并替换为 <span class="code">`seo_title`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的索引规则有变，使用 group 组件的文章内，<span class="code">`group: group_name`</span> 对应的组件名必须是 <span class="code">`group_name`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的列表名优先显示文章的 <span class="code">`short_title`</span> 其次是 <span class="code">`title`</span>。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴样式</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-07-24 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases">2.6.6 -&gt; 3.0</a></p></div></div><div class='timeline-item-content'><ol><li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li><li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li><li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li><li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li><li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-05-15 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6">2.6.3 -&gt; 2.6.6</a></p></div></div><div class='timeline-item-content'><p>不需要额外处理。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-04-20 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3">2.6.2 -&gt; 2.6.3</a></p></div></div><div class='timeline-item-content'><ol><li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li><li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li><li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li></ol></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-10-链接卡片-link"><a href="#2-10-链接卡片-link" class="headerlink" title="2.10 链接卡片 link"></a>2.10 链接卡片 link</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 标题, 链接, 图片链接（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-11-按钮-btns"><a href="#2-11-按钮-btns" class="headerlink" title="2.11 按钮 btns"></a>2.11 按钮 btns</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns 样式参数 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>圆角样式：rounded, circle</li><li>增加文字样式：可以在容器内增加 <code>&lt;b&gt;</code>标题<code>&lt;/b&gt;</code>和<code>&lt;p&gt;</code>描述文字<code>&lt;/p&gt;</code></li><li>布局方式：<br>默认为自动宽度，适合视野内只有一两个的情况。</li></ol><div class="table-container"><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>wide</td><td>宽一点的按钮</td></tr><tr><td>fill</td><td>填充布局，自动铺满至少一行，多了会换行</td></tr><tr><td>center</td><td>居中，按钮之间是固定间距</td></tr><tr><td>around</td><td>居中分散</td></tr><tr><td>grid2</td><td>等宽最多2列，屏幕变窄会适当减少列数</td></tr><tr><td>grid3</td><td>等宽最多3列，屏幕变窄会适当减少列数</td></tr><tr><td>grid4</td><td>等宽最多4列，屏幕变窄会适当减少列数</td></tr><tr><td>grid5</td><td>等宽最多5列，屏幕变窄会适当减少列数</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle grid5 %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>2.或者含有图标的按钮<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns rounded grid5 %&#125;</span><br><span class="line">&#123;% cell 下载源码, /, fas fa-download %&#125;</span><br><span class="line">&#123;% cell 查看文档, /, fas fa-book-open %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></p><p>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle center grid5 %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p red, 专业版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p green, 免费版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><div class="btns circle grid5">            <a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>          </div>2.或者含有图标的按钮<div class="btns rounded grid5">            <a class="button" href='/' title='下载源码'><i class='fas fa-download'></i>下载源码</a><a class="button" href='/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中<div class="btns circle center grid5">            <a href='https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p red'>专业版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png'></a><a href='https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p green'>免费版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png'></a>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-12-github卡片-ghcard"><a href="#2-12-github卡片-ghcard" class="headerlink" title="2.12 github卡片 ghcard"></a>2.12 github卡片 ghcard</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% ghcard 用户名, 其它参数（可选） %&#125;</span><br><span class="line">&#123;% ghcard 用户名/仓库, 其它参数（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>使用<code>,</code>分割各个参数。写法为：<code>参数名=参数值</code><br>以下只写几个常用参数值。</p><div class="table-container"><table><thead><tr><th><strong>参数名</strong></th><th>取值</th><th>释义</th></tr></thead><tbody><tr><td>hide</td><td>stars,commits,prs,issues,contribs</td><td>隐藏指定统计</td></tr><tr><td>count_private</td><td>true</td><td>将私人项目贡献添加到总提交计数中</td></tr><tr><td>show_icons</td><td>true</td><td>显示图标</td></tr><tr><td>theme</td><td>查阅:<a href="https://github.com/anuraghazra/github-readme-stats/blob/master/themes/README.md">Available Themes</a></td><td>主题</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.用户信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard fomalhaut1998 %&#125; | &#123;% ghcard fomalhaut1998, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=buefy %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=onedark %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=algolia %&#125; | &#123;% ghcard fomalhaut1998, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><p>2.仓库信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=buefy %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=onedark %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=algolia %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.用户信息卡片</p><div class="table-container"><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=calm&show_owner=true"/></a></td></tr></tbody></table></div><p>2.仓库信息卡片</p><div class="table-container"><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=calm&show_owner=true"/></a></td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-13-github徽标-ghbdage"><a href="#2-13-github徽标-ghbdage" class="headerlink" title="2.13 github徽标 ghbdage"></a>2.13 github徽标 ghbdage</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage [right],[left],[logo]||[color],[link],[title]||[option] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>left</code>：徽标左边的信息，必选参数。</li><li><code>right</code>: 徽标右边的信息，必选参数，</li><li><code>logo</code>：徽标图标，图标名称详见<a href="https://simpleicons.org/">simpleicons</a>，可选参数。</li><li><code>color</code>：徽标右边的颜色，可选参数。</li><li><code>link</code>：指向的链接，可选参数。</li><li><code>title</code>：徽标的额外信息，可选参数。主要用于优化SEO，但<code>object</code>标签不会像<code>a</code>标签一样在鼠标悬停显示<code>title</code>信息。</li><li><code>option</code>：自定义参数，支持<a href="https://shields.io/">shields.io</a>的全部API参数支持，具体参数可以参看上文中的拓展写法示例。形式为<code>name1=value2&amp;name2=value2</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.基本参数,定义徽标左右文字和图标</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Theme,Butterfly %&#125;</span><br><span class="line">&#123;% bdage Frame,Hexo,hexo %&#125;</span><br></pre></td></tr></table></figure><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage CDN,JsDelivr,jsDelivr||abcdef,https://metroui.org.ua/index.html,本站使用JsDelivr为静态资源提供CDN加速 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割</span><br><span class="line">&#123;% bdage Source,GitHub,GitHub||,https://github.com/ %&#125;</span><br></pre></td></tr></table></figure><p>3.拓展参数，支持shields的API的全部参数内容</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Hosted,Vercel,Vercel||brightgreen,https://vercel.com/,本站采用双线部署，默认线路托管于Vercel||style=social&amp;logoWidth=20 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割</span><br><span class="line">&#123;% bdage Hosted,Vercel,Vercel||||style=social&amp;logoWidth=20&amp;logoColor=violet %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.基本参数,定义徽标左右文字和图标</p><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Butterfly-Theme-orange?logo=&color=orange&link=&"></object><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Hexo-Frame-orange?logo=hexo&color=orange&link=&"></object><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><object class="ghbdage" style="margin-inline:5px" title="本站使用JsDelivr为静态资源提供CDN加速" standby="loading..." data="https://img.shields.io/badge/JsDelivr-CDN-orange?logo=jsDelivr&color=abcdef&link=https://metroui.org.ua/index.html&"></object>//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割<object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/&"></object><p>3.拓展参数，支持shields的API的全部参数内容</p><object class="ghbdage" style="margin-inline:5px" title="本站采用双线部署，默认线路托管于Vercel" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=brightgreen&link=https://vercel.com/&style=social&logoWidth=20"></object>//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割<object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=orange&link=&style=social&logoWidth=20&logoColor=violet"></object><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-14-网站卡片-sites"><a href="#2-14-网站卡片-sites" class="headerlink" title="2.14 网站卡片 sites"></a>2.14 网站卡片 sites</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png, description=简约风格 %&#125;</span><br><span class="line">&#123;% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="site-card-group"><a class="site-card" href="https://fomalhaut1998.com"><div class="img"><img src="https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png"/><span class="title">fomalhaut1998</span><span class="desc">简约风格</span></div></a><a class="site-card" href="https://inkss.cn"><div class="img"><img src="https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg"/><span class="title">inkss</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://blog.mhuig.top"><div class="img"><img src="https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png"/><span class="title">MHuiG</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://colsrch.top"><div class="img"><img src="https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg"/><span class="title">Colsrch</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://linhk1606.github.io"><div class="img"><img src="https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png"/></div><div class="info"><img src="https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png"/><span class="title">Linhk1606</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-15-行内图片-inlineimage"><a href="#2-15-行内图片-inlineimage" class="headerlink" title="2.15 行内图片 inlineimage"></a>2.15 行内图片 inlineimage</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inlineimage 图片链接, height=高度（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>高度</code>：height=20px</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif %&#125; 一段话。</span><br><span class="line"></span><br><span class="line">这又是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif, height=40px %&#125; 一段话。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>这是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/> 一段话。</p><p>这又是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif" style="height:40px;"/> 一段话。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-16-单张图片-image"><a href="#2-16-单张图片-image" class="headerlink" title="2.16 单张图片 image"></a>2.16 单张图片 image</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image 链接, width=宽度（可选）, height=高度（可选）, alt=描述（可选）, bg=占位颜色（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>图片宽度高度：width=300px, height=32px</li><li>图片描述：alt=图片描述（butterfly需要在主题配置文件中开启图片描述）</li><li>占位背景色：bg=#f2f2f2</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.添加描述：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><br>2.指定宽度<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px %&#125;</span><br></pre></td></tr></table></figure><br>3.指定宽度并添加描述：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><br>4.设置占位背景色：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, bg=#1D0C04, alt=优化不同宽度浏览的观感 %&#125;</span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.添加描述：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>2..指定宽度<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" style="width:400px;"/></div></div>3.指定宽度并添加描述：<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。" style="width:400px;"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>4.设置占位背景色：<div class="img-wrap"><div class="img-bg" style="background:#1D0C04"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="优化不同宽度浏览的观感" style="width:400px;"/></div><span class="image-caption">优化不同宽度浏览的观感</span></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-17-音频-audio"><a href="#2-17-音频-audio" class="headerlink" title="2.17 音频 audio"></a>2.17 音频 audio</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio 音频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="audio"><audio controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-18-视频-video"><a href="#2-18-视频-video" class="headerlink" title="2.18 视频 video"></a>2.18 视频 video</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video 视频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>对齐方向</code>：left, center, right</li><li><code>列数</code>：逗号后面直接写列数，支持 1 ～ 4 列。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.100%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br></pre></td></tr></table></figure><p>2.50%宽度<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 2 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><br>3.25%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 4 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.100%宽度</p><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div>2.50%宽度<div class="videos" col='2'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div>3.25%宽度<div class="videos" col='4'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-19-相册-gallery"><a href="#2-19-相册-gallery" class="headerlink" title="2.19 相册 gallery"></a>2.19 相册 gallery</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>2.gallery 相册<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 圖片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>gallerygroup 相册图库</li></ul><div class="table-container"><table><thead><tr><th>参数名</th><th>释义</th></tr></thead><tbody><tr><td>name</td><td>图库名字</td></tr><tr><td>description</td><td>图库描述</td></tr><tr><td>link</td><td>链接到对应相册的地址</td></tr><tr><td>img-url</td><td>图库封面</td></tr></tbody></table></div><ul><li><p>gallery 相册</p><p>区别于旧版的Gallery相册,新的Gallery相册会自动根据图片长度进行排版，书写也更加方便，与markdown格式一样。可根据需要插入到相应的md。无需再自己配置长宽。<strong>建议在粘贴时故意使用长短、大小、横竖不一的图片</strong>，会有更好的效果。（尺寸完全相同的图片只会平铺输出，效果很糟糕）</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup MC 在Rikkaの六花服务器里留下的足迹 &#x27;/gallery/MC/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup Gundam 哦咧哇gundam哒！ &#x27;/gallery/Gundam/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png %&#125;</span><br><span class="line">&#123;% galleryGroup I-am-Akilar 某种意义上也算自拍吧 &#x27;/gallery/I-am-Akilar/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg</span>)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.gallerygroup 相册图库</p><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">MC</div>  <p>在Rikkaの六花服务器里留下的足迹</p>  <a href='/gallery/MC/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Gundam</div>  <p>哦咧哇gundam哒！</p>  <a href='/gallery/Gundam/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">I-am-Akilar</div>  <p>某种意义上也算自拍吧</p>  <a href='/gallery/I-am-Akilar/'></a>  </figcaption>  </figure></div>2.gallery 相册<div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg" alt=""></p>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-20-折叠框-folding"><a href="#2-20-折叠框-folding" class="headerlink" title="2.20 折叠框 folding"></a>2.20 折叠框 folding</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 参数（可选）, 标题 %&#125;</span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><br><!-- tab 参数配置 --></p><ol><li><p><code>颜色</code>：blue, cyan, green, yellow, red</p></li><li><p><code>状态</code>：状态填写 open 代表默认打开。</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 查看图片测试 %&#125;</span><br><span class="line"></span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line"></span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class="line">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> haha</span><br><span class="line"><span class="bullet">-</span> hehe</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class="line"></span><br><span class="line">hahaha <span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;height:24px&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><details class="folding-tag" ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt=""></p>              </div>            </details><details class="folding-tag" cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details class="folding-tag" green><summary> 查看代码测试 </summary>              <div class='content'>              <p>假装这里有代码块（代码块没法嵌套代码块）</p>              </div>            </details><details class="folding-tag" yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details class="folding-tag" red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-21-分栏-tab"><a href="#2-21-分栏-tab" class="headerlink" title="2.21 分栏 tab"></a>2.21 分栏 tab</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p>Unique name :</p><ul><li><p>选项卡块标签的唯一名称，不带逗号。</p></li><li><p>将在#id中用作每个标签及其索引号的前缀。</p></li><li><p>如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</p></li><li><p>仅当前帖子/页面的URL必须是唯一的！</p></li></ul></li><li><p>[index]:</p><ul><li><p>活动选项卡的索引号。</p></li><li><p>如果未指定，将选择第一个标签（1）。</p></li><li><p>如果index为-1，则不会选择任何选项卡。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[Tab caption]:</p><ul><li><p>当前选项卡的标题。</p></li><li><p>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</p></li><li><p>如果未指定标题，但指定了图标，则标题将为空。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[@icon]:</p><ul><li><p>FontAwesome图标名称（全名，看起来像“ fas fa-font”）</p></li><li><p>可以指定带空格或不带空格；</p></li><li><p>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</p></li><li><p>可选参数。</p></li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.Demo 1 - 预设选择第一个【默认】</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>2.Demo 2 - 预设选择tabs</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test2, 3 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>3.Demo 3 - 没有预设值</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test3, -1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line"><span class="strong">**只有图标 没有Tab名字**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.Demo 1 - 预设选择第一个【默认】</p><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>2.Demo 2 - 预设选择tabs</p><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>3.Demo 3 - 没有预设值</p><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-22-诗词标签-poem"><a href="#2-22-诗词标签-poem" class="headerlink" title="2.22 诗词标签 poem"></a>2.22 诗词标签 poem</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><ol><li><code>title</code>：诗词标题</li><li><code>author</code>：作者，可以不写</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class="line">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class="line">明月几时有？把酒问青天。</span><br><span class="line">不知天上宫阙，今夕是何年？</span><br><span class="line">我欲乘风归去，又恐琼楼玉宇，高处不胜寒。</span><br><span class="line">起舞弄清影，何似在人间？</span><br><span class="line"></span><br><span class="line">转朱阁，低绮户，照无眠。</span><br><span class="line">不应有恨，何事长向别时圆？</span><br><span class="line">人有悲欢离合，月有阴晴圆缺，此事古难全。</span><br><span class="line">但愿人长久，千里共婵娟。</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？</p><p>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-23-阿里图标-icon"><a href="#2-23-阿里图标-icon" class="headerlink" title="2.23 阿里图标 icon"></a>2.23 阿里图标 icon</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon [icon-xxxx],[font-size] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>icon-xxxx</code>：表示图标<code>font-class</code>,可以在自己的阿里矢量图标库项目的<code>font-class</code>引用方案内查询并复制。</li><li><code>font-size</code>：表示图标大小，直接填写数字即可，单位为<code>em</code>。图标大小默认值为<code>1em</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon icon-rat<span class="emphasis">_zi %&#125;&#123;% icon icon-rat,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-ox_</span>chou,3 %&#125;&#123;% icon icon-ox,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-tiger<span class="emphasis">_yin,5 %&#125;&#123;% icon icon-tiger,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rabbit_</span>mao,1 %&#125;&#123;% icon icon-rabbit,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dragon<span class="emphasis">_chen,3 %&#125;&#123;% icon icon-dragon,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-snake_</span>si,5 %&#125;&#123;% icon icon-snake,6 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-horse<span class="emphasis">_wu %&#125;&#123;% icon icon-horse,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-goat_</span>wei,3 %&#125;&#123;% icon icon-goat,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-monkey<span class="emphasis">_shen,5 %&#125;&#123;% icon icon-monkey,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rooster_</span>you %&#125;&#123;% icon icon-rooster,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dog<span class="emphasis">_xu,3 %&#125;&#123;% icon icon-dog,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-boar_</span>hai,5 %&#125;&#123;% icon icon-boar,6 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rat_zi"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rat"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-ox_chou"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-ox"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-tiger_yin"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-tiger"></use></svg><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rabbit_mao"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rabbit"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dragon_chen"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dragon"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-snake_si"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-snake"></use></svg><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-horse_wu"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-horse"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-goat_wei"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-goat"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-monkey_shen"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-monkey"></use></svg><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rooster_you"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rooster"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dog_xu"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dog"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-boar_hai"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-boar"></use></svg><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-24-特效标签wow"><a href="#2-24-特效标签wow" class="headerlink" title="2.24 特效标签wow"></a>2.24 特效标签wow</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow [animete],[duration],[delay],[offset],[iteration] %&#125;</span><br><span class="line">内容</span><br><span class="line">&#123;% endwow %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>animate</code>: 动画样式，效果详见<a href="https://animate.style/">animate.css参考文档</a></li><li><code>duration</code>: 选填项，动画持续时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>delay</code>: 选填项，动画开始的延迟时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>offset</code>: 选填项，开始动画的距离（相对浏览器底部）</li><li><code>iteration</code>: 选填项，动画重复的次数</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.flip动画效果。<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><br>2.zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><br>3.slideInRight动画效果，持续5s，延时5s<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__slideInRight,5s,5s %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note orange &#x27;fas fa-car&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`slideInRight`动画效果，持续`5s`，延时`5s`。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><br>4.heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__heartBeat,,5s,,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note red &#x27;fas fa-battery-half&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`heartBeat`动画效果，延时`5s`，重复`10`次。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.flip动画效果。</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>2.zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>3.slideInRight动画效果，持续5s，延时5s</p><div class='wow animate__slideInRight' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='' ><div class="note orange icon-padding modern"><i class="note-icon fas fa-car"></i><p><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。</p></div></div><p>4.heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。</p><div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='10' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-25-进度条-progress"><a href="#2-25-进度条-progress" class="headerlink" title="2.25  进度条 progress"></a>2.25  进度条 progress</h2><div class="note info flat"><p>进度条标签参考<a href="https://rongbuqiu.com/jdt.html">沂佰孜猫-给HEXO文章添加彩色进度条</a>。<br>源样式提取自<a href="https://zwying0814.gitbook.io/cuteen/">Cuteen</a>主题。</p></div><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress [width] [color] [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>width</code>: 0到100的阿拉伯数字</li><li><code>color</code>: 颜色，取值有red,yellow,green,cyan,blue,gray</li><li><code>text</code>:进度条上的文字内容</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress 10 red 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 30 yellow 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 50 green 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 70 cyan 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 90 blue 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 100 gray 进度条样式预览 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-red"  style="width: 10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow"  style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-26-注释-notation"><a href="#2-26-注释-notation" class="headerlink" title="2.26 注释 notation"></a>2.26 注释 notation</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota [label] , [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p><code>label</code>: 注释词汇</p></li><li><p><code>text</code>: 悬停显示的注解内容</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota 把鼠标移动到我上面试试 ,可以看到注解内容出现在顶栏 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><span class='nota' data-nota='可以看到注解内容出现在顶栏'>把鼠标移动到我上面试试</span></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-27-气泡注释-bubble"><a href="#2-27-气泡注释-bubble" class="headerlink" title="2.27 气泡注释 bubble"></a>2.27 气泡注释 bubble</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bubble [content] , [notation] ,[background-color] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>content</code>: 注释词汇</li><li><code>notation</code>: 悬停显示的注解内容</li><li><code>background-color</code>: 可选，气泡背景色。默认为“#71a4e3”</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的&#123;% bubble 兄弟相邻选择器,&quot;例如 h1 + p &#123;margin-top:50px;&#125;&quot; %&#125;，&#123;% bubble flex布局,&quot;Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;,&quot;#ec5830&quot; %&#125;，&#123;% bubble transform变换,&quot;transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。&quot;,&quot;#1db675&quot; %&#125;，animation的&#123;% bubble 贝塞尔速度曲线,&quot;贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋&quot;,&quot;#de4489&quot; %&#125;写法，还有今天刚看到的&#123;% bubble clip-path,&quot;clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。&quot;,&quot;#868fd7&quot; %&#125;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的<span class="bubble-content">兄弟相邻选择器</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#71a4e3;">例如 h1 + p {margin-top:50px;}</span>&lt;/span&gt;，<span class="bubble-content">flex布局</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#ec5830;">Flex 是 Flexible Box 的缩写，意为弹性布局”，用来为盒状模型提供最大的灵活性”</span>&lt;/span&gt;，<span class="bubble-content">transform变换</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#1db675;">transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。</span>&lt;/span&gt;，animation的<span class="bubble-content">贝塞尔速度曲线</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#de4489;">贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋</span>&lt;/span&gt;写法，还有今天刚看到的<span class="bubble-content">clip-path</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#868fd7;">clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。</span>&lt;/span&gt;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-28-引用文献-reference"><a href="#2-28-引用文献-reference" class="headerlink" title="2.28 引用文献 reference"></a>2.28 引用文献 reference</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% referto [id] , [literature] %&#125;</span><br><span class="line">&#123;% referfrom [id] , [literature] , [url] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p>referto 引用上标</p><ul><li><p><code>id</code>: 上标序号内容，需与referfrom标签的id对应才能实现跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li></ul></li><li><p>referfrom 引用出处</p><ul><li><p><code>id</code>: 序号内容，需与referto标签的id对应才能实现 跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li><li><p><code>url</code>: 引用的参考文献链接，可省略</p></li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Akilarの糖果屋(akilar.top)是一个私人性质的博客&#123;% referto &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27; %&#125;，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架&#123;% referto &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27; %&#125;，Butterfly主题&#123;% referto &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">本项目参考了Volantis&#123;% referto &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27; %&#125;的标签样式。引入<span class="code">`[tag].js`</span>，并针对<span class="code">`butterfly`</span>主题修改了相应的<span class="code">`[tag].styl`</span>。在此鸣谢<span class="code">`Volantis`</span>主题众开发者。</span><br><span class="line">主要参考内容包括各个volantis的内置标签插件文档&#123;% referto &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27; %&#125;</span><br><span class="line">Butterfly主题的各个衍生魔改&#123;% referto &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27; %&#125;&#123;% referto &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27; %&#125;&#123;% referto &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27; %&#125;&#123;% referto &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% referfrom &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27;,&#x27;https://jq.qq.com/?<span class="emphasis">_wv=1027&amp;k=pGLB2C0N&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27;,&#x27;https://hexo.io/zh-cn/docs/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27;,&#x27;https://butterfly.js.org/posts/21cfbf15/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27;,&#x27;https://volantis.js.org/v5/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27;,&#x27;https://volantis.js.org/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27;,&#x27;https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27;,&#x27;https://lovelijunyi.gitee.io/posts/c898.html&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27;,&#x27;https://github.com/l-lin/font-awesome-animation&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27;,&#x27;https://www.antmoe.com/posts/3b43914f/&#x27; %&#125;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>Akilarの糖果屋(akilar.top)是一个私人性质的博客<span class="hidden-anchor" id="referto_[1]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[1]">[1]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Akilarの糖果屋群聊简介</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架<span class="hidden-anchor" id="referto_[2]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[2]">[2]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Hexo中文文档</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;，Butterfly主题<span class="hidden-anchor" id="referto_[3]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[3]">[3]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档(一) 快速开始</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;</p><p>本项目参考了Volantis<span class="hidden-anchor" id="referto_[4]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[4]">[4]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">hexo-theme-volantis 标签插件</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;的标签样式。引入<code>[tag].js</code>，并针对<code>butterfly</code>主题修改了相应的<code>[tag].styl</code>。在此鸣谢<code>Volantis</code>主题众开发者。<br>主要参考内容包括各个volantis的内置标签插件文档<span class="hidden-anchor" id="referto_[5]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[5]">[5]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Volantis文档:内置标签插件</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;<br>Butterfly主题的各个衍生魔改<span class="hidden-anchor" id="referto_[6]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[6]">[6]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档:标签外挂（Tag Plugins</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;<span class="hidden-anchor" id="referto_[7]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[7]">[7]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小弋の生活馆全样式预览</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;<span class="hidden-anchor" id="referto_[8]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[8]">[8]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">l-lin-font-awesome-animation</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;<span class="hidden-anchor" id="referto_[9]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[9]">[9]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小康的butterfly主题使用文档</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;</p><div class="reference-source"><span class="hidden-anchor" id="referfrom_[1]"></span><a class="reference-anchor" href="#referto_[1]">[1]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://jq.qq.com/?_wv=1027&k=pGLB2C0N">Akilarの糖果屋群聊简介</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[2]"></span><a class="reference-anchor" href="#referto_[2]">[2]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://hexo.io/zh-cn/docs/">Hexo中文文档</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[3]"></span><a class="reference-anchor" href="#referto_[3]">[3]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 安装文档(一) 快速开始</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[4]"></span><a class="reference-anchor" href="#referto_[4]">[4]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/v5/tag-plugins/">hexo-theme-volantis 标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[5]"></span><a class="reference-anchor" href="#referto_[5]">[5]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/tag-plugins/">Volantis文档:内置标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[6]"></span><a class="reference-anchor" href="#referto_[6]">[6]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">Butterfly 安装文档:标签外挂（Tag Plugins</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[7]"></span><a class="reference-anchor" href="#referto_[7]">[7]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://lovelijunyi.gitee.io/posts/c898.html">小弋の生活馆全样式预览</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[8]"></span><a class="reference-anchor" href="#referto_[8]">[8]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://github.com/l-lin/font-awesome-animation">l-lin-font-awesome-animation</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[9]"></span><a class="reference-anchor" href="#referto_[9]">[9]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly主题使用文档</a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-29-PDF展示"><a href="#2-29-PDF展示" class="headerlink" title="2.29 PDF展示"></a>2.29 PDF展示</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf 文件路径 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>文件路径</code>: 可以是相对路径或者是在线链接</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 1.本地文件:在md文件路径下创建一个同名文件夹，其内放pdf文件名为xxx.pdf的文件</span></span><br><span class="line">&#123;% pdf xxx.pdf %&#125;</span><br><span class="line"><span class="section"># 2.在线链接</span></span><br><span class="line">&#123;% pdf https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>2.在线链接(要放到最外层才能起作用)</p><pre><code>&lt;div class=&quot;row&quot;&gt;&lt;embed src=&quot;https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;&lt;/div&gt;</code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-30-Hexo-tag-map-插件"><a href="#2-30-Hexo-tag-map-插件" class="headerlink" title="2.30 Hexo-tag-map 插件"></a>2.30 Hexo-tag-map 插件</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% + 标签值 + 经度 + 纬度 + 文本 + 缩放等级 + 宽 + 高 + 默认图层 + %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><div class="table-container"><table><thead><tr><th style="text-align:center">地图名</th><th style="text-align:center">标签值 &lt;必填&gt;</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">缩放等级 (默认 14)</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">默认图层 (默认 1)</th></tr></thead><tbody><tr><td style="text-align:center">混合地图</td><td style="text-align:center">map</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~7</td></tr><tr><td style="text-align:center">谷歌地图</td><td style="text-align:center">googleMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~20</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">高德地图</td><td style="text-align:center">gaodeMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">百度地图</td><td style="text-align:center">baiduMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 4~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~2</td></tr><tr><td style="text-align:center">Geoq 地图</td><td style="text-align:center">geoqMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~5</td></tr><tr><td style="text-align:center">openstreet 地图</td><td style="text-align:center">openstreetMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">不支持此参数</td></tr></tbody></table></div><ol><li>参数之间，用英文逗号相隔</li><li>参数必须按上述事例顺序输入，不得为空</li><li>同一个页面，同一组经纬度值，只能插入一个相同标签值的地图 (若有需要，可以将第二个地图上，经度或纬度末尾删除一两个数)</li><li>参数取值必须在上述范围内</li><li>默认图层：即地图叠加层的值，默认常规地图还是卫星地图，可按地图显示顺序取值</li><li>缩放等级，数字越大，地图比例尺越小，显示的越精细</li><li>除标签值外，其他参数选填，但 每个参数的左边的参数必填</li><li>谷歌地图需要外网才能加载查看</li></ol><p>坐标获取：<a href="https://lbs.amap.com/tools/picker">高德地图坐标拾取系统</a> 、<a href="https://api.map.baidu.com/lbsapi/getpoint/index.html">百度地图坐标拾取系统</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% map 120.101101,30.239119 %&#125;</span><br><span class="line">&#123;% googleMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！ %&#125;</span><br><span class="line">&#123;% geoqMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！, 13, 90%, 320px, 3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div class="map-box" style="margin: 0.8rem 0 1.6rem 0;"><div id="map-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div>&lt;/div&gt;<script type="text/javascript">var normalm=L.tileLayer.chinaProvider('GaoDe.Normal.Map',{maxZoom:20,minZoom:1,attribution:'高德地图'});var imgm=L.tileLayer.chinaProvider('GaoDe.Satellite.Map',{maxZoom:20,minZoom:1,attribution:'高德地图'});var imga=L.tileLayer.chinaProvider('GaoDe.Satellite.Annotion',{maxZoom:20,minZoom:1,attribution:'高德地图'});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:20,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'});routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1,attribution:'Google Maps'});var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:21,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm]),image=L.layerGroup([imgm,imga]);var baseLayers={"高德地图":normal,"智图地图":normalm1,"谷歌地图":normalMap,"高德卫星地图":imgm,"谷歌卫星地图":satelliteMap,"高德卫星标注":image,"谷歌卫星标注":routeMap};var mymap=L.map('map-120.101101-30.239119',{center:[30.239119,120.101101],zoom:14,layers:[normal],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);</script><br><br></p><p><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="googleMap-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:22,minZoom:1,attribution:'Google Maps'});var baseLayers={"谷歌地图":normalMap,"谷歌卫星图":satelliteMap,"谷歌卫星标注": routeMap};var overlayLayers={};var mymap=L.map("googleMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:14,layers:[normalMap],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><br></p><p><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="geoqMap-120.101101-30.239119" style="max-width:90%; height:320px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm2=L.tileLayer.chinaProvider('Geoq.Normal.PurplishBlue',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm3=L.tileLayer.chinaProvider('Geoq.Normal.Gray',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm4=L.tileLayer.chinaProvider('Geoq.Normal.Warm',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm5=L.tileLayer.chinaProvider('Geoq.Theme.Hydro',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm1,normalm2,normalm3,normalm4,normalm5]);var baseLayers={"智图地图":normalm1,"午夜蓝":normalm2,"灰色":normalm3,"暖色":normalm4,"水系":normalm5};var mymap=L.map("geoqMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:13,layers:[normalm3],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><br></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-31-隐藏块"><a href="#2-31-隐藏块" class="headerlink" title="2.31 隐藏块"></a>2.31 隐藏块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>content：要隐藏的内容</li><li>display：展示前按钮显示的文字（可选）</li><li>bg：按钮的背景颜色（可选）</li><li>color：按钮显示的文字的颜色（可选）</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock 点我预览, blue %&#125;</span><br><span class="line">这里有张图片：</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://s1.vika.cn/space/2022/10/30/b35fce448bc9404a8d65c3ce1e6e46eb&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;image (1)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:67%;&quot;</span> /&gt;</span></span></span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="hide-block"><button type="button" class="hide-button" style="background-color:  blue;">点我预览    </button><div class="hide-content"><p>这里有张图片：<br><img src="https://s1.vika.cn/space/2022/10/30/b35fce448bc9404a8d65c3ce1e6e46eb" alt="image (1)" style="zoom:67%;" /></p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 演示 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 外挂标签 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
