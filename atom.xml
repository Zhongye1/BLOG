<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Апрель</title>
  
  
  <link href="https://www.fomal.cc/atom.xml" rel="self"/>
  
  <link href="https://www.fomal.cc/"/>
  <updated>2024-06-25T15:36:47.671Z</updated>
  <id>https://www.fomal.cc/</id>
  
  <author>
    <name>柊野</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>音乐:想見星星</title>
    <link href="https://www.fomal.cc/posts/7e4c85e7.html"/>
    <id>https://www.fomal.cc/posts/7e4c85e7.html</id>
    <published>2024-06-25T14:47:59.000Z</published>
    <updated>2024-06-25T15:36:47.671Z</updated>
    
    <content type="html"><![CDATA[<h2 id="歌名：想见星星">歌名：想见星星</h2><iframe src="//player.bilibili.com/player.html?isOutside=true&aid=1053931254&bvid=BV1WH4y1V7uU&cid=1526050851&p=1" allowfullscreen="allowfullscreen" width="100%" height="500" scrolling="no" frameborder="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"></iframe><p>柳樹飄揚著</p><p>月兒暧昧的模樣</p><p>蟲兒唱 。</p><p>飄揚鄉間小道，</p><p>我悠哉著，</p><p>当回家還早，</p><p>柳絮撫摸我的臉廲。</p><p>那時的夜空，</p><p>那檬生機勃勃。</p><p>星星和雲朵，</p><p>它們是我的朋友。</p><p>我悠哉著，</p><p>陪伴著他們</p><p>可是時候回家了。</p><p>那時的夜空，</p><p>那樣生機勃勃星月</p><p>今我陪著月亮，</p><p>雲朵懂事不再哭鬧</p><p>我带著它，</p><p>攀登山丘上，</p><p>看這城市的燈光…</p><p>​                                          <em>——from水川greenkarri</em></p>]]></content>
    
    
    <summary type="html">——from水川greenkarri</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>6月25日随记</title>
    <link href="https://www.fomal.cc/posts/e20b0c15.html"/>
    <id>https://www.fomal.cc/posts/e20b0c15.html</id>
    <published>2024-06-25T04:46:36.000Z</published>
    <updated>2024-06-25T04:56:06.863Z</updated>
    
    <content type="html"><![CDATA[<p><strong>2024.6.25</strong></p><p><strong>最后的最后，六月的盛夏来了，走了，又是七月的盛夏。</strong></p><p><img src="https://free-img.400040.xyz/4/2024/06/25/667a4daf96181.jpg" alt="屏幕截图 2024-06-25 125444.jpg"></p>]]></content>
    
    
    <summary type="html">最后的最后，六月的盛夏来了，走了，又是七月的盛夏。</summary>
    
    
    
    <category term="随记" scheme="https://www.fomal.cc/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
    <category term="随记" scheme="https://www.fomal.cc/tags/%E9%9A%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>hexo-arknights</title>
    <link href="https://www.fomal.cc/posts/78e8fc2b.html"/>
    <id>https://www.fomal.cc/posts/78e8fc2b.html</id>
    <published>2024-06-25T04:18:35.000Z</published>
    <updated>2024-06-25T15:35:36.855Z</updated>
    
    <content type="html"><![CDATA[<p>| <a href="https://github.com/Yue-plus/hexo-theme-arknights/blob/main/README.md">简体中文</a> | <a href="https://github.com/Yue-plus/hexo-theme-arknights/blob/main/README.en.md">English</a> | <a href="https://github.com/Yue-plus/hexo-theme-arknights/blob/main/README.ja.md">日本語</a> |</p><h1>hexo-theme-arknights</h1><h2 id="预览">预览</h2><ul><li><strong><a href="http://Dr.Ye">Dr.Ye</a>: <a href="https://laurenfrost.github.io/">https://laurenfrost.github.io/</a></strong></li><li><strong>Dr.Yue_plus: <a href="http://arknights.theme.hexo.yue.zone/">http://arknights.theme.hexo.yue.zone/</a></strong></li><li><strong>Dr.ToUNVRSe <a href="https://tounvrse.github.io/">https://tounvrse.github.io/</a></strong></li><li><strong>Dr.LingYun: <a href="https://dr-lingyun.gitee.io/">https://dr-lingyun.gitee.io/</a></strong></li><li><strong>Dr.XIMU：<a href="http://b.ligzs.cn/">http://b.ligzs.cn/</a></strong></li><li><strong>Dr.tyqtyq <a href="https://tyq0712.github.io/">https://tyq0712.github.io/</a></strong></li><li><strong>Dr.TTsdzb <a href="https://ark.ttsdzb.monster/">https://ark.ttsdzb.monster/</a></strong></li><li><strong>Dr.Angine <a href="https://angine.tech/">https://angine.tech/</a></strong></li><li><strong>Dr.sjfhsjfh <a href="https://sjfh.top/">https://sjfh.top/</a></strong></li><li><strong>Dr.Voilone <a href="https://note.voiblog.top/">https://note.voiblog.top/</a></strong></li><li><strong>Zhongye1 <a href="https://zhongye1.github.io/">https://zhongye1.github.io/</a></strong></li><li><strong>Dr.yuanli-LFSW <a href="https://blog.yuanli-lfsw.com/">https://blog.yuanli-lfsw.com/</a></strong></li><li><strong>Dr.Rimrose: <a href="https://blog.rimrose.site/">https://blog.rimrose.site</a></strong></li></ul><p>如果使用了这个主题，欢迎在这儿贴预览链接~</p><p><img src="https://free-img.400040.xyz/4/2024/06/25/667a4ae00abc0.jpg" alt="demo.jpg"></p><h2 id="安装">安装</h2><h3 id="环境">环境</h3><ul><li><p><a href="https://nodejs.org/zh-cn/">Node.js <code>16.13.x</code> 以上</a></p></li><li><p>最新版 Hexo</p><blockquote><p>Hexo <code>6.0.0</code> 以上； hexo-cli <code>4.3.0</code> 以上；</p></blockquote></li><li><p>中国大陆用户推荐使用 <code>cnpm</code> 安装依赖包，参考 <a href="https://npmmirror.com/">中国 NPM 镜像</a></p></li></ul><h3 id="使用-hexo-cli-新建博客项目：">使用 <code>hexo-cli</code> 新建博客项目：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo init Hexo</span><br><span class="line"><span class="built_in">cd</span> Hexo</span><br><span class="line">cnpm install</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/Yue-plus/hexo-theme-arknights.git themes/arknights</span><br></pre></td></tr></table></figure><h3 id="安装依赖">安装依赖</h3><p>npm 用户：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm <span class="keyword">install </span>hexo-server hexo-<span class="keyword">browsersync </span>hexo-renderer-pug --save</span><br></pre></td></tr></table></figure><p>yarn 用户：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn <span class="keyword">add </span>hexo-server hexo-<span class="keyword">browsersync </span>hexo-renderer-pug</span><br></pre></td></tr></table></figure><h2 id="修改配置文件">修改配置文件</h2><ul><li><p>参照 <a href="https://hexo.io/zh-cn/docs/configuration">Hexo 官网</a> 修改 <code>Hexo/</code> 目录下的 <code>_config.yml</code>。</p><ul><li><p>将 <code>theme:</code> 的默认值 <code>landscape</code> 改为 <code>arknights</code></p></li><li><p>开启代码高亮：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>剪切</strong> <a href="https://github.com/Yue-plus/hexo-theme-arknights/blob/main/_config.yml"><code>Hexo/themes/arknights/_config.yml</code></a> 到 <code>Hexo</code> 目录下，并重命名为 <code>_config.arknights.yml</code>。</p><blockquote><p>建议参考：</p><ul><li><a href="https://hexo.io/zh-cn/docs/configuration#%E4%BD%BF%E7%94%A8%E4%BB%A3%E6%9B%BF%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">使用代替主题配置文件</a></li></ul></blockquote><p>主题的配置文件可参照中文注释修改。</p></li></ul><h2 id="修改资源文件">修改资源文件</h2><p>可按需在 <code>Hexo/source/</code> 目录添加以下文件：</p><ul><li><code>CNAME</code>: GitHub Pages 部署时的自定义域名</li><li><code>img/</code> 目录下的 <code>Alipay.png</code> 与 <code>WeChat.png</code> 为自己的收款二维码（1:1 比例的 <code>png</code> 图片）；</li></ul><p>可按需修改 <code>Hexo/themes/arknights/source/</code> 目录下的：</p><ul><li><code>favicon.ico</code>：浏览器标签页上的图标（64*64，分辨率高了显示不出）</li><li><code>README.md</code>: 部署仓库的 README</li></ul><h2 id="写作">写作</h2><ul><li><p>参考 <a href="https://hexo.io/zh-cn/docs/writing">写作 | Hexo</a>。</p></li><li><p>在主题仓库的 Hexo 分支有一些 <a href="https://github.com/Yue-plus/hexo-theme-arknights/tree/hexo/source/_posts">示例文本</a> 可以取用</p></li><li><p>添加文章标签与分类，更多特性可参考 <a href="https://hexo.io/zh-cn/docs/front-matter">Hexo | Front-matter</a> ，示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">&#x27;Hello World !&#x27;</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020-04-15 21:54:02</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">code</span></span><br><span class="line"><span class="attr">category:</span> <span class="string">Example</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></li><li><p>在 <code>&lt;!-- more --&gt;</code> 之前的内容称之为摘要，会显示在首页上，并且可以设置是否也在正文显示。</p></li></ul><h2 id="在导航栏中添加页面">在导航栏中添加页面</h2><ul><li><p>例如：新建一个 <code>about</code> 页面</p><ul><li>在 <code>Hexo</code> 目录下执行 <code>hexo new page 'about'</code></li><li>然后 <code>Hexo/source/</code> 目录下会多一个 <code>about</code> 文件夹</li></ul></li><li><p>编辑 <code>Hexo/source/about/index.md</code> 文件</p></li><li><p>编辑 <code>_config.arknights.yml</code>，添加一个链接：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">menu:</span></span><br><span class="line"><span class="symbol">  About:</span> /about</span><br></pre></td></tr></table></figure></li></ul><h2 id="禁止归档页翻页">禁止归档页翻页</h2><p>该设置位于 Hexo 配置文件 <code>_config.yml</code> 约第 88 行。</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Pagination</span><br><span class="line">## <span class="keyword">Set</span> per_page <span class="keyword">to</span> <span class="number">0</span> <span class="keyword">to</span> disable pagination</span><br><span class="line"><span class="symbol">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="symbol">pagination_dir:</span> page</span><br></pre></td></tr></table></figure><p>将 <code>per_page:</code> 改为 0 即可。</p><h2 id="评论系统">评论系统</h2><h3 id="Valine">Valine</h3><p>本主题支持<a href="https://valine.js.org/">Valine</a> 。 请参考 <a href="https://valine.js.org/quickstart.html">Valine 快速开始</a> 修改 Hexo 目录下的 <code>_config.arknights.yml</code> 文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">app_id:</span> <span class="comment"># APP ID</span></span><br><span class="line">  <span class="attr">app_key:</span> <span class="comment"># APP KEY</span></span><br><span class="line">  <span class="attr">server_url:</span> <span class="comment"># APP DOMAIN（LeanCloud 国际版）</span></span><br></pre></td></tr></table></figure><p>开启邮件提醒：<a href="https://github.com/zhaojun1998/Valine-Admin">zhaojun1998 / Valine-Admin</a></p><blockquote><p><strong>注意！</strong> 当 Valine 使用 <em>LeanCloud 国际版</em> 时，才需要配置 <code>server_url:</code>。<br>该设置可在 LeanCloud 应用中的 <code>设置 -&gt; 应用凭证 -&gt; 域名白名单 -&gt; Request 域名</code> 中找到以 <code>.api.lncldglobal.com</code> 结尾的域名，加上 <code>https://</code> 前缀即可。</p></blockquote><h3 id="Gitalk">Gitalk</h3><p>本主题支持 <a href="https://gitalk.github.io/">Gitalk</a> 。 请参考 <a href="https://github.com/gitalk/gitalk/blob/master/readme-cn.md">gitalk/readme-cn.md</a> 修改 Hexo 目录下的 <code>_config.arknights.yml</code> 文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">client_id:</span> <span class="comment"># GitHub 应用 Client ID</span></span><br><span class="line">  <span class="attr">client_secret:</span> <span class="comment"># GitHub 应用 Client Secret</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="comment"># 用于存放评论数据的 GitHub 仓库</span></span><br><span class="line">  <span class="attr">owner:</span> <span class="comment"># 该 GitHub 仓库所有者</span></span><br><span class="line">  <span class="attr">admin:</span> [] <span class="comment"># 具有写该 GitHub 仓库权限的用户</span></span><br><span class="line">            <span class="comment"># 例如: [adminA,adminB]</span></span><br><span class="line">  <span class="attr">id:</span> <span class="comment"># (可选) 页面的唯一标识</span></span><br><span class="line">      <span class="comment"># 例如: location.pathname</span></span><br></pre></td></tr></table></figure><h3 id="Waline">Waline</h3><p>本主题支持 <a href="https://waline.js.org/">Waline</a> 。<br>请参考 Waline 官方文档 修改 Hexo 目录下的 <code>_config.arknights.yml</code> 文件:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">waline:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span> </span><br><span class="line">  <span class="attr">server_url:</span> <span class="comment"># Server_Url</span></span><br></pre></td></tr></table></figure><h3 id="Artalk">Artalk</h3><p>本主题支持 <a href="https://artalk.js.org/">Artalk</a> 。<br>请参考 Artalk 官方文档修改 Hexo 目录下的 <code>_config.arknights.yml</code> 文件:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">artalk:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">server:</span> <span class="string">https://artalk.server.instance/</span> <span class="comment"># 你的 Artalk 服务地址</span></span><br><span class="line">  <span class="attr">site_name:</span> <span class="string">My</span> <span class="string">Blog</span> <span class="comment"># 站点名称，用于区分多个站点（可选）</span></span><br></pre></td></tr></table></figure><h2 id="数学公式">数学公式</h2><p>本主题支持两种方案显示数学公式：</p><h3 id="方案一：静态渲染">方案一：静态渲染</h3><p>可以使用 <a href="https://github.com/next-theme/hexo-filter-mathjax">hexo-filter-mathjax</a> Hexo 过滤器静态渲染，来显示数学公式。</p><p>建议先更换能更好处理数学公式的 markdown 渲染器 <a href="https://github.com/wzpan/hexo-renderer-pandoc">hexo-renderer-pandoc</a>。</p><ol><li><p>在 Hexo 目录下执行以下指令：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 hexo-filter-mathjax 插件</span></span><br><span class="line">cnpm install hexo-<span class="built_in">filter</span>-mathjax <span class="comment">--save</span></span><br><span class="line"><span class="comment"># 清除缓存</span></span><br><span class="line">hexo clean</span><br></pre></td></tr></table></figure></li><li><p>把以下内容添加到 <code>Hexo/_config.yml</code> 文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mathjax:</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">none</span> <span class="comment"># 或 &#x27;ams&#x27; 或 &#x27;all&#x27;</span></span><br><span class="line">  <span class="attr">single_dollars:</span> <span class="literal">true</span> <span class="comment"># 启用单个美元符号作为内联（行内）数学公式定界符</span></span><br><span class="line">  <span class="attr">cjk_width:</span> <span class="number">0.9</span> <span class="comment"># 相对 CJK 字符宽度</span></span><br><span class="line">  <span class="attr">normal_width:</span> <span class="number">0.6</span> <span class="comment"># 相对正常（等宽）宽度</span></span><br><span class="line">  <span class="attr">append_css:</span> <span class="literal">true</span> <span class="comment"># 将 CSS 添加到每个页面</span></span><br><span class="line">  <span class="attr">every_page:</span> <span class="literal">false</span> <span class="comment"># 如果为 true，那么无论每篇文章的前题中的 `mathjax` 设置如何，每页都将由 mathjax 呈现</span></span><br></pre></td></tr></table></figure></li><li><p>在需要启用 mathjax 的文章的 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 区内添加 <code>mathjax: true</code>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">On</span> <span class="string">the</span> <span class="string">Electrodynamics</span> <span class="string">of</span> <span class="string">Moving</span> <span class="string">Bodies</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">Physics</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">1905-06-30 12:00:00</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>然后，就可以在文章中使用 LaTeX 语法。</p></li><li><p>需要注意，内联数学公式（…… <code>$&lt;数学公式&gt;$</code> ……）在开头 <code>$</code> 之后和结尾 <code>$</code> 之前不能有空格！例如：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- <span class="symbol">$</span> \epsilon_0 <span class="symbol">$</span></span><br><span class="line">+ <span class="symbol">$</span>\epsilon_0<span class="symbol">$</span></span><br><span class="line">- <span class="symbol">$</span> \<span class="built_in">frac</span>&#123;\partial&#125;&#123;\partial t&#125; <span class="symbol">$</span></span><br><span class="line">+ <span class="symbol">$</span>\<span class="built_in">frac</span>&#123;\partial&#125;&#123;\partial t&#125;<span class="symbol">$</span></span><br></pre></td></tr></table></figure></li><li><p>需要注意 LaTeX 与 Markdown 语法之间的冲突。如有必要，请使用 <code>\</code> 进行转义：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- <span class="variable">$\</span>epsilon_0<span class="variable">$</span></span><br><span class="line"><span class="variable"></span>+ <span class="variable">$\</span>epsilon\_0<span class="variable">$</span></span><br><span class="line"><span class="variable"></span>- \<span class="keyword">begin</span>&#123;eqnarray*&#125;</span><br><span class="line">+ \<span class="keyword">begin</span>&#123;eqnarray\*&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="方案二：动态渲染">方案二：动态渲染</h3><p>本主题也支持 <a href="https://www.mathjax.org/">MathJax</a> ，在用户浏览时动态渲染公式：</p><ol><li><p>首先要卸载 Hexo 默认自带的 hexo-renderer-marked 渲染器，更换成对 MathJax 支持更好的 <a href="https://github.com/sun11/hexo-renderer-kramed">hexo-renderer-kramed</a> 渲染器：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked <span class="comment">--save</span></span><br><span class="line">npm install hexo-renderer-kramed <span class="comment">--save</span></span><br></pre></td></tr></table></figure></li><li><p>修改 <strong>Hexo 目录</strong> 下的 <code>_config.arknights.yml</code> 文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment"># 公式支持</span></span><br><span class="line">  <span class="attr">mathjax:</span></span><br><span class="line"><span class="bullet">-</span>   <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="string">+</span>   <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">version:</span> <span class="string">&#x27;2.6.1&#x27;</span>  <span class="comment"># 重要</span></span><br></pre></td></tr></table></figure></li><li><p>然后，就可以在文章中使用 LaTeX 语法：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">% 单行内联公式</span><br><span class="line">% 注意需要两边带上 <span class="string">&quot;`&quot;</span> ，且 <span class="string">&quot;`&quot;</span> 与 <span class="string">&quot;$&quot;</span> 之间不能有空格</span><br><span class="line">`<span class="symbol">$</span>\sigma<span class="symbol">$</span>`</span><br><span class="line"></span><br><span class="line">% 多行公式</span><br><span class="line"><span class="symbol">$</span><span class="symbol">$</span></span><br><span class="line">\begin&#123;aligned&#125;f(x) &amp;= \sum_&#123;i=<span class="number">1</span>&#125;^&#123;\infty&#125;&#123;\<span class="built_in">frac</span>&#123;x&#125;&#123;<span class="number">2</span>^i&#125;&#125; \\</span><br><span class="line">&amp;= x\end&#123;aligned&#125;</span><br><span class="line"><span class="symbol">$</span><span class="symbol">$</span></span><br></pre></td></tr></table></figure></li><li><p>用这种方案，不会造成 LaTeX 与 Markdown 语法之间的冲突。在文中使用 LaTeX 语法不需要转义。 以下公式可以直接使用，不会造成任何问题：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">\epsilon_0</span></span><br><span class="line"><span class="string">\begin&#123;eqnarray*&#125;</span></span><br></pre></td></tr></table></figure></li></ol><p>hexo-renderer-kramed 插件还有其他可配置项，请参考插件文档： <a href="https://github.com/sun11/hexo-renderer-kramed">https://github.com/sun11/hexo-renderer-kramed</a></p><p>几种公式显示方案各有优缺点：</p><ol><li>动态渲染方案 LaTeX 语法不需要转义，能更好的支持从其他地方导出的 Markdown 文件。但因为需要在浏览器渲染，页面显示会略有延迟。</li><li>静态渲染方案将公式直接编译在静态文件里，显示性能更优，但语法需要转义。</li><li><a href="https://github.com/wzpan/hexo-renderer-pandoc">hexo-renderer-pandoc</a> 快速显示公式而不必经历转义语法的麻烦，但需要安装 Pandoc。</li></ol><h2 id="图表支持">图表支持</h2><p>修改 <strong>Hexo 目录</strong> 下的 <code>_config.arknights.yml</code> 文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment"># 图表支持</span></span><br><span class="line">  <span class="attr">mermaid:</span></span><br><span class="line"><span class="bullet">-</span>   <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="string">+</span>   <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">version:</span> <span class="string">&#x27;8.13.5&#x27;</span></span><br></pre></td></tr></table></figure><p>主题通过 mermaid-js 绘制各种图表。<strong><a href="https://arknights.theme.hexo.yue.zone/mermaid/">查看示例</a></strong></p><p>支持： <a href="https://arknights.theme.hexo.yue.zone/mermaid/#%E6%B5%81%E7%A8%8B%E5%9B%BE">流程图</a> | <a href="https://arknights.theme.hexo.yue.zone/mermaid/#%E5%BA%8F%E5%88%97%E5%9B%BE">序列图</a> | <a href="https://arknights.theme.hexo.yue.zone/mermaid/#%E7%B1%BB%E5%9B%BE">类图</a> | <a href="https://arknights.theme.hexo.yue.zone/mermaid/#%E7%8A%B6%E6%80%81%E5%9B%BE">状态图</a> | <a href="https://arknights.theme.hexo.yue.zone/mermaid/#%E5%AE%9E%E4%BD%93%E5%85%B3%E7%B3%BB%E5%9B%BE">实体关系图</a> | <a href="https://arknights.theme.hexo.yue.zone/mermaid/#%E7%94%A8%E6%88%B7%E6%97%85%E7%A8%8B%E5%9B%BE">用户旅程图</a> | <a href="https://arknights.theme.hexo.yue.zone/mermaid/#%E7%94%98%E7%89%B9%E5%9B%BE">甘特图</a> | <a href="https://arknights.theme.hexo.yue.zone/mermaid/#%E6%8C%87%E4%BB%A4%E5%9B%BE">指令图</a> | <a href="https://arknights.theme.hexo.yue.zone/mermaid/#%E9%A5%BC%E5%9B%BE">饼图</a></p><p>语法：</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;mermaid&quot;</span>&gt;</span><br><span class="line">  graph LR</span><br><span class="line">  A[Hard edge] --&gt;|<span class="type">Link</span> text| <span class="type">B</span>(Round edge)</span><br><span class="line">  B --&gt; C&#123;Decision&#125;</span><br><span class="line">  C --&gt;|<span class="type">One</span>| <span class="type">D</span>[Result one]</span><br><span class="line">  C --&gt;|<span class="type">Two</span>| <span class="type">E</span>[Result two]</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><blockquote><p>如果习惯使用 <code>代码块</code> 也完全支持。</p></blockquote><h2 id="字数-阅读时长统计">字数/阅读时长统计</h2><p>依赖 <a href="https://github.com/willin/hexo-wordcount"><code>hexo-wordcount</code></a>：</p><p>npm 用户：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-wordcount <span class="comment">--save</span></span><br></pre></td></tr></table></figure><p>yarn 用户：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn <span class="built_in">add</span> hexo-wordcount</span><br></pre></td></tr></table></figure><p>之后修改 <strong>Hexo 目录</strong> 下的 <code>_config.arknights.yml</code> 文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">true</span> <span class="comment"># 是否显示字数统计</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span> <span class="comment"># 是否显示阅读时长统计</span></span><br></pre></td></tr></table></figure><h2 id="浏览量统计">浏览量统计</h2><p>使用 <a href="http://busuanzi.ibruce.info/">不蒜子</a> 进行浏览量统计。 修改 <strong>Hexo 目录</strong> 下的 <code>_config.arknights.yml</code> 文件启用该功能：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">busuanzi:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">sitePV:</span> <span class="literal">true</span> <span class="comment"># 站点总访问量</span></span><br><span class="line">  <span class="attr">siteUV:</span> <span class="literal">true</span> <span class="comment"># 站点访客数</span></span><br><span class="line">  <span class="attr">pagePV:</span> <span class="literal">true</span> <span class="comment"># 页面访问量</span></span><br></pre></td></tr></table></figure><h2 id="文档加密">文档加密</h2><p>经过修改的 <a href="https://github.com/D0n9X1n/hexo-blog-encrypt">hexo-blog-encrypt</a> 插件已适配并集成在本主题中（目前仅支持 default 与 up 主题）。</p><blockquote><p>详细配置参考 <a href="https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md">hexo-blog-encrypt/ReadMe.zh.md</a></p></blockquote><p>在 <code>Hexo/_config.yml</code> 文件中添加以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Security</span></span><br><span class="line"><span class="attr">encrypt:</span> <span class="comment"># hexo-blog-encrypt</span></span><br><span class="line">  <span class="attr">abstract:</span> <span class="string">与</span> <span class="string">Rhodes</span> <span class="string">Island™</span> <span class="string">取得弱神经连接时需要口令</span></span><br><span class="line">  <span class="attr">message:</span> <span class="string">请输入与</span> <span class="string">Rhodes</span> <span class="string">Island™</span> <span class="string">取得弱神经连接时的口令：</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">name:</span> <span class="string">tagName</span>, <span class="attr">password:</span> <span class="string">密码A</span>&#125;</span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">name:</span> <span class="string">tagName</span>, <span class="attr">password:</span> <span class="string">密码B</span>&#125;</span><br><span class="line">  <span class="attr">wrong_pass_message:</span> <span class="string">与</span> <span class="string">Rhodes</span> <span class="string">Island™</span> <span class="string">效验口令失败，请重试。</span></span><br><span class="line">  <span class="attr">wrong_hash_message:</span> <span class="string">与</span> <span class="string">Rhodes</span> <span class="string">Island™</span> <span class="string">效验口令失败，当前使用临时权限查看。</span></span><br></pre></td></tr></table></figure><p><strong>或</strong> 在文章的 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 区内设置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">作为日记加密</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2016-03-30 21:12:21</span></span><br><span class="line"><span class="attr">password:</span> <span class="string">mikemessi</span></span><br><span class="line"><span class="attr">abstract:</span> <span class="string">与</span> <span class="string">Rhodes</span> <span class="string">Island™</span> <span class="string">取得弱神经连接时需要口令</span></span><br><span class="line"><span class="attr">message:</span> <span class="string">请输入与</span> <span class="string">Rhodes</span> <span class="string">Island™</span> <span class="string">取得弱神经连接时的口令：</span></span><br><span class="line"><span class="attr">wrong_pass_message:</span> <span class="string">与</span> <span class="string">Rhodes</span> <span class="string">Island™</span> <span class="string">效验口令失败，请重试。</span></span><br><span class="line"><span class="attr">wrong_hash_message:</span> <span class="string">与</span> <span class="string">Rhodes</span> <span class="string">Island™</span> <span class="string">效验口令失败，当前使用临时权限查看。</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="搜索">搜索</h2><p>默认开启，若要关闭，在 <code>Hexo/_config.arknights.yml</code> 文件中：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="Front-matter">Front-matter</h2><p>除了 <a href="https://hexo.io/zh-cn/docs/front-matter">Hexo 支持的 Front-matter</a> 还支持：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文章页右上角发布/更新日期</span></span><br><span class="line"><span class="built_in">post</span>-info: <span class="literal">true</span>/<span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 侧边栏的目录</span></span><br><span class="line"><span class="built_in">post</span>-index: <span class="literal">true</span>/<span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打赏框</span></span><br><span class="line">reward: <span class="literal">true</span>/<span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="引入自定义-CSS-JS-文件">引入自定义 CSS/JS 文件</h2><p>可以在 <code>Hexo/source/css/</code> 目录下放入自己的 CSS 文件； 在 <code>Hexo/source/js/</code> 目录下放入自己的 JavaScript 脚本文件；</p><p>然后修改 <code>Hexo/_config.arknights.yml</code> 文件：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  <span class="meta"># 在 `&lt;head&gt;` 标签内引入 CSS 样式表</span></span><br><span class="line"><span class="symbol">  stylesheets:</span></span><br><span class="line">+ - <span class="keyword">/css/</span>custom.css</span><br><span class="line">  </span><br><span class="line">  <span class="meta"># 在 `&lt;body&gt;` 尾部引入 JavaScript 脚本</span></span><br><span class="line"><span class="symbol">  scripts:</span></span><br><span class="line">+ - <span class="keyword">/js/</span>custom.js</span><br></pre></td></tr></table></figure><blockquote><p>资源文件夹是存放用户资源的地方。 除 <code>_posts</code> 文件夹之外，开头命名为 <code>_</code> (下划线)的文件/文件夹和隐藏的文件将会被忽略。 Markdown 和 HTML 文件会被解析并放到 <code>public</code> 文件夹，而其他文件会被拷贝过去。</p><p>——来自 <a href="https://hexo.io/zh-cn/docs/setup#source">Hexo 官方文档</a></p></blockquote><h2 id="参与开发">参与开发</h2><p>欢迎提交 <a href="https://github.com/Yue-plus/hexo-theme-arknights/issues/new">Issues</a> 与 <a href="https://github.com/Yue-plus/hexo-theme-arknights/pulls">PR</a>。</p><h3 id="分支说明">分支说明</h3><table><thead><tr><th>分支</th><th>说明</th></tr></thead><tbody><tr><td>main</td><td>相对稳定的版本</td></tr><tr><td>gh-pages</td><td>gh-page 托管</td></tr><tr><td>hexo</td><td>Hexo 目录，这里有可以用于测试主题的 <code>.md</code> 文件</td></tr></tbody></table><h3 id="开发中可能遇见的问题及解决方法">开发中可能遇见的问题及解决方法</h3><h4 id="修改-TS-文件不生效">修改 TS 文件不生效</h4><p>TypeScript 需要手动编译，请全局安装 <code>typescript</code> 后在 <code>arknights\source\js\_src</code> 目录下执行 <code>tsc</code> 以编译。</p><h4 id="运行-hexo-serve-debug-时，长文章渲染不全">运行 <code>hexo serve --debug</code> 时，长文章渲染不全</h4><p>这是由热重载插件 <code>hexo-browsersync</code> 导致的，不会影响发布。</p><p>解决方法：禁用该插件。（反正不影响发布，不管也行）</p><h3 id="参与开发可能需要的文档">参与开发可能需要的文档</h3><ul><li><p><a href="https://hexo.io/zh-cn/docs/templates">Hexo 官方文档</a></p></li><li><p><a href="http://stylus.bootcss.com/">Stylus 中文网</a></p></li><li><p><a href="https://www.pugjs.cn/api/getting-started.html">Pug 模板引擎中文文档</a></p></li><li><p>另外引用几个大佬的 Blog</p><blockquote><ul><li><a href="https://easyhexo.com/">Easy Hexo</a></li><li><a href="http://cps.ninja/2019/03/16/hexo-with-latex/">让 Hexo 搭建的博客支持 LaTeX</a></li><li><a href="https://www.cnblogs.com/yyhh/p/11058985.html">Hexo主题开发 - ﹏猴子请来的救兵 - 博客园</a></li><li><a href="https://molunerfinn.com/make-a-hexo-theme/">Hexo主题开发经验杂谈 | MARKSZのBlog</a></li><li><a href="https://xinyufeng.net/2019/04/15/hexo-theme-guide/">Hexo 主题开发指南 | Peak Xin’s Blog</a></li></ul></blockquote></li></ul><h3 id="贡献者">贡献者</h3><ul><li><a href="https://github.com/ToUNVRSe">ToUNVRSe</a></li><li><a href="https://github.com/Yue-plus">Yue_plus</a></li><li><a href="https://github.com/TTsdzb">TTsdzb</a></li><li><a href="https://github.com/arkerny">arkerny</a></li><li><a href="https://github.com/DarkLingYun">DarkLingYun</a></li><li><a href="https://github.com/Laurenfrost">Laurenfrost</a></li><li><a href="https://github.com/angine04">安擎Angine</a></li><li><a href="https://github.com/feilongproject">飞龙project</a></li><li><a href="https://github.com/sjfhsjfh">sjfhsjfh</a></li><li><a href="https://github.com/Thexvoilone">Thexvoilone</a></li><li><a href="https://github.com/RyoJerryYu">RyoJerryYu</a></li><li><a href="https://github.com/wmz1024">wmz1024</a></li><li><a href="https://github.com/madisontanle">madisontanle</a></li><li><a href="https://github.com/SherkeyXD">SherkeyXD</a></li><li><a href="https://github.com/soundofautumn">soundofautumn</a></li><li><a href="https://github.com/LongFengShuanWu">LongFengShuanWu</a></li><li><a href="https://github.com/Zhongye1">Zhongye1</a></li><li><a href="https://github.com/ChisatoNishikigi73">ChisatoNishikigi73</a></li></ul>]]></content>
    
    
    <summary type="html">明日方舟罗德岛阵营的Hexo博客主题</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>LiteLoaderQQNT</title>
    <link href="https://www.fomal.cc/posts/96a2d8b4.html"/>
    <id>https://www.fomal.cc/posts/96a2d8b4.html</id>
    <published>2024-06-25T03:03:08.000Z</published>
    <updated>2024-06-25T04:26:09.998Z</updated>
    
    <content type="html"><![CDATA[<h1>LiteLoaderQQNT</h1><div class="tag link"><a class="link-card" title="LiteLoaderQQNT 官网" href="https://liteloaderqqnt.github.io"><div class="left"><img src="https://avatars.githubusercontent.com/u/95263282?v=4"/></div><div class="right"><p class="text">LiteLoaderQQNT 官网</p><p class="url">https://liteloaderqqnt.github.io</p></div></a></div><p>LiteLoaderQQNT 是 QQNT 的插件加载器，一般在 QQNT 的环境内简称为 LiteLoader。<br>它可以让你自由地为 QQNT 添加各种插件，并实现例如美化主题、增加功能等各种功能。</p><p>（比如防撤回，设置动态背景啥的</p><p><img src="https://free-img.400040.xyz/4/2024/06/25/667a36a77c46c.gif" alt="2024-06-25 11-15-13.gif"></p><p><em>（波奇可爱捏</em></p><h1>安装<a href="https://liteloaderqqnt.github.io/guide/install.html#%E5%AE%89%E8%A3%85"></a></h1><p><em>此文档为 LiteLoaderQQNT 1.1.x 编写</em></p><hr><h2 id="（法一）（推荐）第三方工具">（法一）（推荐）第三方工具<a href="https://liteloaderqqnt.github.io/guide/install.html#%E7%AC%AC%E4%B8%89%E6%96%B9%E5%B7%A5%E5%85%B7"></a></h2><p>一些社区开发的安装工具来帮助你快速安装，或跳过此条目来阅读官方安装教程</p><div class="tag link"><a class="link-card" title="LiteLoaderQQNT 快速安装" href="https://github.com/Mzdyl/LiteLoaderQQNT_Install/"><div class="left"><img src="https://avatars.githubusercontent.com/u/95263282?v=4"/></div><div class="right"><p class="text">LiteLoaderQQNT 快速安装</p><p class="url">https://github.com/Mzdyl/LiteLoaderQQNT_Install/</p></div></a></div><hr><h2 id="（法二）">（法二）</h2><p>你需要先下载 LiteLoaderQQNT 到任意位置，以下有两种方式</p><ul><li><p><strong>通过 Release</strong></p><p>前往 LiteLoaderQQNT 仓库，在 Release 中 Latest 内，下载 <code>LiteLoaderQQNT.zip</code> 文件，将压缩包内 LiteLoaderQQNT 目录解压到任意位置</p><p>LiteLoaderQQNT：<a href="https://github.com/LiteLoaderQQNT/LiteLoaderQQNT">https://github.com/LiteLoaderQQNT/LiteLoaderQQNT</a></p></li><li><p><strong>通过 Clone</strong></p><p>使用 Git 工具将 LiteLoaderQQNT 仓库 Clone 到本地任意位置</p><p>shell</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">--depth</span> <span class="number">1</span> https://github.com/LiteLoaderQQNT/LiteLoaderQQNT.git</span><br></pre></td></tr></table></figure></li></ul><p>找到 QQNT 安装目录，编辑 <code>resources\app\app_launcher\index.js</code> 文件，在最前端插入一行<code>require(String.raw</code>此处为你 LiteLoaderQQNT 目录路径<code>);</code></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="title class_">String</span>.<span class="property">raw</span><span class="string">`C:\LiteloaderQQNT`</span>); <span class="comment">// 此处换成你 LiteLoaderQQNT 目录位置</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;./launcher.node&#x27;</span>).<span class="title function_">load</span>(<span class="string">&#x27;external_index&#x27;</span>, <span class="variable language_">module</span>);</span><br></pre></td></tr></table></figure><p>请确保拥有 QQNT 安装目录的读写权限！如果不想给予 QQNT 安装目录读写权限</p><ul><li>按照下文 <code>存储位置</code> 一节进行设置</li><li>将 <code>LiteLoaderQQNT/src/preload.js</code> 复制到 <code>QQNT/resources/app/versions/此处为版本号/application/preload.js</code></li></ul><p>LiteLoaderQQNT 会在第二步骤的文件不一致或没有文件时自动复制，也就是说在更新本体后需再进行一次这步骤</p><hr><h1>插件<a href="https://liteloaderqqnt.github.io/guide/plugins.html#%E6%8F%92%E4%BB%B6"></a></h1><p>此文档为 LiteLoaderQQNT 1.1.x 编写</p><h2 id="安装">安装<a href="https://liteloaderqqnt.github.io/guide/plugins.html#%E5%AE%89%E8%A3%85"></a></h2><h3 id="方式一：手动安装">方式一：手动安装<a href="https://liteloaderqqnt.github.io/guide/plugins.html#%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85"></a></h3><p>如果你有现成的插件，请先确保是与 LiteLoaderQQNT 兼容的，并且拥有对应依赖插件</p><p>将插件目录移动到 <code>LiteLoaderQQNT/plugins</code> 文件夹内，如果插件是压缩包请先解压</p><p><img src="https://free-img.400040.xyz/4/2024/06/25/667a3d3fad587.png" alt="image-20240625113058842.png"></p><h3 id="方式二（推荐）：LiteLoaderQQNT-Plugin-插件安装助手">方式二（推荐）：LiteLoaderQQNT Plugin 插件安装助手</h3><p>可以先手动安装第三方插件市场类插件，在其中安装插件</p><h3 id="https-github-com-ltxhhz-LL-plugin-list-viewer"><a href="https://github.com/ltxhhz/LL-plugin-list-viewer/">https://github.com/ltxhhz/LL-plugin-list-viewer/</a></h3><h2 id="功能">功能</h2><ul><li>插件列表查看</li><li>插件检查更新</li><li>插件安装（支持镜像）</li><li>插件卸载</li><li>插件查找</li></ul><p><a href="https://github.com/ltxhhz/LL-plugin-list-viewer/blob/main/imgs/1.png"><img src="https://github.com/ltxhhz/LL-plugin-list-viewer/raw/main/imgs/1.png" alt="img"></a></p><ul><li>依赖查找</li></ul><p><a href="https://github.com/ltxhhz/LL-plugin-list-viewer/blob/main/imgs/2.gif"><img src="https://github.com/ltxhhz/LL-plugin-list-viewer/raw/main/imgs/2.gif" alt="gif"></a></p><h2 id="使用方法">使用方法</h2><h3 id="法一：下载发行版">法一：下载发行版</h3><p><a href="https://github.com/ltxhhz/LL-plugin-list-viewer/releases/tag/v1.3.1">https://github.com/ltxhhz/LL-plugin-list-viewer/releases/tag/v1.3.1</a></p><ol><li>下载发行版并解压</li><li>将文件夹移动至 <code>LiteLoaderQQNT数据目录/plugins/</code> 下面</li><li>重启 QQNT</li></ol><h3 id="法二：使用-git-clone">法二：使用 git clone</h3><ol><li>clone 本仓库 <code>git clone https://github.com/ltxhhz/LL-plugin-list-viewer.git</code></li><li>运行以下命令</li></ol><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span> i</span><br><span class="line"><span class="built_in">npm</span> run build</span><br></pre></td></tr></table></figure><ol><li>如果clone到了 <code>plugins</code> 目录下，修改 <code>manifest.json</code> 中 <code>inject</code> 为</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;injects&quot;: &#123;</span><br><span class="line">    &quot;<span class="selector-tag">main</span>&quot;: <span class="string">&quot;./dist/main/index.js&quot;</span>,</span><br><span class="line">    <span class="string">&quot;preload&quot;</span>: <span class="string">&quot;./dist/preload/index.js&quot;</span>,</span><br><span class="line">    <span class="string">&quot;renderer&quot;</span>: <span class="string">&quot;./dist/renderer/index.js&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>否则可以将 <code>dist</code> 目录移动到 <code>LiteLoaderQQNT数据目录/plugins/</code> 目录下</p></blockquote><h3 id="使用">使用</h3><p><strong>安装完后打开QQ打开设置页面选择插件列表即可</strong></p><hr><h1>附录</h1><h2 id="寻找插件">寻找插件<a href="https://liteloaderqqnt.github.io/guide/plugins.html#%E5%AF%BB%E6%89%BE"></a></h2><h3 id="插件列表">插件列表<a href="https://liteloaderqqnt.github.io/guide/plugins.html#%E6%8F%92%E4%BB%B6%E5%88%97%E8%A1%A8"></a></h3><p>官方维护着一份插件列表，收录了已知的大部分插件，可在官网首页中查看详情</p><h3 id="通过搜索">通过搜索<a href="https://liteloaderqqnt.github.io/guide/plugins.html#%E9%80%9A%E8%BF%87%E6%90%9C%E7%B4%A2"></a></h3><p>LiteLoaderQQNT 的插件基本发布在 GitHub，善用搜索可以快速的找到所需插件</p><p>比如在搜索框键入关键词<code>LiteLoader</code>和<code>插件</code>，即可找到大量<a href="https://github.com/search?q=LiteLoader+%E6%8F%92%E4%BB%B6&amp;type=repositories">LiteLoaderQQNT生态的插件</a></p><h3 id="官网首页">官网首页<a href="https://liteloaderqqnt.github.io/guide/plugins.html#%E5%AE%98%E7%BD%91%E9%A6%96%E9%A1%B5"></a></h3><p>LiteLoaderQQNt 官网下面已列出全部已收录插件，点击卡片即可跳转至对应仓库</p><h3 id="插件市场">插件市场<a href="https://liteloaderqqnt.github.io/guide/plugins.html#%E6%8F%92%E4%BB%B6%E5%B8%82%E5%9C%BA"></a></h3><p>有一些第三方插件市场，手动安装后可列出大量插件</p><h2 id="修补">修补<a href="https://liteloaderqqnt.github.io/guide/install.html#%E4%BF%AE%E8%A1%A5"></a></h2><p><strong>此条目仅需 Windows 用户查看，其他系统无需继续阅读此条目</strong></p><p>由于 Windows 系统平台 QQNT 被添加文件完整性验证，你需要额外步骤来解除限制,有下列四种方式：</p><ul><li><p><strong>DLLHijackMethod</strong></p><p>在 Release 下载 dll 文件，重命名为 dbghelp.dll 放入 QQ.exe 同级目录下即可<br><a href="https://github.com/LiteLoaderQQNT/QQNTFileVerifyPatch/tree/DLLHijackMethod">https://github.com/LiteLoaderQQNT/QQNTFileVerifyPatch/tree/DLLHijackMethod</a></p></li><li><p><strong>QQNTFileVerifyPatch</strong></p><p>在 Release 下载 exe 文件，运行将弹出文件选择框，进入 QQNT 安装目录选择 QQ.exe 开始修补，每次更新都需要重新修补<br><a href="https://github.com/LiteLoaderQQNT/QQNTFileVerifyPatch">https://github.com/LiteLoaderQQNT/QQNTFileVerifyPatch</a></p></li><li><p><strong>PatcherNFixer</strong></p><p>在 Release 下载 zip 文件，解压后运行 exe 将弹出图形化界面，根据软件界面提示选择相应选项与修补方式，每次更新都需要重新修补<br><a href="https://github.com/xh321/LiteLoaderQQNT-PatcherNFixer">https://github.com/xh321/LiteLoaderQQNT-PatcherNFixer</a></p></li><li><p><strong>V8Killer</strong></p><p>此方式目前过于麻烦，且需要自行寻找对应的 RVA 偏移量，只说明此方式的可行性，需自行探索使用方式<br><a href="https://github.com/ShellWen/v8_killer">https://github.com/ShellWen/v8_killer</a></p></li></ul><h2 id="检查">检查<a href="https://liteloaderqqnt.github.io/guide/install.html#%E6%A3%80%E6%9F%A5"></a></h2><p><strong>按照上述教程完成安装后，有两种方法检查 LiteLoaderQQNT 是否成功安装</strong></p><ul><li>运行 QQNT 并打开设置，查看左侧列表是否出现 <code>LiteLoaderQQNT</code> 选项</li><li>使用终端运行 QQNT 查看是否有 LiteLoaderQQNT 相关内容输出显示</li></ul><p>如果有显示，即安装成功，玩的开心！</p><h2 id="存储目录">存储目录<a href="https://liteloaderqqnt.github.io/guide/install.html#%E5%AD%98%E5%82%A8%E7%9B%AE%E5%BD%95"></a></h2><p>支持设置 <code>LITELOADERQQNT_PROFILE</code> 环境变量指定 <code>data</code> <code>plugins</code> <code>config.json</code> 存储位置，即可不在本体目录进行读写操作，比如 MacOS 与 Linux 平台 QQNT，以及类似于 flatpak 打包的 QQNT，让其实现成为可能</p><p>如果你想将本体与存储目录合并在一起（便携软件）需将 <code>LITELOADERQQNT_PROFILE</code> 环境变量删除，将 <code>data</code> <code>plugins</code> <code>config.json</code> 移动回本体根目录下</p><h2 id="更新QQNT">更新QQNT<a href="https://liteloaderqqnt.github.io/guide/install.html#%E6%9B%B4%E6%96%B0qqnt"></a></h2><p>每次更新 QQNT 都需要重新根据上述教程重新修补</p><h2 id="版本支持">版本支持<a href="https://liteloaderqqnt.github.io/guide/introduction.html#%E7%89%88%E6%9C%AC%E6%94%AF%E6%8C%81"></a></h2><p>支持 QQNT 桌面端 全架构 最低 <code>20667</code> 版本到官网最新版<br>更老的版本也支持，只是设置界面样式会崩坏，不介意也可以用</p><h2 id="外部链接">外部链接<a href="https://liteloaderqqnt.github.io/guide/introduction.html#%E5%A4%96%E9%83%A8%E9%93%BE%E6%8E%A5"></a></h2><h3 id="Telegram">Telegram<a href="https://liteloaderqqnt.github.io/guide/introduction.html#telegram"></a></h3><p>群聊：<a href="https://t.me/LiteLoaderQQNT">https://t.me/LiteLoaderQQNT</a><br>频道：<a href="https://t.me/LiteLoaderQQNT_Channel">https://t.me/LiteLoaderQQNT_Channel</a></p><h3 id="LiteLoaderQQNT">LiteLoaderQQNT<a href="https://liteloaderqqnt.github.io/guide/introduction.html#liteloaderqqnt"></a></h3><p>框架本体：<a href="https://github.com/LiteLoaderQQNT/LiteLoaderQQNT">https://github.com/LiteLoaderQQNT/LiteLoaderQQNT</a><br>插件模板：<a href="https://github.com/LiteLoaderQQNT/Plugin-Template">https://github.com/LiteLoaderQQNT/Plugin-Template</a><br>插件列表：<a href="https://github.com/LiteLoaderQQNT/Plugin-List">https://github.com/LiteLoaderQQNT/Plugin-List</a></p>]]></content>
    
    
    <summary type="html">为你的QQ添加各种插件，并实现动态背景、美化主题、增加功能等功能</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>维克多崔专访</title>
    <link href="https://www.fomal.cc/posts/d9fc664c.html"/>
    <id>https://www.fomal.cc/posts/d9fc664c.html</id>
    <published>2024-06-19T16:28:39.000Z</published>
    <updated>2024-06-25T15:16:31.847Z</updated>
    
    <content type="html"><![CDATA[<p>2024-6-20</p>    <div id="aplayer-anONkUyf" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="8773860646" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p><strong>维克多•崔专访 1989年5月6日，《苏联青年》杂志采访</strong></p><p>——（记）你们最开始为什么取名叫“电影”？</p><p>——（维）当我们想出这个名字的时候才18岁左右，现在已经不记得了。</p><p>——（记）是什么促使你们组建乐队的？</p><p>——（维）因为一些歌曲。开始的时候我写了些歌曲，朋友们都很喜欢，然后是朋友的朋友……</p><p>——（记）在成名之前，你们走过了怎样的道路？</p><p>——（维）坦白的说，我从来没想过会走得多么艰难，我只是做我喜欢的事情而已。我对现在的一切非常的满意。我并没有为了现在的这种成功付出巨大的代价，我只是在坚持自我。当然，我很高兴现在有很多人喜欢我的歌曲，这对我来说很好。</p><p>——（记）你能说一说加入到你乐队里面的伙伴么？你说过，他们首先并不是乐手，而是朋友。描述一下他们的性格吧。</p><p>——（维）我不会像你说的那样去“刻画”朋友，他们都有缺点和优点，我和他们作朋友并不是因为他们拥有所宣扬的那一套“美德”，而是有别的原因。</p><p>——（记）你在这个圈子里有偶像么？</p><p>——（维）有时会有。我不喜欢只喜欢一个人，我喜欢很多乐队的很多歌曲。</p><p>——（记）你奉行哪种理念？</p><p>——（维）我的行为没有什么立场或者目的，我在任何情况下都会我行我素的去做，只要我觉得自己需要去这么做。</p><p>——（记）艺人通常都不得不放弃生活中常人的幸福和欢乐，你现在不得不放弃些什么？</p><p>——（维）一个人在在大街上散步，在一个城市住上至少一个月（笑）。</p><p>——（记）你父母怎么看待你现在的工作？</p><p>——（维）现在他们认为我是在为自己的事业而奋斗，但也许他们不会一直这么认为。</p><p>——（记）他们去过你的现场么？</p><p>——（维）我想，应该去过一两次吧。</p><p>——（记）你渴望在舞台上为自己塑造一种什么形象么？</p><p>——（维）我从来没有想过要去塑造什么，我只是我自己的样子。（笑）</p><p>——（记）“我们的心都需要改变”，你在歌里这样唱，你想在生活中改变什么么？</p><p>——（维）每个人都应该首先是这改变自己和自己的生活……这是个复杂的问题。我虽然这么说，但我并不觉得一个人能用自己的力量改变生活。</p><p>——（记）你在生活中是一个勇敢的战士么？</p><p>——（维）我并不把自己当作一个战士。我只是在唱我喜欢的歌，让我激动的歌。</p><p>——（记）你的歌曲里还唱到“把我留在这个屋子里吧，别来触碰我的内心。”你是一个孤僻的人么？</p><p>——（维）所有的人都有那些喜欢一起说话的人，也有不想说话的人。那些歌曲其实也是很幽默的。——（记）为什么在你的歌曲中经常出现“夜晚、雨、秋天、流星”这些词？</p><p>——（维）不知道，我对这些文艺分析不太熟悉，我不够专业。</p><p>——（记）哪些作品影响了你社会生活的转变？</p><p>——（维）他们怎么能让我转变呢？我不是一个社会的抗议者，不是为了“仇恨岁月”而歌唱的乐手。</p><p>——（记）你的歌曲是怎么创作出来的？</p><p>——（维）这对我来说也是个谜……我自己也不清楚……我拿起琴开始弹，然后那些歌词曲调就跟着出来了。</p><p>——（记）列宁格勒的报纸《Смена》（苏联时期极具影响力的报纸，主要针对青少年人群）把你称为1988年最杰出的摇滚诗人，你怎么看待摇滚诗人和（传统）诗人之间的区别？</p><p>——（维）我不知道这两个术语之间有什么区别，我不会抛开音乐去对我的歌词咬文嚼字，这样会让我失去很多。</p><p>——（记）今天对你来说最重要的是什么？</p><p>——（维）保持内心的自由。</p><p>——（记）在台上演出时你并不是一直在唱自己的歌，这意味着什么？</p><p>——（维）一些歌曲随着时代的不同已经失去了现实意义，我对那些歌已经不再感兴趣了。现在的好歌很多，我不会拒绝去唱那些我喜欢的歌曲。</p><p>——（记）你们乐队现在正在进行全国巡演，你希望在巡演中得到什么？</p><p>——（维）我们从来就没渴望去迎合潮流。我们从来就没想过我们该玩什么样的风格，这种风格能流行多久。我只作自己所喜欢的事，这对我们来说是最重要的。如果我们变得不再流行，那我们就离开舞台好了。</p><p>——（记）今天“电影院”的问题在哪里？</p><p>——（维）问题在于我不得不不停的“工作”，要不停的高度紧张。</p><p>——（记）你么应邀出国演出过么？</p><p>——（维）当然，出去很多次。但是我们精心的筛选这些邀请，因为现在“俄罗斯的东西”（不同于“苏联的东西”）在那些地方很流行，我们打算减少在那些地方的演出了。</p><p>——（记）你们都去过那里？</p><p>——（维）丹麦，美国，法国</p><p>——（记）那你们在那里的接受程度怎么样呢？</p><p>——（维）他们怀着我迷茫的表情看着我：你为什么不是那个手拿巴拉莱卡琴（俄罗斯三弦民乐），身穿俄式衬衣的样子呢？</p><p>——（记）在苏联境内的巡演还在继续么？</p><p>——（维）是的，我们马上就要在巡演的路上了。</p><p>——（记）在摇滚还是地下组织一样地下的那些年代，摇滚乐手始终是被排挤打击的，那时他们被塑造为了英雄，而现在已经改变了，英雄主义好像不再需要了，你们将来会怎么样？</p><p>——（维）不需要？现在这样的英雄最好实在是太少了。</p><p>——（记）给“电影”的歌迷们带来什么新的消息了么？</p><p>——（维）快出新专辑了，但是专辑名字还没决定。</p><p>——（记）你对现在的生活满意么？</p><p>——（维）我不觉得人一定能够真正对生活感到满意。但从另一方面来说，我已经很满足了，原来我在锅炉房里工作过，为了赚钱要唱歌唱破嗓子，现在已经很好了。</p><p>——（记）对（杂志的）读者想说些什么吗？</p><p>——（维）祝你成功。</p><p>——（记）尤其是对那些15、6岁的年轻人想说什么？</p><p>——（维）我相信每个青年人都有自己的世界，我也不必要去教他们什么，我只能祝你们成功。</p><p><img src="https://free-img.400040.xyz/4/2024/06/20/66730a2d16a74.png" alt="屏幕截图 2023-09-28 170904.png"></p><p>​                                                                         此岸苍穹，彼岸无穷</p>]]></content>
    
    
    <summary type="html">《苏联青年》杂志对维克多崔的一些采访——1989年5月6日</summary>
    
    
    
    <category term="音乐" scheme="https://www.fomal.cc/categories/%E9%9F%B3%E4%B9%90/"/>
    
    
    <category term="音乐" scheme="https://www.fomal.cc/tags/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>关于博客</title>
    <link href="https://www.fomal.cc/posts/4a262e6d.html"/>
    <id>https://www.fomal.cc/posts/4a262e6d.html</id>
    <published>2024-05-21T15:21:11.000Z</published>
    <updated>2024-05-21T15:25:20.433Z</updated>
    
    <content type="html"><![CDATA[<p>文章分两部分，一是我为什么写作，二是我为什么以个人博客的形式写作。</p><h1>我为什么写作</h1><p>进入心流状态下的写作是为数不多的让我体验到纯粹而持久的快乐的事。但这样的体验其实非常有限，近几年来似乎很少能安下心来写作。对于生存的焦虑和面对世俗生活的理性让我执着于如何让自己成长为能适应现代工业社会的一名合格的成年人，所以忙着出国，读博，毕业，实习，找工作…偶尔喘息的间隙时常怀念少年时代每周末读《南方周末》、《上海壹周》以及写随笔的日子。时光一去难倒回，但心底隐约还记得那时候的快乐。《上海壹周》在2015年停刊了，《南方周末》的报纸如今身在国外也无法买到，写作似乎是唯数不多的自己可以掌控的事情，作为找寻快乐和精神家园的一种方式。</p><p>时间如逆旅，我亦是行人。在逐渐意识到人生就是一系列短暂的相聚与漫长的告别之后，文字也成为我留住那些逐渐远去的时光与人们的努力。类似精卫填海，尽管我永远也无法填满横亘在我与它们之间的那片海，但只要写下来，至少有一部分影像便得以存储在我的文字里，一些细微的美好和快乐也将永远与我一起在时间的无涯里漫游。</p><p>文字也让我暂时忘却孤独。在阅读他人作品时的共鸣与共情就仿佛是接收到来自同类的召唤。此时文字就成为一道强烈的电波或磁场，吸引着我让我靠近并回应。阅读是一种靠近，但回应需要依靠写作。想回应那些伟大的作品，他们就同能量巨大的恒星，耀眼的光芒穿越时空照亮了我这颗隐匿于宇宙尘埃中的小小星球。我也想回应那些虽然遥远却同频次的星球，因为知道他们的存在，宇宙的黑暗森林不至于那么冰冷恐怖。</p><p>写作也是在人生迷途时的自我救赎。在日复一日的平凡生活里，我无法抑制内心对于“存在的意义”的追问。但这个宏大的终极问题显然是我无法回答的。我希望生命中有一个至高至善至美的存在，让我对于生活的努力更有意义，而不是仅仅为着那些”没有时拼命想要，一旦得到又立马失去兴趣“的欲望汲汲营营。也许这样的思考让我更有觉知地去生活，但有时它也如同诅咒，无果无用的思考和寻找让我对自己失望，陷入焦虑和虚无。我需要一种方式消解掉这些负面的思考和情绪。而根据过往的经验，写作在将这些虚无缥缈的思虑化成具体文字的过程中，通过理智的介入，过滤掉了许多矫情的东西，让感性不至于如脱缰野马把我带入一片虚无的荒野。作者Lauren Sapala 在《INFJ writing》一书中也曾提过，写作可以托住生活的失序，身体与精神的坠落。“内向而敏感的人比别人更容易疲惫，你需要更接纳自己。不要把思考和敏感当作一种负担，想办法把它输出，感受到它是一种礼物。”</p><h1>我为什么以个人博客的形式写作</h1><p>关于实现写作的形式，日记是一种，但因为它只写给自己看的，随意直白，总觉得是通篇的流水账，缺乏美感；即使是我自己也不太想回过头去读。所以我想我还是需要一些哪怕是假想的读者。因为知道有读者在，写作时便会不自觉地严谨起来，会去追求逻辑的严密和文字的整洁美感。此外我也期待与读者的互动，我会因为那些愿意在我的博客停留听我絮叨的朋友而更有动力。所以当把自己的文字放在开放的互联网上，也如同向一片汪洋抛出了漂流瓶，期待它们与有缘的读者相遇。</p><p>几年前，我在找工作期间也按着那时的风尚做了求职版的个人网站，展示我在Ph.D阶段做过的项目和自己的简历。虽然那个网站在找到工作后就因为selling myself的自我尴尬而关闭了，但Hugo+Github在操作和管理上的干净整洁，让我非常心仪建立静态网站的过程。得益于那些富有才华，技术超群的主题开发与维护者们，我也可以按照自己的意愿建立一个百分百属于我的小天地，不受制于平台和审查，也不被烦人的广告打扰。所以我就用同样的方式建立了这个小站，来承载我的写作。</p><p>建立个人博客也是因为受到许多博主的感召。TA们丰富有趣的文字和优雅美观的网站都给予我非常好的阅读体验，赞叹之余也心向往之。所以我也想成为一名写作者参与其中，因为这是与那些真诚又有趣的作者们交流的最好方式。「链接」页记录着我常驻足的博客列表，想对文字背后那些从未谋面却又似相识的作者们道一声感谢。</p><p>最后，这个小站也寄托了我对天各一方不能时刻相见的故人的想念。很久以前我在那些鼓励之下曾下决心会坚持写作，这么多年这个承诺其实一直没有忘记。“人生不相见，动如参与商。今夕复何夕，共此灯烛光”，但愿有一刻我们在遥远夜空望见的是同一抹月光。</p><p>登高峰乃见云平。</p>]]></content>
    
    
    <summary type="html">想向大家分享一下我写博客的原因，是我与自己的对话，也是向读者的告白。</summary>
    
    
    
    <category term="随记" scheme="https://www.fomal.cc/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
    <category term="博客" scheme="https://www.fomal.cc/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>LoveCards v2.3.0</title>
    <link href="https://www.fomal.cc/posts/f00efe6a.html"/>
    <id>https://www.fomal.cc/posts/f00efe6a.html</id>
    <published>2024-05-13T01:18:40.000Z</published>
    <updated>2024-06-25T04:40:17.817Z</updated>
    
    <content type="html"><![CDATA[<h1 align="center">  <br>  <a href="https://lovecards.cn/" alt="logo" ><img src="https://s11.ax1x.com/2024/01/11/pFCilx1.png" width="150"/></a>  <br>  LoveCards  <br></h1><h4 align="center">由你筑起的“领域” 众人皆可“倾心倾意”.</h4><p align="center">  <a href="https://github.com/zhiguai/LoveCards/releases">    <img src="https://img.shields.io/github/v/release/zhiguai/LoveCards?include_prereleases&style=flat-square" />  </a>  <img src="https://img.shields.io/github/stars/zhiguai/LoveCards?style=social"></p><p align="center">  <a href="https://lovecards.cn">主页</a> •  <a href="https://forum.lovecards.cn">论坛</a> •  <a href="https://jq.qq.com/?_wv=1027&k=QTRjFYyB">QQ群组</a> •  <a href="https://github.com/zhiguai/LoveCards/releases">下载</a></p><h2 id="亮点">亮点</h2><p>不止表白卡，更有交流卡<br>强大的用户系统，也支持游客的随时访问<br>标签系统，你的站点，你的热点，你创造<br>模板系统，给你无限可能<br>卡片不限字数，支持多图片上传<br>支持评论，点赞，让互动性拉满<br>管理后台可添加多个管理员<br>卡片一键分享至多平台<br>卡片浏览次数统计<br>发行版开箱即用<br>… …</p><h2 id="部分图示">部分图示</h2><h4 id="后台总览">后台总览</h4><img src="https://s11.ax1x.com/2024/01/11/pFCifRs.jpg">  <h4 id="外观设置">外观设置</h4><img src="https://s11.ax1x.com/2024/01/11/pFCiDMt.jpg"><h4 id="默认主题配色展示">默认主题配色展示</h4><div style="display: flex; justify-content: space-between;">    <img src="https://s11.ax1x.com/2024/01/11/pFCitaD.jpg" style="width: 30%;" alt="Image 1">    <img src="https://s11.ax1x.com/2024/01/11/pFCi8r6.jpg" style="width: 30%;" alt="Image 2">    <img src="https://s11.ax1x.com/2024/01/11/pFCiYVO.jpg" style="width: 30%;" alt="Image 3"></div><h2 id="🛠️-部署">🛠️ 部署</h2><h4 id="1-环境（参考开发环境）">1. 环境（参考开发环境）</h4><p>Nginx/Apache<br>PHP8+<br>Composer<br>mysql<br>redis(可选)</p><h4 id="2-TP6-安装依赖（发行版跳过）">2. TP6 安装依赖（发行版跳过）</h4><p><code>composer install</code></p><h4 id="3-配置">3. 配置</h4><ol><li>设置运行目录为“Public”</li><li>设置伪静态，伪静态规则参考“Public”目录下的“.htaccess”与“nginx.htaccess”（无法自动识别时请手动设置）</li><li>删除“lock.txt”安装记录文件</li><li>赋予程序根目录操作权限为“777”（出现异常时可选）</li><li>关闭防跨站(宝塔可选)</li></ol><h4 id="4-进入网站自动跳转至安装引导">4. 进入网站自动跳转至安装引导</h4><h2 id="⚠️-注意">⚠️ 注意</h2><p>更新通知可通过关注该仓库、关注<a href="https://forum.lovecards.cn">LoveCards论坛</a>、加入<a href="https://jq.qq.com/?_wv=1027&amp;k=QTRjFYyB">QQ交流群</a>及时获取</p><h2 id=""></h2><h4 id="模板说明">模板说明</h4><ul><li><a href="https://docs.lovecards.cn">LoveCards文档镜像🪞</a>(🔥更新中)</li><li><a href="https://lovecards.github.io">LoveCards文档🐱</a>(🔥更新中)</li><li><a href="https://console-docs.apipost.cn/preview/ad83ecdb4f10e38b/e187796270055b7b">API 文档</a>(🔥更新中)</li></ul><h4 id="版本号说明">版本号说明</h4><ul><li>Ver为开发本号，程序中的“版本检测”将优先或仅以Ver为准</li><li>VerS为展示版本号，用作发行版的展示</li><li>VerS中[A.B.C]<br>当 A 改变意味着 有较低层的代码或架构等存在重大改动<br>当 B 改变意味着 数据库相关有改动<br>当 C 改变意味着 一般逻辑代码有改动</li><li>Ver一般按照发行版本递增</li></ul><h2 id="⚗️-技术栈">⚗️ 技术栈</h2><ul><li><a href="https://www.php.net" title="PHP">PHP</a>+<a href="https://www.thinkphp.cn/" title="ThinkPHP6">ThinkPHP6</a></li><li><a href="https://www.mdui.org/" title="MDUI">MDUI</a>+<a href="https://jquery.com/" title="Jquery">Jquery</a></li></ul><h2 id="-2"></h2><p><a href="https://jq.qq.com/?_wv=1027&k=QTRjFYyB">QQ 交流群 801235342</a><br><strong>如有问题，请先加群咨询</strong></p><h2 id="⭐-Star-History">⭐ Star History</h2><a href="https://github.com/zhiguai/LoveCards/stargazers">    <img width="500" alt="Star History Chart" src="https://api.star-history.com/svg?repos=zhiguai/LoveCards&type=Date"></a> <h2 id="📜-License">📜 License</h2><p>GPL V3</p>]]></content>
    
    
    <summary type="html">校园墙论坛开源</summary>
    
    
    
    <category term="网站" scheme="https://www.fomal.cc/categories/%E7%BD%91%E7%AB%99/"/>
    
    
    <category term="网站" scheme="https://www.fomal.cc/tags/%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>存档</title>
    <link href="https://www.fomal.cc/posts/a33b7267.html"/>
    <id>https://www.fomal.cc/posts/a33b7267.html</id>
    <published>2024-05-02T16:12:31.000Z</published>
    <updated>2024-06-24T17:36:16.337Z</updated>
    
    <content type="html"><![CDATA[<p>存档</p><p><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b865cd9b71.jpg" alt="屏幕截图 2024-05-04 134318.jpg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b865d5f4c8.jpeg" alt="屏幕截图 2024-04-21 015948.jpeg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b865e0cfb5.jpeg" alt="屏幕截图 2024-04-21 014623.jpeg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b866021c83.jpeg" alt="屏幕截图 2024-03-30 164308.jpeg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b8660a8620.jpg" alt="屏幕截图 2024-01-23 152203.jpg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b8661638cb.jpg" alt="屏幕截图 2024-01-20 140607.jpg"></p>]]></content>
    
    
    <summary type="html">一些blender制作动画时的记录</summary>
    
    
    
    
    <category term="随记" scheme="https://www.fomal.cc/tags/%E9%9A%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>一些艺作</title>
    <link href="https://www.fomal.cc/posts/undefined.html"/>
    <id>https://www.fomal.cc/posts/undefined.html</id>
    <published>2024-05-02T16:01:00.000Z</published>
    <updated>2024-06-25T05:43:08.501Z</updated>
    
    <content type="html"><![CDATA[<!--StartFragment--><p>關於這段時間的一些记录和<br>一些摸鱼</p><!--EndFragment--><p><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b81f49d47e.jpg" alt="屏幕截图 2024-05-02 233604.jpg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b8697ebae8.jpg" alt="95012449_p1_master1200.jpg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b81f741395.jpg" alt="98176582_p14_master1200.jpg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b81f522e8e.jpg" alt="95012449_p0_master1200.jpg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b81f7c703a.jpg" alt="98176582_p13_master1200.jpg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b8699b2f41.jpg" alt="98176582_p11_master1200.jpg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b869ae8f0a.jpg" alt="98176582_p9_master1200.jpg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b869b4a983.jpg" alt="98176582_p10_master1200.jpg"><br><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b869b9d0d0.jpg" alt="98176582_p8_master1200.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;!--StartFragment--&gt;
&lt;p&gt;關於這段時間的一些记录和&lt;br&gt;
一些摸鱼&lt;/p&gt;
&lt;!--EndFragment--&gt;
&lt;p&gt;&lt;img src=&quot;https://free-img.mofashi.ltd/4/2024/05/08/663b81f49d47e.jp</summary>
      
    
    
    
    
    <category term="画集" scheme="https://www.fomal.cc/tags/%E7%94%BB%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>逆模因</title>
    <link href="https://www.fomal.cc/posts/56b6c9d6.html"/>
    <id>https://www.fomal.cc/posts/56b6c9d6.html</id>
    <published>2024-04-14T16:26:16.000Z</published>
    <updated>2024-06-24T17:34:33.504Z</updated>
    
    <content type="html"><![CDATA[<!--StartFragment--><h1>前言</h1><p>逆模因（antimeme），是<em>一种具自我屏蔽特性的概念</em>；一种透过其本身的性质，以阻止或防止他人将其传播的概念。</p><p>在了解什么是逆模因之前，首先要明白何为模因。</p><p><strong>模因：</strong><br>现实里的模因是文化信息单位，其所承载的信息的自身特性，有助于将自己，通过客体模仿和复制的方式，在人际间扩散，进而形成多级传播或迭代差异。</p><p><strong>模因特性：</strong><br>自我模仿、增殖性、主动性、扩散性、排他性、差异性，等等。</p><p><strong>信息传播：</strong><br>一个对于某些个体来说具有实际意义的信息，其传播需要通过这一流程：</p><blockquote><p>传播者【可能对象 → 编码信息 → 传播渠道】<br>→ 媒介 →<br>受传者【接受信息 → 解码信息 → 做出反应】</p></blockquote><p><strong>逆模因：</strong><br>在信息传播过程中，能严重妨碍信息传播的因素（噪声）及所衍生的干扰信息，特别是能影响自身被感知的干扰因素及信息，便可以视为逆模因。</p><p><strong>干扰信息：</strong><br>干扰信息，是相对无实意的信息，其会附加在原来的实意信息上，或阻止、或掩饰、或遮蔽对方的传播。其多与实意信息同出一个信源，或者说，就是信源有意发出噪音，以遮蔽自身外泄的实意信息。</p><p><strong>逆模因特性：</strong><br>逆模因可具有干扰或破坏原信息的能力；同时也可有和模因相近的复制与扩散特性，但与之相反的是，逆模因复制和扩散的是噪声。这一噪音会污染实意信息传播流程中，可能接触/涉及实意信息的任意之物。其自身与在其影响下的原信息，可能会不被重视、被忽略，乃至无法察觉，等等。</p><p>注：<em>逆模因视情况可具有认知危害、信息危害、记忆影响等危害的其中之一或者全部，但有认知危害、信息危害、记忆影响的事物不等于就是逆模因。</em></p><p><strong>逆模因效应：</strong><br>逆模因效应是逆模因特性所造成的信息在原传播过程中，失真、丢失、屏蔽情景，而能形成逆模因效应的是逆模因实体。</p><blockquote><p>逆模因就是严重影响原信息在传播中的完整性，乃至将传播直接打断的“强噪音”，及其所形成的附加在原信息上的干扰信息。能挤占原信息的传播生态，使之被消溶或遮蔽；也可在污染原信息后，及所衍生的干扰信息一样扩散，传播相对某些受传者来说的无意义或实在危害的干扰信息。同时，其自身及其影响下的原信息，多具有不被察觉或令人不以为意的特性。</p></blockquote><blockquote><p>而逆模因特性令原信息在原传播流程中，出现失真、遮蔽、丢失、消溶等的情况，就是逆模因效应。</p></blockquote><p>逆模因是<em>一种具自我屏蔽特性的概念</em>；一种透过其本身的性质，以阻止或防止他人将其传播的概念。</p><p>你要如何收容一个你无法记录或记忆的实体？如何去和无法触及，而且伪装完美的敌人，在你甚至不知道自己正和它开仗的情况下进行战斗？</p><p>逆模因的存在代表着“未知”的具象化，也是近乎永恒的恐惧来源。因此，逆模因与任何一项未知的异常之间并无区别，其背后只包含未知带来的恐惧，而非完全等价于威胁本身。</p><p>面对“未知”本身，我们只能小心前进，免不了动用超出规格的资源与手段以保证安全，哪怕对象只是无害的石头或晦涩的知识。信息在传播的过程中难免会出现噪音，更遑论无法理解的其他语言。面对逆模因，我们不必惧怕它本身。</p><p>我们唯一缺少的，是“亡羊补牢”的机会。</p><p>面对未知的异常，最好的做法是谨慎解析、大胆行动，然后再针对错误的后果进行修正，积累经验的同时成为更好的自己。但面对逆模因，我们很可能失去“修正错误”的机会，因为我们无法得知错误是什么样的，甚至可能无法得知错误是否发生。</p><p>解决方法很简单，那就是不犯错误。</p><psw>这不是你第一遍读这些了，当你惊讶于为什么结尾会这么说的时候，你应该把这篇文章再看一遍</psw>]]></content>
    
    
    <summary type="html">逆模因特性令原信息在原传播流程中，出现失真、遮蔽、丢失、消溶等的情况，就是逆模因效应</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>那天所见的花名</title>
    <link href="https://www.fomal.cc/posts/582cde4c.html"/>
    <id>https://www.fomal.cc/posts/582cde4c.html</id>
    <published>2024-03-12T08:04:23.000Z</published>
    <updated>2024-06-24T18:01:50.653Z</updated>
    
    <content type="html"><![CDATA[<p>我们仍未知道那天所看见的花的名字。</p><p>理论上，它应带我从孤独中逃离。</p><p>我本该被迫与它寸步不离。</p><p>害怕它的影子继续纠缠，令我窒息。</p><p>如今我却仍坐在这里。</p><hr><p>太阳在山路的那头被升起的山峰遮住了半轮。我轻轻走过青草穿插的石板小路，走上泥泞的大路。路两边的杂草依旧很多，我仔细地从路首找到与山下公路融为一体的路尾，依然不见那束花的踪迹。从那一次见过它后，我便再不可于这条路上找到它了。</p><p>就像它随着她一起消失了一般。</p><p>我慢慢坐在路堐上，双目有些迷茫地望着金色的太阳敛起光辉。</p><p>再不可知那花的名字。再不见你。不再。</p><p>我在那里埋下一栽小小的蒲公英。</p><p>那么一支渺小的花在山风与记忆里时隐时现。</p><p>与其说是为了纪念，倒不如说是为了忘却。</p><p><strong>1</strong></p><p>我似乎不太记得我为什么于此工作了。反正，从我有点记忆起，我就一直呆在站点，呆在于山，呆在寂秘的树林与那未收割过的麦田的交界处那栋小瓦屋里。不引人注目，这一设施上完美诠释了这一要求。看似破旧平凡的小瓦屋，实际上联控着深埋在山中的数个军需仓库与山顶天文台的所有安保措施。</p><p>我的工作，说好听点叫分站总负责人，说直白点就是看仓库的。人家至少还可以在闲暇时刷手机啥的，我一来上班，什么收发装置就都被没收了。每天那盏小小的警戒灯，永远是平静的绿色，我眼前的景色永远是一片望不到头的麦田与更远方的群山。当然，我被允许偶尔地出门走走透透气，但我不爱出门——透着窗子和不透着窗子看景色似乎没什么差，而小屋里有冬暖夏凉的空调。</p><p>虽然无聊，但我喜欢这样的生活。从小到大都是——换句话说，我从来都是一个孤独的家伙。听过一个笑话吗？一个人总是乘小舟去河上钓鱼，但每次什么都没有钓到，所有的人都劝他不要钓鱼了，但他依然每天早上去钓鱼——因为他喜欢的不是钓鱼，而是独坐孤舟无所事事。</p><p>所以这个工作很适合我。</p><p><strong>01</strong></p><p>每个人都在青春期时有玫瑰色的幻想。我也不例外，虽然住在闽侯大义这样一个在福州算偏远的地方的最偏远角落里一座大山上，但环绕我的群山阻碍不了我放飞的想象。我每天要走六公里的山路去大义中学上课，大约于我两个小时的路程。这一路上都是树林，林子里除了树连只鸟都没有，安静的很。这样的时候就很值得幻想。</p><p>幻想什么呢？</p><p>有一次在湖那里跳了下去。</p><p>水面很清，阳光透进来，浅蓝浅蓝的像天一样。但往下沉去，水底全都浸在黑色里，愈深愈浓的黑，水底就像没有似的，黑色的渊谷像一团浓墨聚在我脚底。我喘不过气，开始咳嗽。咳嗽了一股水流涌进鼻子，脑袋随着肚子一并发沉。</p><p>我口音很重，讲话老是平翘舌不分，声音又小，身边人总当我是空气。</p><p>我在那一刻沉下去。</p><p>水面清圆，蓝得让人有点炫目，但视野却在一点点黑下去。</p><p>孤来孤往了十三年。往下沉下去。</p><p>对我来说什么都像山林一样安静。林子里以前有活物的，都被打了去卖钱。太阳小小一轮悬在蓝天上，洒下来的光线在雾蒙蒙的树林间是有形的，我伸手去摸过，除了暖什么也感觉不到。光是没有一点分量的，轻，比羽毛都轻。虽然感觉不到实在的玩意儿，但我喜欢那些光柱，它们比实在的东西更让我喜欢。我喜欢光。我喜欢太阳。黑暗是无形的，但黑暗很有分量，重得一直把我往下拖。</p><p>我开始挣扎着往上游。</p><p>水面是天蓝色的，属于太阳。</p><p>而有光透过的地方总显得那么好。</p><p><strong>02</strong></p><p>光柱是片状的，暖洋洋，分明触摸不到它，但我觉着它一定是软乎乎的触感，可能比羊毛绒子摸起来软得更很。林子里很亮堂，充满了光亮，山谷就像一碗盛着花生油的黑瓷碗。</p><p>我躺在湖滩上睁着眼睛，忽然看见一抹明亮的光芒在眼前的枫树上摇曳着。</p><p>那是我头一回在林子里碰见活物。原来阳光是活的。</p><p>但那不是阳光。</p><p>她从枫下轻盈地走来，踏过地面上落满的层层干叶，但脚步却依旧悄然无声。与其说她在走，不如说她在飘动，就像被风托起的羽毛。待她近了，我看见她在笑。笑得像清圆透亮的水面，笑得像林间飞扬的柔光。</p><p>我没想过她会在这儿出现。正因我没想过，她不应该不可能在这出现。</p><p>我没想让她笑，但她笑着，眉眼弯弯。她笑起来的样子绝非我贫乏的想象可以形成的。</p><p>风转过湖面，凉凉地抚过我满身的伤痕，凉凉地吹起拥抱着的粼光，凉凉地摇下满树红叶，凉凉地卷起金黄色的长发飞舞。</p><p>我想起林间的阳光柱子被摇动的叶迷蒙的时候。那样的光片落在地上会泛出不同深浅的斑状金黄。</p><p>我意识到，她活了。</p><p><strong>04</strong></p><p>假的东西融不入真的世界，幻想的泡沫化在现实的熔炉中。</p><p>她已经变得很透明了。</p><p>有时候，我对着我的心房呼喊了好几声，她都不会出现。</p><p>她已经很脆弱。</p><p>我和她在林子里走着。阳光穿隙过叶缝，也穿隙过她的身体。</p><p>上学路上遇到的事物依旧会让她惊喜与好奇。在一个泥泞的雨后，大路两边有很多杂草挂着露珠于晴空下闪烁。她从这边跑到那边，从那边跑到这边，惊起两只蝴蝶珊珊飞起。我看着她的背影在我眼前逐渐远向地平线，忽然从心底感到一阵悸动。而这段哀伤我明白也不能长久，过个五年，十年，就连这样的回味都会消失。</p><p>我跟在她身后回答她的问题。小石子。牵牛花。狗尾草。两只轮子的叫脚踏车。水洼边上的是一只火蚁。水洼里边的？蓝天白云？还是那轮明亮的太阳？</p><p>她俯身凝望着水洼中平静的映像，忽然起身，但水面里的颜色没有一点变化。</p><hr><p>她没有倒影。</p><p>除了在我心目中，她对于世界真的就只是一缕幻影。而总有一天，她将真正变成一名虚妄无形的存在。因为我不能永恒将其挂于心头。她会逐渐从我的心灵中消失，不论如何。</p><p>一杆弯曲的瘦茎，但结着的花却是白色的？只有那么一株低垂于湿沉的雨露中。从没见过这般的花，像雪般好看，但真的不认得。走吧，芒，我们要迟到了。</p><p>好看但不显眼，深埋于那丛杂草里。从那天开始我便再没见过那种花。随着时间走向路的尽头，花的样子我也慢慢忘却。而这时间不过是转了个弯的一刻而已。</p><p>再不可知那花的名字。但看那蓬松的花朵，应当像羽毛般轻。如果那时有阵山风吹来，那一扎白花会满天飞舞，景色会很漂亮的，对吧。</p><p>那样的话，也许我就会记得久一点——我只想记得久一点。</p><p><strong>2</strong></p><p>日子这般过下去确乎有些乏味。我向上级请求安排一个人和我一起工作。这样多一个人不影响摆烂还可以解解乏。那群人没同意，也许是鉴于站点的机密性。</p><p>让我百思不得其解的是，这个站点为什么会有如此之高的机密等级。我是总负责人，我明白这个庞大设施的完全情况：两个部分，军仓库与天文台，一个在山腰一个在山顶，而两部分的安保密钥都在我手上。前者是站点三成装备的存贮点，后者用于监视及观测天象类高空类异常活动，譬如“<a href="http://scp-wiki-cn.wikidot.com/scp-cn-1929">从天而降</a>”，仅此而已，我可以肯定没有更多秘密了。而我觉着最不可理喻的是天文台选址是于山这个市中心小土包，这里交通发达吵的要命光污染更是严重，这样低的海拔看空中什么东西和在地面上直接看真没什么区别——所以为什么天文台不建鼓山顶上？</p><p>然而没必要想太多。好奇心真的可以害死人的。</p><p><strong>03</strong></p><p>她的声音真的很好听。每一次我受了什么委屈，我掉下眼泪，她柔美的嗓音都会从我心底升起，轻轻愈合我内心的创痛。我长大了。高中。我所能达到的也只不过是那个大学，但这样的成绩在我这个高中也算极好的了。高三的生活繁忙得让人晕头转向。在这样繁重的学习压力下，我有好几天没叫她出现。周天晚上我终于得闲，于是我轻轻呼唤她一声。我轻柔的语言在心灵里流淌，在幽静的世间泛起空灵的回音，回荡，回荡。</p><p>但我的身边却依旧空无一物。</p><p>在？我又轻唤一声。</p><p>她慢吞吞地从台灯照不到的黑暗中走出来，我们没话找话聊了一会儿天就去睡觉了。</p><p>梦中也有一片安静的树林，我和她一步一步地于林荫间穿梭。每一个晚上，每一个一样的梦。她在梦中的双目有些哀怨，但只是一闪而过，让人不会在意的一闪而过。</p><p>你陪了我好久。对啊，你真的很好。……住在我心中，我的心不够广阔么?</p><p>你要去更大的地方？那我们还能见面吗？</p><p>……</p><p>不会的。不会这样。</p><p>消失？凭什么。凭什么一定要这样?</p><p>阳光不实在，但阳光是一切实在的源头。我喜欢阳光。她给我的温暖是实在的。林间没有小动物，因为这世上有枪，有人。有人的地方就会有影子。影子是光给的，但却是实在的，像深湖里的水，很沉。阳光不实在。那朵花的花瓣也是，风一吹过来就会洒落满天，但，但那个时候没有风。</p><p>有风的话就好了。</p><p>有风的话，景色就会很漂亮，让人印象深刻，我就会对此记得久一点。记得久一点了，我就可以去知道那朵花的名字。我想再和她走过那条上学的泥泞路，想看湖边飞扬的枫林。我想去拥抱阳光，但阳光从我全身浸过暖意而永远不能让我触摸。我忽然想起，太阳离地球有很远很远，光都要走八分二十秒。</p><p>听说月光也是阳光的一种。而且，月亮离地球很近。</p><p><strong>05</strong></p><p>我想没人喜欢看玛丽苏。因为她们单薄，千篇一律，她们柔弱，死气沉沉。没有什么好去欣赏的。</p><p>她是玛丽苏吗？玛丽苏一定要长得美丽，性格温柔，善良到有点圣母心，唱歌要动听，举止也要可爱优雅，做事还永远笨手笨脚，而且，所有玛丽苏的人生都是一帆风顺的，永远有人为她们付出，要么霸道总裁，要么有钱爸妈。总之，玛丽苏要幸福快乐地过一辈子。</p><p>如果她能成为玛丽苏就好了。她在那个世界可以幸福快乐过一辈子——在失去我后幸福快乐。</p><p>之后，在心底，在真实中，在我的愧疚与记忆里，我呼喊她。但她没有出现。我搁下键盘，从内心最僻静最隐洁的角落里，我听见她微弱而平静的一呼一吸。</p><p>不要忘却。</p><p>月光不是片状的，像轻纱一样摇曳。月亮比太阳柔和，不暖不冷，亮亮的，却不能给影子染上色彩。月光不实在，比阳光还不实在，但月光很美。我觉得白花在月下飞舞会比于阳光下更好看。会像雪，也可以像流星。</p><p>我也喜欢流星。</p><p>星光也不实在。而且它很远。但星光偶尔地可以流下泪，温柔其他万物不能温柔的宇宙。星星是眼睛。星星比月光和阳光都来得温柔。光是无声的。但星光道道下落无限时，夜空的弦音会响彻整座寰宇。如果这个时候，上学的路边吹过软软的山风，白花的花朵在一瞬间飞舞，摇曳的光洁与流星于黑夜中融为一体，那么那样的景色我会记得更久更久——直至永远也不会忘记。我从未见过陨星的旖旎，我从未见过那白花若蒲公英飘然的样子。但我喜欢。我喜欢不实在的美丽。</p><p>但实在是，那天刚下过雨，一丝风也没有，我不记得花的样子，更不晓得花的名字。我，我除了她的颜色除此之外我一无所知。</p><p>她从我的迷幻中诞生，伴随我哭泣与辛酸的人生一并成长；她是我苦难里泛起的泪水与花的融合；她是我从小到大攥在手心里不放的一点萤火；她是我在混沌凌乱的万事万物中逼迫而出的娇弱百合……是我身后的游荡之影拥抱着一片清灵山风……是我不曾感受过的温暖在伤疤上的自我愈合……是，她是，她是烟火燃尽后在风中旋起的依依残烟，随着明亮的夜滑向不可预知的空间……她是我的星空，我的眼眸，我的长梦，我的诉说。她曾在嫣红色的枫叶雨中轻轻漫步，她曾在漫山遍野的月光里合眸唱歌，她曾在山谷的湖泊旁欣赏自己不存在的倒影，她曾欢笑，曾哭泣，曾一直在我身边编织着光的轻柔童话。</p><p>但她从来没有倾诉过自己的故事。</p><p>也许她没有故事。</p><p>走吧。</p><p>幸福快乐，不论何时。</p><p>你也要有自己的故事。</p><p>你是从我梦里走出来的么？既然天下终无不散的宴席，你为什么要来我的心中焕发生命？</p><p>为什么每天不一定能看见日出日落，但黑夜一定会降临？</p><p>为什么你的来历，你的过去，你的未来，你的归途，你的灵魂，你的梦想，我，我都无法去在这个世间为你掌握?</p><p>日出的时候，日落就是一定的。阳光，星光，月光放在很远很远的那里都是星光。宇宙有一百多亿光年的半径，温暖却只能以三十万公里每秒的速度传播。总会有世世代代无光的角落。</p><p>但总要话下去。</p><p>你知道吗？即使那时刮起了山风，花瓣也不会飞起。花朵沾了水，湿沉粘稠得像水底的渊谷。没有可能，便谈不上什么遗憾。</p><p>不论怎样，你都不会知道那花的名字。不会知道的。</p><p><em>爱了，来了，送那世界一片流星，走了。</em></p><p>对我而言，这真的就足够了。</p><p><strong>3</strong></p><p>安全灯变红了。就在一刹那。十分钟前我收到天文台那边传来的三级警报。威胁不来自于地面，而来自于深空。“从天而降&quot;，有意思。</p><p>本来我有机会随他们逃的，但我摆烂着睡着摆烂着醒了，威胁也就离我不到五百米远了。我思索着也逃不掉了索性接着躺着。在那一瞬间我还真有点佩服我自己摆烂到连命都摆掉。</p><p>我走出小屋，看着天空由黑紫转为刺目的金黄色。数十道十字流星以弧线快速向于山袭来。不知道从哪里刮来的山风，忽的一下掠过麦田，层层叠叠的麦浪卷起波澜，数支麦杆随着星落一并下降着飞舞。</p><p>天地间一片金黄色的绚烂星风。</p><p>警报等级在下降，下降到三级，四级，由红色变为橙色，因为大多金火流星正若烟火般快速消解。但警报又很快更尖锐地拉起——一级，灯变成闪烁的红紫色。有一颗半径三米大小的流星以二十米每秒的速度流过天空，向我直接而迅速地若雷电般刺来。同时，我手边的康德计数器数值开始快速崩塌瓦解，后来我得知，所有仓库里的设备与LDR稳定器全都报废了，整个广东省的时间都快了三秒钟。</p><p>但最后的降临不过为我的脸带来了一股凛冽的秋风。那颗流星的速度很快悠下来，最后悄声停在我面前。</p><p>满麦田汹涌的大风开始歇息，夜接着它千百万年的沉默不语。</p><p>光明一点点化为破碎的碎片消逝。</p><p>我终于第一次见过了她。</p><p>和善的微笑，金黄色的长发下于秋风中轻轻流苏。</p><p>像黑夜中落下的太阳。</p><p>像林间飞舞的柔光。</p><p>像清圆水面的粼粼。</p><p>像路边静息的蝴蝶。</p><p>像朝阳。像晚霞。</p><p>像星光和月亮暖起来的样子。</p><p>像是从二次元中走出来的人物。</p><p>一脸好奇无知而友好温柔地凝望着我。</p><p>而我愣了一下。</p><p>我第一步做的是和她拉开半米距离，第二步做的是用座机拨通中央区的紧急号码。</p><p>“这里是3号观察点，经度113.27, 纬度23.15，我是柊野，需要支援，立刻。”</p><p><img src="http://scpsandboxcn.wikidot.com/local--files/collab:mang/%E9%99%8D%E4%B8%B4.jpg" alt="%E9%99%8D%E4%B8%B4.jpg"></p><p>我的一切幻想的她从天空而降。</p>]]></content>
    
    
    <summary type="html">她看着我，而我立即和她拉开半米距离，用座机拨通了基地的紧急号码。</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>2024.1.9</title>
    <link href="https://www.fomal.cc/posts/6dffd417.html"/>
    <id>https://www.fomal.cc/posts/6dffd417.html</id>
    <published>2024-01-09T12:50:35.000Z</published>
    <updated>2024-06-25T04:45:31.874Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错了" data-whm="这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="5603454470d7ee6e8e123fc17ede3c82743a99f7cc0e0a91f51cd64e7f752597">5653520209469021811a79f50388cfb2c8d1d2de4203a519f55deced41e30c1155e922e8aa1ae97083c8b49c63f5ea42be1f3a2f90338fa8215ff39d35bec226e2201d46bab178b69c9727ce22fe9ea227dabd21ed6cd94f46d80b73b771e78d694f7d5a07a7f44abbaf85454469822b9f2174901dfd72d2107bbc309862e3e8bd9b386a7c0fdecc0f8aa72712898c08e2a792409090253cf0b39e258124eac9e11534f5a5e6d06561aa92fecb4b14aa14db5688ebf07a05151d2cb57d950bf809ba4c377b3d6eb9cb558a5356cf7c9fa78fe7ca7dd146d720dd6770f3b3048e85ddcf59f0c9553ba2a9ad4a4be6dd9eff331ef2fa008a3bd59db61af88585137a5be2e7806608fae1ae52e3a7bb82272db1668f6e0f118fe03371afc436a2ad3fc413e5edbbfeb8ff3ee4edfecfe7e2bf57544e6faaddd9085b325ddb79be7f3b596a46108930531ab4b4498cad6ef72e3133db5ed08933146b329da1cf28d11987112fbfb3a6a631d6b8d4156876331065c14e7b2622935650618688b73263a1523902bd1e30900b3e471a8f86cbdb2a823f6d8eb00a407463f256c3a829b3d71524817f11bab1dc7805b6a32de9489f5d6bda1abf4b8004cc106cc56cec2642c532f8a2ec263fc7af84c501f3041a2f089fa49916ca2c6809526d60c3471a36e92e095ff426165c9537f7faa30913aff7a08b66e254c2c6b49bbc8dd167f186c7751323735c6786620abc4bfe0ae91cce1127e9d566db8cadb241595dc2e9889e46a68641386e1cf3d6ffed531324b5dc1ddd73fba9f58f9a18a362abcc7c5c42993993b5fa6098bfc0bcdb512afaf73704aef1ad0b2f969ab2f587d441330c87e902e1ed5956032e897968d07465c7347143e09f3db7cabb019e1205a8e468a67d7f558014ce3cad4422c2c28feae6a732cf101ac09c2f93e188c1dfbc458bc9f607d1fb756ac12fe15b52c61207d387e602d75f615e907a724f3af2c811e74de56b4a49fb6e02afadbc972a193d9a835b4da79d83de60dc079980aabd6c35bf5b42de0b156d4f87ad3280eb42b2b8605b9bd779fe5a3814035447810c83a05f2ac9f90bc01a81d2aa749380b241d78648fc6774c9b97c354bc7e9aa42f72b2c35c21d94374ad5986cd278c125ace44630c167f1028e3e21aa435904d97c1ce4bbd26b07af2d66e13526f3938f70</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">输入密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">而广东不会下雪的</summary>
    
    
    
    <category term="随记" scheme="https://www.fomal.cc/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>2024跨年团建！</title>
    <link href="https://www.fomal.cc/posts/6585f8e6.html"/>
    <id>https://www.fomal.cc/posts/6585f8e6.html</id>
    <published>2023-12-31T17:51:27.000Z</published>
    <updated>2024-05-08T14:14:52.848Z</updated>
    
    <content type="html"><![CDATA[<h1>Only in battlefield!</h1><p>爷青回！</p><p><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b88b0e3d8a.jpg" alt="屏幕截图 2024-05-08 221358.jpg"></p>]]></content>
    
    
    <summary type="html">only in battlefield!</summary>
    
    
    
    <category term="战地" scheme="https://www.fomal.cc/categories/%E6%88%98%E5%9C%B0/"/>
    
    
    <category term="战地" scheme="https://www.fomal.cc/tags/%E6%88%98%E5%9C%B0/"/>
    
  </entry>
  
  <entry>
    <title>高中的一些照片</title>
    <link href="https://www.fomal.cc/posts/f0bcd065.html"/>
    <id>https://www.fomal.cc/posts/f0bcd065.html</id>
    <published>2023-12-26T15:51:33.000Z</published>
    <updated>2024-06-25T02:55:28.339Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b8be36f87b.jpeg" alt="屏幕截图 2024-03-12 143323.jpeg"></p><p><a href="https://cloud.189.cn/web/share?code=jYfUFnAv6rQv%EF%BC%88%E8%AE%BF%E9%97%AE%E7%A0%81%EF%BC%9Atne7%EF%BC%89">https://cloud.189.cn/web/share?code=jYfUFnAv6rQv（访问码：tne7）</a></p><p>存档</p>]]></content>
    
    
    <summary type="html">高中照片留档</summary>
    
    
    
    <category term="随记" scheme="https://www.fomal.cc/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
    <category term="随记" scheme="https://www.fomal.cc/tags/%E9%9A%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>对博客文档进行加密（密码：zhongye）</title>
    <link href="https://www.fomal.cc/posts/68a0f465.html"/>
    <id>https://www.fomal.cc/posts/68a0f465.html</id>
    <published>2023-11-21T06:24:01.000Z</published>
    <updated>2024-06-24T17:22:43.338Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="你妈." data-whm="...">  <script id="hbeData" type="hbeData" data-hmacdigest="b506d77303541eb045b6007bc8aa292c962902380a8ce17a48e2636970c8956c"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">密码给了啊啊啊啊.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">前端加密测试</summary>
    
    
    
    
    <category term="加密" scheme="https://www.fomal.cc/tags/%E5%8A%A0%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>GITHUB宝藏项目</title>
    <link href="https://www.fomal.cc/posts/e9b6e2e1.html"/>
    <id>https://www.fomal.cc/posts/e9b6e2e1.html</id>
    <published>2023-11-18T05:36:20.000Z</published>
    <updated>2024-06-19T16:06:22.086Z</updated>
    
    <content type="html"><![CDATA[<p>Awesome GitHub Repo 会收集整理 GitHub 上高质量、有趣的开源项目，并将他们进行归类。值得注意的是，不是简单的按照编程语言来分类，而是按照更有趣的分类方式，比如：有趣项目、沙雕项目、实战项目、学习项目、实用工具等等。同时欢迎通过 Pull Request 或者 issues 给我们推荐优秀好玩的开源项目。</p><p><strong>欢迎订阅每日推送</strong></p><p>微信公众号：<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247509655&amp;idx=1&amp;sn=a0879e64562cfd2b3114d5cdd09b0b20&amp;chksm=f9a2755eced5fc4822404fae1bd71b611fe77419cc8ee8ee52f9bb2cafaf11f0f42cc183876f&amp;token=822393006&amp;lang=zh_CN#rd">@逛逛GitHub</a>    新浪微博：<a href="https://weibo.com/u/7486950118">@逛逛GitHub</a>      知乎：<a href="https://www.zhihu.com/people/riao-11">@逛逛GitHub</a></p><p><strong>说明</strong></p><p><a href="https://mrbird.cc"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a> 表示该项目对应的网站或者博客；</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22492ced5ad84397b04927167a3b92841c95fecb7424a9a0f5e91aae24e2c59d681f2ea2d&amp;idx=1&amp;mid=2247497563&amp;scene=21&amp;sn=bbc1d4f23b6fc15d7a14641f746cfe57#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> 表示在公众号发布的项目简介；</p><h2 id="目录">目录</h2><ul><li><p><a href="#awesome-github-repo">Awesome GitHub Reo</a></p></li><li><p><a href="#%E7%9B%AE%E5%BD%95">目录</a></p></li><li><p>好玩项目</p><ul><li><a href="#%E9%BB%91%E7%A7%91%E6%8A%80">黑科技</a></li><li><a href="#%E6%B2%99%E9%9B%95%E9%A1%B9%E7%9B%AE">沙雕项目</a></li><li><a href="#%E6%91%B8%E9%B1%BC%E7%A5%9E%E5%99%A8">摸鱼神器</a></li><li><a href="#%E5%AE%9D%E8%97%8F%E9%A1%B9%E7%9B%AE">宝藏项目</a></li><li><a href="#%E5%BC%80%E6%BA%90%E6%B8%B8%E6%88%8F">开源游戏</a></li></ul></li><li><p>实战项目</p><ul><li><a href="#%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE">前后端分离项目</a></li><li><a href="#%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE">毕业设计实战项目</a></li><li><a href="#%E9%AB%98%E4%BB%BFapp%E9%A1%B9%E7%9B%AE">高仿 App 项目</a></li><li><a href="#vue%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE">Vue 实战项目</a></li><li><a href="#%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE">小程序实战项目</a></li><li><a href="#springboot%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE">Spring Boot 实战项目</a></li><li><a href="#%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F">管理系统</a></li><li><a href="#%E5%8F%AF%E8%A7%86%E5%8C%96%E9%A1%B9%E7%9B%AE">可视化项目</a></li><li><a href="#%E4%BD%8E%E4%BB%A3%E7%A0%81%E9%A1%B9%E7%9B%AE">低代码项目</a></li><li><a href="#%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE">人脸识别项目</a></li></ul></li><li><p>开源工具</p><ul><li><a href="#%E5%A5%BD%E7%94%A8%E5%B7%A5%E5%85%B7">好用工具</a></li><li><a href="#docker%E5%B7%A5%E5%85%B7">Docker 工具</a></li><li><a href="#%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7">命令行工具</a></li><li><a href="#%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7">效率工具</a></li></ul></li><li><p>学习项目</p><ul><li><a href="#%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE">学习项目</a></li><li><a href="#%E5%AD%A6%E4%B9%A0idea">学习 IDEA</a></li><li><a href="#%E7%AE%97%E6%B3%95%E9%A1%B9%E7%9B%AE">算法项目</a></li><li><a href="#python%E8%B5%84%E6%BA%90">Python 资源</a></li><li><a href="#%E7%94%B5%E5%AD%90%E4%B9%A6%E7%B1%8D">电子书籍</a></li><li><a href="#linux%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE">Linux 学习项目</a></li><li><a href="#%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%80%83%E7%A0%94%E9%A1%B9%E7%9B%AE">计算机考研项目</a></li></ul></li><li><p>大厂开源</p><ul><li><a href="#%E7%99%BE%E5%BA%A6%E5%BC%80%E6%BA%90">百度开源</a></li><li><a href="#%E8%85%BE%E8%AE%AF%E5%BC%80%E6%BA%90">腾讯开源</a></li><li><a href="#%E9%98%BF%E9%87%8C%E5%BC%80%E6%BA%90">阿里开源</a></li></ul></li><li><p><a href="https://github.com/jaywcjlove/awesome-mac/blob/master/README-zh.md#license">License</a></p></li></ul><h2 id="好玩项目">好玩项目</h2><h3 id="黑科技">黑科技</h3><p>盘点 GitHub 上堪称黑科技的开源项目，请托起你的下巴不要惊掉。</p><ul><li><a href="https://github.com/adamian98/pulse">PULSE</a> - 该开源项目可以通过给图片增加像素点来实现去马赛克或高清化。<a href="http://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1ccaeced645b83f416eff09d401ea6f0743c9af309909391af350593e8dd39e3258c1395d&amp;idx=1&amp;mid=2247491431&amp;scene=21&amp;sn=0741ecb86a597fa49d0adaac62d8e8ea#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/beurtschipper/Depix">Depix</a> - 给打了马赛克的文字去码。<a href="http://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1ccaeced645b83f416eff09d401ea6f0743c9af309909391af350593e8dd39e3258c1395d&amp;idx=1&amp;mid=2247491431&amp;scene=21&amp;sn=0741ecb86a597fa49d0adaac62d8e8ea#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/thunil/TecoGAN">TecoGAN</a> - 给视频去马赛克或者进行超分辨率。<a href="http://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1ccaeced645b83f416eff09d401ea6f0743c9af309909391af350593e8dd39e3258c1395d&amp;idx=1&amp;mid=2247491431&amp;scene=21&amp;sn=0741ecb86a597fa49d0adaac62d8e8ea#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/CorentinJ/Real-Time-Voice-Cloning">Real-Time-Voice-Cloning</a> - 只需要你 5 秒钟的语音，就能生成你说出来的任何话，细思极恐。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22901ced5a017e5e32bb51b8650dd7063416119552a676c34be4a94302073c196666b4097&amp;idx=1&amp;mid=2247498440&amp;scene=21&amp;sn=19b48002eeeed367f70270d7652f9203#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/vijishmadhavan/SkinDeep">SkinDeep</a> - 黑科技一键去除图片、视频中的纹身。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22baaced5a2bc1a32ca9d7354aafe880f8a6ca211119869c8ec68e554bef9776de8fe9081&amp;idx=1&amp;mid=2247497827&amp;scene=21&amp;sn=ba59a1acda4978b8a007dc57e1a31ec7#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/orpatashnik/StyleCLIP">StyleCLIP</a> - AI自动 P图，见没见过扫把头的马斯克？<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22baaced5a2bc1a32ca9d7354aafe880f8a6ca211119869c8ec68e554bef9776de8fe9081&amp;idx=1&amp;mid=2247497827&amp;scene=21&amp;sn=ba59a1acda4978b8a007dc57e1a31ec7#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/DavidBuchanan314/tweetable-polyglot-png">polyglot-png</a> - 明明下载的是一张图片，只需修改后缀名，图片就变成了一首歌，一串代码。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a226f6ced5afe0f6847f72b5535078cc7599f065a0a3e8d346c78dd3ed7a73188f19b421db&amp;idx=1&amp;mid=2247497023&amp;scene=21&amp;sn=29ef17b8158e63b04399a24afa9d7271#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/FengQuanLi/ResnetGPT">ResnetGPT</a> - 教你训练一个模型，让人工智能玩王者荣耀。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22294ced5ab828547cb4492937c72a5f49e770a742120a4b04acf6083add861eeb85783d5&amp;idx=1&amp;mid=2247496029&amp;scene=21&amp;sn=9717ff7ca6f406bad1c8414aa004589b#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/wwy2018/intelligent-uavpath-planning-simulation-system-S">intelligent-uavpath-planning</a> - 这个项目是一个智能无人机路径规划仿真系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a222c7ced5abd1ad729e28809295e75d1efe78d06c5f1e9cb93cd7df1a0c439caaa652bb86&amp;idx=1&amp;mid=2247495950&amp;scene=21&amp;sn=3fe6d5a71730ba0a0dfe3ac101318911#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/EssayKillerBrain/EssayKiller_V2">EssayKiller_V2</a> - 一个人利用三个月，开发了一个会写作文的人工智能。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1db92ced65284b5c835bc27793655e787dfd58ca67c19e080f1c207af9dd29e4c526f7129&amp;idx=1&amp;mid=2247485531&amp;scene=21&amp;sn=446c10dd3f58f996a97d00905d1c6934#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/lllyasviel/style2paints">style2paints</a> - 不需要安装任何环境、做任何配置，下载然后双击，就可以给线描图画上色。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2278dced5ae9b650d1aa1aaa72f042453cea48186a739a7a88a37e95d629efe653eb609b8&amp;idx=1&amp;mid=2247496772&amp;scene=21&amp;sn=638c09b730f46f0d39191e681f8159a1#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/BeyondDimension/SteamTools"></a>Steam++ 是一个开源跨平台的多功能 Steam 工具箱，此工具的大部分功能都是需要下载安装 Steam 才能使用。功能包括网络加速、脚本配置、账号切换、库存管理、自动挂卡、游戏工具，比如强制游戏窗口使用无边框窗口化。</li></ul><h3 id="沙雕项目">沙雕项目</h3><p>盘点 GitHub 上的沙雕项目，这些项目可能会让你笑的合不拢嘴。</p><ul><li><a href="https://github.com/s-unscrupulous/idea_seat">idea_seat</a> - 程序员的女朋友开发的一款防猝死 IDEA 插件。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23d12ced5b404e6fc4a758e3b07c89d7a45f9f5ad7a04588487d821fd3e75f19b693dc6c6&amp;idx=1&amp;mid=2247495387&amp;scene=21&amp;sn=2c63281a73d37d4a431c48cf2f08e3fa#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/darknessomi/musicbox">musicbox</a> - 符合程序员气质的命令行版本网易云音乐。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1c4feced64de8403fe6c1df8ec5d12de8055df88c5c61f7ada49268fb4eac2916c94946b1&amp;idx=1&amp;mid=2247489335&amp;scene=21&amp;sn=7670e0a70d76b320a15724f033a77513#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/nvbn/thefuck">thefuck</a> - 敲错命令时大喊一声 fuck ，并输入 fuck 命令，刚刚键入的错误命令就会自动修正。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a226dcced5afca55e22e273c9bee7df94403d21e4edb2e142b5c6591613736691392d90e68&amp;idx=1&amp;mid=2247496981&amp;scene=21&amp;sn=a70e54f093ab16cc365c29c559c620f1#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/maebert/themostdangerouswritingapp">dangerouswriting</a> - 你要一直写，因为如果停下来就自动删稿件。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22719ced5ae0fb17c82cdbabca8dc44fbf6eb1548aaea1f8065f042baa6ca00f2fc9a64f2&amp;idx=1&amp;mid=2247496912&amp;scene=21&amp;sn=ea8be345cfde59f9e732e25ac48e710a#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/dcalsky/zzkia">zzkia</a> - 还记得那条诺基亚短信吗？这个开源项目能帮你生成。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22775ced5ae6349067ec38afe13fba7fbdde1eb794e36bcc1734bf9d004834aa9addba515&amp;idx=1&amp;mid=2247496892&amp;scene=21&amp;sn=40f69261864b8a93d86e122bce078035#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/lacymorrow/crossover">crossover</a> - FPS 游戏中，狙是没有准星的。使用这个开源项目可以在你屏幕上显示一个准星，堪称物理外挂。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22076ced5a9606d38d337ff0e6b136c824dafae6a5192dfeb67a46ba394ce8a76eb8df02e&amp;idx=1&amp;mid=2247496639&amp;scene=21&amp;sn=e15b65ddf650da3097ffe813f8a8d4ca#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="github.com/Jiangzemin1926/Goldflower">Goldflower</a> - 这个项目模拟了大量的炸金花对局，生成了一个胜利表，根据当前对局人数和你手中的牌，给你一个胜率。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a220acced5a9ba6b85eba750fa41c4635827c75c3f59e06cae7dfb6f69777ab6ab837688ba&amp;idx=1&amp;mid=2247496549&amp;scene=21&amp;sn=c8a3d9992c2a618273da9122b5335e9c#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/RayWangQvQ/BiliBiliTool">BiliBiliTool</a> - 描BiliBiliTool 是一个 B 站自动执行任务的工具，帮助我们轻松升级会员到 Lv6 。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1c1a9ced648bfcb12a66c874666de0bc020434bbd8e8b0e9f730546ca1a2471d0e1eafacc&amp;idx=1&amp;mid=2247488096&amp;scene=21&amp;sn=efb7daccf9d472ed890839c87b79848e#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/zhaoolee/ChineseBQB">ChineseBQB</a> - 是一个表情包博物馆，中国表情包大集合，堪称 GitHub 最有毒的仓库。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247498844&amp;idx=2&amp;sn=488bf3391a9b7a260099b8d7e9e6bf7a&amp;chksm=f9a22f95ced5a683bc20dd13603de2b6b169b72b8dca47bd100cbb45c354b46e82343797f5ad&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/xtyxtyx/sorry">sorry</a> - 表情包生成器，能够生成类似于下方这样的 GIF 表情包。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247498844&amp;idx=2&amp;sn=488bf3391a9b7a260099b8d7e9e6bf7a&amp;chksm=f9a22f95ced5a683bc20dd13603de2b6b169b72b8dca47bd100cbb45c354b46e82343797f5ad&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Kaiyiwing/qwerty-learner">qwerty-learner</a> - 为键盘工作者设计的单词记忆与英语肌肉记忆锻炼软件，针对部分人群输入英语时「提笔忘字」的现象，开源了这个软件。</li></ul><h3 id="摸鱼神器">摸鱼神器</h3><ul><li><a href="https://github.com/svenstaro/genact">genact</a> - 该神器会显示一些多任务场景，让看到你电脑屏幕的人都误以为你在 Coding。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22463ced5ad753dc826e9eb975a5585068c8275293cd2c7835f56cbd619cb7622c849749f&amp;idx=2&amp;mid=2247497642&amp;scene=21&amp;sn=ec8f2d7a4f03a40d3186e23dadfb5da3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/tangxiangmin/cocos-big-watermelon">watermelon</a> - 前段时间大火的游戏合成大西瓜，有人复现了。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2208fced5a9993422770119081c252a09d9ab168d41544c4957ce56b72627abb46b537afe&amp;idx=1&amp;mid=2247496518&amp;scene=21&amp;sn=86125e12de8d2df77bf255f44da7287d#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/ainilili/ratel">ratel</a> - 摸鱼神器：在命令行中玩斗地主。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1da0dced6531b8def326b7357f57ee4172b404484d5ad98aa211e3212f5c4f6a7a6a7a3f3&amp;idx=1&amp;mid=2247485892&amp;scene=21&amp;sn=20bac465c0c16b6f8684844ddd8b3865#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/yisier/thief-book-ideaVscode">thief-book-ideaVscode</a> - 我在 IDEA 上看小说，摸鱼神器神器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247501135&amp;idx=1&amp;sn=a1c6bc746fa01dddb143971d2bcd3f90&amp;chksm=f9a21686ced59f901f0f628574360b31779d48ad6689656996272e2f0ff1d2651ce84c696416&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/niudai/VSCode-Zhihu">VSCode-Zhihu</a> - 用 VSCode 看知乎的摸鱼神器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247501135&amp;idx=1&amp;sn=a1c6bc746fa01dddb143971d2bcd3f90&amp;chksm=f9a21686ced59f901f0f628574360b31779d48ad6689656996272e2f0ff1d2651ce84c696416&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/TimothyYe/glance">glance</a> - 用命令行看小说的摸鱼神器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247501135&amp;idx=1&amp;sn=a1c6bc746fa01dddb143971d2bcd3f90&amp;chksm=f9a21686ced59f901f0f628574360b31779d48ad6689656996272e2f0ff1d2651ce84c696416&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/cteamx/Thief">Thief</a> - 这是一款功能强大的跨平台摸鱼。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247501135&amp;idx=1&amp;sn=a1c6bc746fa01dddb143971d2bcd3f90&amp;chksm=f9a21686ced59f901f0f628574360b31779d48ad6689656996272e2f0ff1d2651ce84c696416&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/epidemian/snake">snake</a> - 一个可以在地址栏玩贪吃蛇的摸鱼神器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247501135&amp;idx=1&amp;sn=a1c6bc746fa01dddb143971d2bcd3f90&amp;chksm=f9a21686ced59f901f0f628574360b31779d48ad6689656996272e2f0ff1d2651ce84c696416&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/a8m/play">play</a> - 一个帮助你在命令行玩俄罗斯方块的神器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247501135&amp;idx=1&amp;sn=a1c6bc746fa01dddb143971d2bcd3f90&amp;chksm=f9a21686ced59f901f0f628574360b31779d48ad6689656996272e2f0ff1d2651ce84c696416&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/ainilili/ratel">ratel</a> - 一个可以在命令行玩斗地主的摸鱼神器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247501135&amp;idx=1&amp;sn=a1c6bc746fa01dddb143971d2bcd3f90&amp;chksm=f9a21686ced59f901f0f628574360b31779d48ad6689656996272e2f0ff1d2651ce84c696416&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/skywind3000/preserve-cd">preserve-cd</a> - dos 游戏大合集。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247501135&amp;idx=1&amp;sn=a1c6bc746fa01dddb143971d2bcd3f90&amp;chksm=f9a21686ced59f901f0f628574360b31779d48ad6689656996272e2f0ff1d2651ce84c696416&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/zy445566/vscode-plugin-swimming">vscode-plugin-swimming</a> - 写完代码之后可以重新把代码写一遍，摸鱼神器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247501135&amp;idx=1&amp;sn=a1c6bc746fa01dddb143971d2bcd3f90&amp;chksm=f9a21686ced59f901f0f628574360b31779d48ad6689656996272e2f0ff1d2651ce84c696416&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/wuyr/intellij-media-player">intellij-media-player</a> - 在编辑器里看电影，尝试过没？<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247501135&amp;idx=1&amp;sn=a1c6bc746fa01dddb143971d2bcd3f90&amp;chksm=f9a21686ced59f901f0f628574360b31779d48ad6689656996272e2f0ff1d2651ce84c696416&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Hironsan/BossSensor">BossSensor</a> - 终极摸鱼神器：通过AI人脸识别，老板来了就切换桌面。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247501135&amp;idx=1&amp;sn=a1c6bc746fa01dddb143971d2bcd3f90&amp;chksm=f9a21686ced59f901f0f628574360b31779d48ad6689656996272e2f0ff1d2651ce84c696416&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/YaoZeyuan/zhihuhelp">zhihuhelp</a> - 项目基于知乎现有接口+TypeScript 构建，为知友提供方便的,以供自己阅读/自身结集整理为目的的将知乎内容转为 Epub 电子书的途径。</li></ul><h3 id="宝藏项目">宝藏项目</h3><ul><li><a href="https://github.com/Ryujinx/Ryujinx">Ryujinx</a> - 教你如何在 PC 上玩 Switch。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22af8ced5a3ee05c0cdc2eff4ada9d0a1e3f0ae5213e8cf05932304680c4f3c4d0a010474&amp;idx=1&amp;mid=2247498033&amp;scene=21&amp;sn=dcbf6900777a4578ef27002e9ac3b687#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Pzoom522/HistSumm">HistSumm</a> - 明朝版的今日头条，你见过吗？。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2270aced5ae1c946b66147693c7c24af1e92291a706c75511c2b6bf264a3f29528af9c2d3&amp;idx=1&amp;mid=2247496899&amp;scene=21&amp;sn=4ae17bcc73dcd93475337e2c3088562f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/skywind3000/preserve-cd">preserve-cd</a> - 绝版游戏保护计划：把一些经典小游戏刻录永久保存。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22754ced5ae42caec5a5826571e50d2297193653f6145638bd9b2399d92bbec777915ee38&amp;idx=1&amp;mid=2247496861&amp;scene=21&amp;sn=153670b7064396ec4523fc4bf6fa9596#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/rauchg/wifi-password">wifi-password</a> - 用这个工具可以快速获取你当前连接 WIFI 的密码。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22168ced5a87e1d7e45558bd62171e44588e75996ffe6a4117fbaf72d1509586678c86690&amp;idx=1&amp;mid=2247496353&amp;scene=21&amp;sn=0f663e8f1f17be2952c6360e33fad6d7#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/coder2gwy/coder2gwy">coder2gwy</a> - 一份程序员考公指南冲上热榜，几天时间不到，被标星7.3k。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23d81ced5b497c50f64aa20c9e297ff3ba5db0cddae9b089242cb619de58e4b80d7e6fe13&amp;idx=1&amp;mid=2247495240&amp;scene=21&amp;sn=c4efb18f38cdd89270d97b9873826ca2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="github.com/formulahendry/955.WLB">955.WLB</a> - 955 不加班的公司名单，我看了看，加上个人了解，信息还算准确，但大多都是外企。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23dc7ced5b4d123299b95701d424a73ba3edfa03c9f726fc33b9d5b3955dc7ed185e2505f&amp;idx=1&amp;mid=2247495182&amp;scene=21&amp;sn=cf697ace347f1b425b92a1c69cb215df#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/ayuer/shanghai_house_knowledge">shanghai_house_knowledge</a> - 一位程序员整理了一份「上海购房宝典」在 GitHub 开源。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23fdbced5b6cd3af92d467ccb6746558c1352ab205a5312da565571598ba367978e425fbd&amp;idx=1&amp;mid=2247494674&amp;scene=21&amp;sn=9d2274b706a9459cb29ed4853fef003e#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/shengxinjing/programmer-job-blacklist">job-blacklist</a> - 程序员找工作黑名单，换工作和当技术合伙人需谨慎。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1c453ced64d45c7208ddbf8058360271c927565f66248cb8246b0fa30fc11593c2ceeccda&amp;idx=1&amp;mid=2247489434&amp;scene=21&amp;sn=8b193c2c1ef1ea96a3f84b143d213810#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/florinpop17/app-ideas">app-ideas</a> - 一个项目列表，该列表会根据开发者的水平提供一些练手项目，帮助你提升编程技巧。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a224eaced5adfcbf3ba0a1ded31d9dd11ed8b4d412d973ea40c1585a329cf10d6d38fc9d86&amp;idx=1&amp;mid=2247497507&amp;scene=21&amp;sn=70cde880b15a8ba1323223d50069a6cb#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/GorvGoyl/Clone-Wars">Clone-Wars</a> - 该项目收集了世界上知名网站的源码，包括：谷歌、Youtube、IMDB等等。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/endlesshh/idCardCv">idCardCv</a> - Java 身份证号码识别系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1dba0ced652b683dbea88fa026232ccc0d3a1d1326f25fdb9574386d23a3259b647d308b7&amp;idx=1&amp;mid=2247485545&amp;scene=21&amp;sn=1e54691f815f1d1d4dde905613a82ad2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/vnpy/vnpy">vnpy</a> - VeighNa 是一套基于 Python 的开源量化交易系统开发框架，在开源社区持续不断的贡献下一步步成长为多功能量化交易平台，自发布以来已经积累了众多来自金融机构或相关领域的用户，包括私募基金、证券公司、期货公司等。</li><li><a href="https://github.com/Sycnex/Windows10Debloater">Windows10Debloater</a> - 一个脚本用来删除 Windows 预安装的不必要的应用程序。</li></ul><h3 id="开源游戏">开源游戏</h3><ul><li><a href="https://github.com/OpenDiablo2/OpenDiablo2">OpenDiablo2</a> - 国外大神复刻了暗黑破坏神2。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d474ced65d6205cc37efb6e1d2f57a4e4747fcfe147dc00a73430dd03b10693f6e0c6e56&amp;idx=1&amp;mid=2247485373&amp;scene=21&amp;sn=33df61e684fb0c68e60c11b530337b41#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/marblexu/PythonPlantsVsZombies">PlantsVsZombies</a> - 开源的《植物大战僵尸》。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d533ced65c25d9e3c1b3410cb0ee5954efdeace0b34079cff774bad88a1840438f13a06e&amp;idx=1&amp;mid=2247485178&amp;scene=21&amp;sn=15854bb7a53aad264d2f97ce2c5818fa#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/ainilili/ratel">ratel</a> - 摸鱼神器：在命令行中玩斗地主。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1da0dced6531b8def326b7357f57ee4172b404484d5ad98aa211e3212f5c4f6a7a6a7a3f3&amp;idx=1&amp;mid=2247485892&amp;scene=21&amp;sn=20bac465c0c16b6f8684844ddd8b3865#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/skywind3000/preserve-cd">preserve-cd</a> - 绝版游戏保护计划：把一些经典小游戏刻录永久保存。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22754ced5ae42caec5a5826571e50d2297193653f6145638bd9b2399d92bbec777915ee38&amp;idx=1&amp;mid=2247496861&amp;scene=21&amp;sn=153670b7064396ec4523fc4bf6fa9596#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/tangxiangmin/cocos-big-watermelon">watermelon</a> - 前段时间大火的游戏合成大西瓜，有人复现了。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2208fced5a9993422770119081c252a09d9ab168d41544c4957ce56b72627abb46b537afe&amp;idx=1&amp;mid=2247496518&amp;scene=21&amp;sn=86125e12de8d2df77bf255f44da7287d#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h2 id="实战项目">实战项目</h2><h3 id="前后端分离项目">前后端分离项目</h3><ul><li><a href="https://github.com/lenve/vhr">vhr</a> - 微人事是一个前后端分离的人力资源管理系统，项目采用 SpringBoot+Vue 开发。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22492ced5ad84397b04927167a3b92841c95fecb7424a9a0f5e91aae24e2c59d681f2ea2d&amp;idx=1&amp;mid=2247497563&amp;scene=21&amp;sn=bbc1d4f23b6fc15d7a14641f746cfe57#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/MarkerHub/vueblog">vueblog</a> - 前后端分离的博客项目项目，适合没有前后端分离开发经验的朋友。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2260eced5af18b68238a82d54f1733d1d02b3f3ea2a018d880415ade8827ef8a65407af8e&amp;idx=1&amp;mid=2247497159&amp;scene=21&amp;sn=16a7d87fc81ce88672f8d0c2993c1d56#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/lenve/VBlog">VBlog</a> - V部落博客管理平台。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2260eced5af18b68238a82d54f1733d1d02b3f3ea2a018d880415ade8827ef8a65407af8e&amp;idx=1&amp;mid=2247497159&amp;scene=21&amp;sn=16a7d87fc81ce88672f8d0c2993c1d56#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/sqmax/springboot-project">springboot-project</a> - 基于微信服务号平台的点餐系统，前后端完全分离。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2260eced5af18b68238a82d54f1733d1d02b3f3ea2a018d880415ade8827ef8a65407af8e&amp;idx=1&amp;mid=2247497159&amp;scene=21&amp;sn=16a7d87fc81ce88672f8d0c2993c1d56#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/elunez/eladmin">eladmin</a> - 一个界面美观基于前后端分离的后台管理系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2260eced5af18b68238a82d54f1733d1d02b3f3ea2a018d880415ade8827ef8a65407af8e&amp;idx=1&amp;mid=2247497159&amp;scene=21&amp;sn=16a7d87fc81ce88672f8d0c2993c1d56#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/mumu-osc/NiceFish">NiceFish</a> - 美人鱼阅读网站，采用前后端分离结构。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2260eced5af18b68238a82d54f1733d1d02b3f3ea2a018d880415ade8827ef8a65407af8e&amp;idx=1&amp;mid=2247497159&amp;scene=21&amp;sn=16a7d87fc81ce88672f8d0c2993c1d56#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/newbee-ltd/newbee-mall">newbee-mall</a> - 前后端分离开发的商城项目，分为商城系统、管理系统、前台系统等。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23abeced5b3a8c9bd35b86f504b9700648cfd748d4f3845b566e48e0b17c5b5785f588647&amp;idx=1&amp;mid=2247494007&amp;scene=21&amp;sn=e10c1f936abe2d16653bb4d7e3030050#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="毕业设计实战项目">毕业设计实战项目</h3><ul><li><a href="https://github.com/mindskip/xzs">xzs</a> - 一款 Spring 技术栈 + Vue.js 的前后端分离的考试系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="github.com/19920625lsg/spring-boot-online-exam">spring-boot-online-exam</a> - 在线考试系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="gitee.com/microapp/flash-waimai">flash-waimai</a> - 一个完整的外卖系统，包括手机端，后台管理。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/bysj2021/cinema">cinema</a> - 基于 SSM 的电影院选座系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/RAOE/show-videos">show-videos</a> - 短视频社交小程序，系统包括用户端和后台管理端。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/yukilzw/dy_flutter">dy_flutter</a> - flutter 重构的斗鱼直播 APP。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/20100507/emotional_analysis">emotional_analysis</a> - 基于机器学习的商品评论情感分析。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/pengLP/sina_analysis">sina_analysis</a> - 利用微博热点话题舆情聚类分析。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/csmliu/STGAN">STGAN</a> - 可以对生成的人脸进行操纵，比如眼镜、胡子、发型等。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/junyanz/CycleGAN">CycleGAN</a> - 图像风格迁移。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/LuckyZXL2016/Movie_Recommend">Movie_Recommend</a> - 基于大数据过滤引擎的电影推荐系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/luochana/News_recommend">News_recommend</a> - 基于大数据计算引擎的新闻推荐系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/geekyouth/SZT-bigdata">SZT-bigdata</a> - 通过大数据技术角度来研究深圳地铁客运能力。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/LuckyZXL2016/News_Spark">News_Spark</a> - 基于 Spark2.x 新闻网大数据实时分析可视化系统项目。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23ef2ced5b7e4c927327636793cfe08aa4bcbd1c8d8e19058622e4d90bcc3a5a6202cd481&amp;idx=1&amp;mid=2247494971&amp;scene=21&amp;sn=6bca0d2355bfd780eabba923c3221f8f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="高仿App项目">高仿App项目</h3><ul><li><a href="https://github.com/xujiyou/zhihu-flutter">zhihu-flutter</a> - 高仿知乎。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/tbl00c/TLChat">TLChat</a> - 高仿微信。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/zxuqian/html-css-examples/tree/master/31-05-wechat-emoji-effect">wechat-emoji-effect</a> - 高仿微信 8.0 炸弹特效。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/zwStar/vue-meituan">vue-meituan</a> - 高仿美团外卖点餐。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/chaychan/TouTiao">TouTiao</a> - 高仿今日头条。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/sanfengliao/vue-juejin">vue-juejin</a> - 高仿掘金。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/sam408130/DSLolita">DSLolita</a> - 高仿微博 iOS  版本。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/wenmingvs/WeiBo">WeiBo</a> - 高仿微博 Android 版本。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/sshiqiao/douyin-ios-objectc">douyin-ios-objectc</a> - 高仿抖音 iOS  版本。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/18380438200/Tiktok">Tiktok</a> - 高仿 Tiktok。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/aslanyanhaik/youtube-iOS">youtube-iOS</a> - 高仿 YouTube ios 版本。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/TeamNewPipe/NewPi">NewPi</a> - 高仿 YouTube Android 版本。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/yukilzw/dy_flutter">dy_flutter</a> - 高仿斗鱼直播 App。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/boyan01/flutter-netease-music">flutter-netease-music</a> - 高仿网易云音乐。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/code-mcx/react-bilibili">react-bilibili</a> - 高仿 B 站。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/MichaelHuyp/Bilibili_Wuxianda">Bilibili_Wuxianda</a> - 高仿 B站 iOS 版本。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/HotBitmapGG/bilibili-android-client">bilibili-android-client</a> - 高仿 B 站 Android 版本。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22354ced5aa42aacba53fd64ba7f3ec698e8c79c6e6b99bf129e8fbf4c1b19b8383f186a8&amp;idx=1&amp;mid=2247495837&amp;scene=21&amp;sn=fe40014844622add5516913ebdfe09f2#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="Vue实战项目">Vue实战项目</h3><ul><li><a href="https://github.com/PanJiaChen/vue-element-admin">vue-element-admin</a> - 堪称接私活利器，是一个组件丰富的前端页面模板。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/vuejs/awesome-vue">awesome-vue</a> - 如果你打算学习 Vue，找一些 Vue 的学习资料或者示例，这个项目不能错过。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/ElemeFE/element">element</a> - 为开发者、设计师和产品经理准备的开源组件库，旨在快速搭建页面。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/hoppscotch/hoppscotch">hoppscotch</a> - 帮助你更快地创建请求，节省开发时间，早下班。。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/salomonelli/best-resume-ever">best-resume-ever</a> - 这个是一个简历项目，几行代码助你快速构建美观的简历。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Armour/vue-typescript-admin-template">admin-template</a> - 非常美观的模板，具有 TypeScript 支持。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/geongeorge/i-hate-regex">i-hate-regex</a> - 正则表达式的可视化表示。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/lanux/Vue-Admin">Vue-Admin</a> - 基于 Vue2、element ui 的后台管理系统 Demo。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/elunez/eladmin">eladmin</a> - 一个基于 Spring Boot、Vue 的前后端分离的后台管理系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22492ced5ad84397b04927167a3b92841c95fecb7424a9a0f5e91aae24e2c59d681f2ea2d&amp;idx=1&amp;mid=2247497563&amp;scene=21&amp;sn=bbc1d4f23b6fc15d7a14641f746cfe57#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://el-admin.xin"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li></ul><h3 id="小程序实战项目">小程序实战项目</h3><ul><li><a href="https://gitee.com/fuyang_lipengjun/platform">platform</a> - 实用的微信小程序商城项目。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2234fced5aa59a73be6bc5d894920b67485a84d2c8996300b8a648e36098ee17c9f379424&amp;idx=1&amp;mid=2247495814&amp;scene=21&amp;sn=af0aa7214825fd3acfd6fe103e0b0d63#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/fanchaoo/netease-cloud-music-community">netease-cloud-music-community</a> - 参照网易云音乐云村做的小程序社区。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1dacdced653db91bb860841b272b8c868e02ece6b08c6be1813c22a10af363fb74b308a7a&amp;idx=1&amp;mid=2247485700&amp;scene=21&amp;sn=93207b8d49bd52e8c9e4e0ed36e23a22#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/iamxjb/winxin-app-watch-life.net">winxin-app-watch-life.net</a> - WordPress 版微信小程序。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/imageslr/taro-library">taro-library</a> - 基于 Taro + Taro UI + Redux + Webpack + ES6 + Mock 的小程序书店。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/iven35/Himalayan-lite">Himalayan-lite</a> - 高仿喜马拉雅是一个初级项目完全使用微信小程序原生开发，没有使用自定义组件，非常的适合微信小程序开发新手。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/lsqy/taro-music">taro-music</a> - 基于 Taro 与网易云音乐 api 开发，技术栈主要是：typescript+taro+taro-ui+redux+react-hooks。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/kujian/githubTrending">githubTrending</a> - 小程序 GitHub Trending Hub 是一个以 Feed 流形式查看 GitHub Trending 仓库集合的工具。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/oubingbing/wechatAlliance">wechatAlliance</a> - 第一个项目是校园小情书的微信小程序，该项目功能包括表白墙、树洞、校园论坛。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="">Reo</a> - 描述。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="SpringBoot实战项目">SpringBoot实战项目</h3><ul><li><a href="https://github.com/dyc87112/SpringBoot-Learning">SpringBoot-Learning</a> - Spring Boot 基础教程，如果你没接触过该技术，可以从该教程学起。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22492ced5ad84397b04927167a3b92841c95fecb7424a9a0f5e91aae24e2c59d681f2ea2d&amp;idx=1&amp;mid=2247497563&amp;scene=21&amp;sn=bbc1d4f23b6fc15d7a14641f746cfe57#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="http://blog.didispace.com/"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/ityouknow/spring-boot-examples">spring-boot-examples</a> - Spring Boot 教程、技术栈示例代码，快速简单上手教程。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22492ced5ad84397b04927167a3b92841c95fecb7424a9a0f5e91aae24e2c59d681f2ea2d&amp;idx=1&amp;mid=2247497563&amp;scene=21&amp;sn=bbc1d4f23b6fc15d7a14641f746cfe57#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/wuyouzhuguli/SpringAll">SpringAll</a> - 该项目为 Spring 全家桶教程，包含 Spring Boot、Shiro、Spring Cloud，Spring Security 等等。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22492ced5ad84397b04927167a3b92841c95fecb7424a9a0f5e91aae24e2c59d681f2ea2d&amp;idx=1&amp;mid=2247497563&amp;scene=21&amp;sn=bbc1d4f23b6fc15d7a14641f746cfe57#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://mrbird.cc"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/xkcoding/spring-boot-demo">spring-boot-demo</a> - spring boot demo 是一个用来深度学习并实战 Spring Boot 的项目，目前总共包含 66 个集成 demo。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22492ced5ad84397b04927167a3b92841c95fecb7424a9a0f5e91aae24e2c59d681f2ea2d&amp;idx=1&amp;mid=2247497563&amp;scene=21&amp;sn=bbc1d4f23b6fc15d7a14641f746cfe57#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/cloudfavorites/favorites-web">favorites-web</a> - 云收藏是一个使用 Spring Boot 构建的开源网站，可以让用户在线随时随地收藏的一个网站。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22492ced5ad84397b04927167a3b92841c95fecb7424a9a0f5e91aae24e2c59d681f2ea2d&amp;idx=1&amp;mid=2247497563&amp;scene=21&amp;sn=bbc1d4f23b6fc15d7a14641f746cfe57#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a>  <a href="http://favorites.ren/index"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/lenve/vhr">vhr</a> - 微人事是一个前后端分离的人力资源管理系统，项目采用 SpringBoot+Vue 开发。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22492ced5ad84397b04927167a3b92841c95fecb7424a9a0f5e91aae24e2c59d681f2ea2d&amp;idx=1&amp;mid=2247497563&amp;scene=21&amp;sn=bbc1d4f23b6fc15d7a14641f746cfe57#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/elunez/eladmin">eladmin</a> - 一个基于 Spring Boot、Vue 的前后端分离的后台管理系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22492ced5ad84397b04927167a3b92841c95fecb7424a9a0f5e91aae24e2c59d681f2ea2d&amp;idx=1&amp;mid=2247497563&amp;scene=21&amp;sn=bbc1d4f23b6fc15d7a14641f746cfe57#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://el-admin.xin"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="github.com/19920625lsg/spring-boot-online-exam">spring-boot-online-exam</a> - 一款超级美观的在线考试系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d769ced65e7fb3dcecfc55b11485a6d17b5efaeff8869258d0edd7ee443a1f2fcecf0d9c&amp;idx=1&amp;mid=2247484576&amp;scene=21&amp;sn=a00551fe2083c683e842686cb20e12dc#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="http://129.211.88.191"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li></ul><h3 id="SpringCloud项目">SpringCloud项目</h3><ul><li><a href="https://github.com/macrozheng/mall-swarm">mall-swarm</a> - 一个基于 Spring Cloud 的微服务商城系统项目。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d675ced65f639801f6478782e677240380d57741efdc57748653ba1bc43ab8d5cca8b903&amp;idx=1&amp;mid=2247484860&amp;scene=21&amp;sn=913715afa3714a626b6f2eba30ae36b6#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/macrozheng/springcloud-learning">springcloud-learning</a> - Spring Cloud 技术教程。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d675ced65f639801f6478782e677240380d57741efdc57748653ba1bc43ab8d5cca8b903&amp;idx=1&amp;mid=2247484860&amp;scene=21&amp;sn=913715afa3714a626b6f2eba30ae36b6#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="管理系统">管理系统</h3><ul><li><a href="https://github.com/funnyzpc/mee-admin">mee-admin</a> - 一款轻量级、可快速上手的开源后台系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d675ced65f639801f6478782e677240380d57741efdc57748653ba1bc43ab8d5cca8b903&amp;idx=1&amp;mid=2247484860&amp;scene=21&amp;sn=913715afa3714a626b6f2eba30ae36b6#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="可视化项目">可视化项目</h3><ul><li><a href="https://github.com/Motianshi/distribute-tool">distribute-tool</a> - Spring Boot + Echarts实现用户访问地图可视化。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d462ced65d74be3a434c8a50a7dd471eb949248bdbe4811ca5eb81f224d54df9b745a04c&amp;idx=1&amp;mid=2247485355&amp;scene=21&amp;sn=183018d0aea5699ff3cd3319ea2a8259#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="低代码项目">低代码项目</h3><ul><li><a href="https://github.com/woai3c/visual-drag-demo">visual-drag-demo</a> - 一个开源的低代码平台项目，用户仅仅通过简单的拖拉拽就能生成一个页面。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247501142&amp;idx=2&amp;sn=23c51dc47afeba0f6939507897dcd50d&amp;chksm=f9a2169fced59f89b7ee69fb998fb914b8137d10e0b475be356ad917629e7aec038b1124ef5d&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/imcuttle/mometa">mometa</a> - mometa 不同于传统主流的低代码平台，其用户是面向开发者的代码可视设计编辑平台。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247508640&amp;idx=1&amp;sn=b842e02cde8f1c4ac6a71f27600bd97a&amp;chksm=f9a27169ced5f87f1023b17833eb7d4135d3914cf7879af41e24e510648b653040d00e0d1cf8&amp;token=1017536687&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/blocks/blocks">blocks</a> - 简单的低代码页面构建器，无需编写代码即可创建漂亮的网站。你只需要在右侧的组件区域选择你想要的模块，拖到左侧的编辑区域即可。这样通过简单的交互就能做出一个简洁的网站。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247506645&amp;idx=1&amp;sn=7638eee635c1c7df89acf9431e092c3f&amp;chksm=f9a2091cced5800a0a0d9ab253ebdf8557b74cb64ddbc76694cb5c05ecbf0312f9659b9578c4&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/ykfe/imove">imove</a> - iMove 是一个逻辑可复用的，面向函数的，流程可视化的 JavaScript 工具库。这个开源项目面向前端开发者，核心解决的是复杂逻辑复用的问题。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247506645&amp;idx=1&amp;sn=7638eee635c1c7df89acf9431e092c3f&amp;chksm=f9a2091cced5800a0a0d9ab253ebdf8557b74cb64ddbc76694cb5c05ecbf0312f9659b9578c4&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/vuegg/vuegg">vuegg</a> - 通过将组件直接拖放到可视化编辑器，然后通过简单的交互调整大小，最终通过拖拉拽的方式构建一个 Vue.js 项目。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247506645&amp;idx=1&amp;sn=7638eee635c1c7df89acf9431e092c3f&amp;chksm=f9a2091cced5800a0a0d9ab253ebdf8557b74cb64ddbc76694cb5c05ecbf0312f9659b9578c4&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/BuilderIO/builde">builde</a> - 通过在网页上进行编辑就能快速制作一个网页，想修改文字直接在网页上改，添加Banner、图片列表等等，通过简单的拖拉拽就行了。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247506645&amp;idx=1&amp;sn=7638eee635c1c7df89acf9431e092c3f&amp;chksm=f9a2091cced5800a0a0d9ab253ebdf8557b74cb64ddbc76694cb5c05ecbf0312f9659b9578c4&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/godoforange/rtvue-lowcode">rtvue-lowcode</a> - 一款基于 uniapp 框架和 uview 组件库的低代码开发平台，项目提供可视化拖拽编辑器，适用于app、小程序等项目开发。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247506645&amp;idx=1&amp;sn=7638eee635c1c7df89acf9431e092c3f&amp;chksm=f9a2091cced5800a0a0d9ab253ebdf8557b74cb64ddbc76694cb5c05ecbf0312f9659b9578c4&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/sparrow-js/sparrow">sparrow</a> - 一个功能强大的场景化低代码搭建工作台，只需要在这个工作台上进行组件的拖拉拽，就能实时输出可读性强、vue element-ui 组件库的源代码。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247505194&amp;idx=1&amp;sn=4b92e34ed99b61c44c5b492c45c0896e&amp;chksm=f9a206e3ced58ff5aa6d468e02719991c997bdb3a2f9f4289acbedab9099396e89ab097515e1&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/ly525/luban-h5">luban-h5</a> - 鲁班 H5 是基于 Vue2.0 开发的快速生成页面的平台，通过简单的拖拽交互方式即可迅速的完成一个页面的制作，类似 易企秀、Maka、百度 H5 等平台。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247505194&amp;idx=1&amp;sn=4b92e34ed99b61c44c5b492c45c0896e&amp;chksm=f9a206e3ced58ff5aa6d468e02719991c997bdb3a2f9f4289acbedab9099396e89ab097515e1&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/woai3c/visual-drag-demo">visual-drag-demo</a> - 这个项目基于 Vue.js 技术栈，平台主页面分为四个部分，分别是工具栏、组件列表、画布、属性区域。将文字、图片等组件拖至画布区域。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247503159&amp;idx=1&amp;sn=3f6b3f79511e13feda4022d0771118c1&amp;chksm=f9a21efeced597e8f38aeae6122da86f89c80171d09df20db9f6881a29dfe602921720be56d5&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/fantasticit/ramiko">ramiko</a> - 基于 next.js 构建页面可视化编辑器。整个编辑器的研发逻辑为前端开发组件库，编辑器读取组件完成页面搭建，将页面数据发送至服务端保存。访问页面，从服务端拉取页面数据，前端渲染页面即可。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247503159&amp;idx=1&amp;sn=3f6b3f79511e13feda4022d0771118c1&amp;chksm=f9a21efeced597e8f38aeae6122da86f89c80171d09df20db9f6881a29dfe602921720be56d5&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/lzuntalented/lz-h5-edit">lz-h5-edit</a> - H5场景编辑器，编辑器功能：拖拽、缩放、旋转、动画、撤销、重做、组合元素，组件：物料、文本、图片、QQ语言通话、背景、地图、音效、模板、视频、艺术字。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247503159&amp;idx=1&amp;sn=3f6b3f79511e13feda4022d0771118c1&amp;chksm=f9a21efeced597e8f38aeae6122da86f89c80171d09df20db9f6881a29dfe602921720be56d5&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/yangyuji/h5-factoryH5">h5-factoryH5</a> - H5 专题页面可视化编辑工具，拖拽编辑，灵活切换，一键生成  HTML 文件。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247503159&amp;idx=1&amp;sn=3f6b3f79511e13feda4022d0771118c1&amp;chksm=f9a21efeced597e8f38aeae6122da86f89c80171d09df20db9f6881a29dfe602921720be56d5&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/buqiyuan/vite-vue3-lowcode">vite-vue3-lowcode</a> - vue3.x vite2.x vant element-plus H5 移动端低代码平台 lowcode 可视化拖拽 可视化编辑器 visual editor 类似易企秀的H5制作、建站工具、可视化搭建工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247503159&amp;idx=1&amp;sn=3f6b3f79511e13feda4022d0771118c1&amp;chksm=f9a21efeced597e8f38aeae6122da86f89c80171d09df20db9f6881a29dfe602921720be56d5&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/vitojc/fast-poster">fast-poster</a> - 海报编辑器最左侧是组件列表。可以在最左侧选择组件，比如文本、二维码、图片等添加到最中间的画布区域，通过右侧的属性调节面板调节添加组件的样式。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247503159&amp;idx=1&amp;sn=3f6b3f79511e13feda4022d0771118c1&amp;chksm=f9a21efeced597e8f38aeae6122da86f89c80171d09df20db9f6881a29dfe602921720be56d5&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/jeecg/jeecg-boot">jeecg-boot</a> - JeecgBoot 是一款基于代码生成器的低代码平台！前后端分离架构 SpringBoot2.x，SpringCloud，Ant Design&amp;Vue，Mybatis-plus，Shiro，JWT，支持微服务。强大的代码生成器让前后端代码一键生成，实现低代码开发。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247503159&amp;idx=1&amp;sn=3f6b3f79511e13feda4022d0771118c1&amp;chksm=f9a21efeced597e8f38aeae6122da86f89c80171d09df20db9f6881a29dfe602921720be56d5&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/baidu/amis">amis</a> - 它通过 JSON 配置就能生成各种后台页面，极大减少开发成本，甚至可以不需要了解前端。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247503159&amp;idx=1&amp;sn=3f6b3f79511e13feda4022d0771118c1&amp;chksm=f9a21efeced597e8f38aeae6122da86f89c80171d09df20db9f6881a29dfe602921720be56d5&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/huangdf/seezoon-stack">seezoon-stack</a> - Seezoon Stack 是一款基于当前最前沿的前端和后台实现的低代码开发平台。前端技术栈基于 Vue3 + Vite + Antdv，后端技术栈基于 Spring boot。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247503159&amp;idx=1&amp;sn=3f6b3f79511e13feda4022d0771118c1&amp;chksm=f9a21efeced597e8f38aeae6122da86f89c80171d09df20db9f6881a29dfe602921720be56d5&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="人脸识别项目">人脸识别项目</h3><ul><li><a href="https://github.com/cmusatyalab/openface">openface</a> - OpenFace 作为用于人脸识别的通用库，能够实现瞬态和移动人脸识别。</li><li><a href="https://github.com/ageitgey/face_recognition">face_recognition</a> - Face Recognition 是一个强大、简单、易上手的人脸识别开源项目，并且配备了完整的开发文档和应用案例。</li><li><a href="https://github.com/deepinsight/insightface">insightface</a> - InsightFace 是一个开源的 2D&amp;3D 深度人脸分析工具箱，主要基于 PyTorch 和 MXNet。</li><li><a href="https://github.com/davidsandberg/facenet">facenet</a> - FaceNet 是一个人脸识别系统，可用于判断多幅图是否为同一人、识别图像中的人是谁、人脸聚类计算人脸相似度。</li><li><a href="https://github.com/serengil/deepface">deepface</a> - Deepface 是一个用于 python 的轻量级人脸识别和人脸属性分析（年龄、性别、情感和种族）框架。它是一个混合人脸识别框架，包含最先进的模型：VGG-Face、Google FaceNet、OpenFace、Facebook DeepFace、DeepID、ArcFace 和 Dlib。</li><li><a href="https://github.com/exadel-inc/CompreFace">CompreFace</a> - Exadel CompreFace 是一项免费的开源人脸识别服务，无需事先具备机器学习技能即可轻松集成到任何系统中。CompreFace 提供 REST API 用于人脸识别、人脸验证、人脸检测、地标检测、年龄和性别识别，并且可以通过 docker 轻松部署，并支持在 CPU 和 GPU 上工作的不同模型。</li></ul><h2 id="开源工具">开源工具</h2><h3 id="好用工具">好用工具</h3><ul><li><a href="https://github.com/ohmyzsh/ohmyzsh">ohmyzsh</a> - Oh My Zsh 是一个社区驱动的开源框架，用于管理 Zsh 配置。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2257cced5ac6ae928edb792014120ea367f88402af7d363580f3d44fcde8da3e864bf39f3&amp;idx=1&amp;mid=2247497397&amp;scene=21&amp;sn=8416e22549c14eaf4688842d139640ba#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://ohmyz.sh/"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/github/gitignore">gitignore</a> - 提供很多 .gitignore 模板。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2257cced5ac6ae928edb792014120ea367f88402af7d363580f3d44fcde8da3e864bf39f3&amp;idx=1&amp;mid=2247497397&amp;scene=21&amp;sn=8416e22549c14eaf4688842d139640ba#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://www.gitignore.io"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/carbon-app/carbon">carbon</a> - 将源码转化为漂亮的图片，插入到博客就非常美观。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2278dced5ae9b650d1aa1aaa72f042453cea48186a739a7a88a37e95d629efe653eb609b8&amp;idx=1&amp;mid=2247496772&amp;scene=21&amp;sn=638c09b730f46f0d39191e681f8159a1#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://carbon.now.sh/"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/hiroppy/fusuma">fusuma</a> - 通过编写 Markdown 来快速生成演讲幻灯片。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2278dced5ae9b650d1aa1aaa72f042453cea48186a739a7a88a37e95d629efe653eb609b8&amp;idx=1&amp;mid=2247496772&amp;scene=21&amp;sn=638c09b730f46f0d39191e681f8159a1#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://github.com/hiroppy/fusuma"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/agalwood/Motrix">Motrix</a> - Motrix 是一款全能的下载工具，图形操作界面简单明了。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2278dced5ae9b650d1aa1aaa72f042453cea48186a739a7a88a37e95d629efe653eb609b8&amp;idx=1&amp;mid=2247496772&amp;scene=21&amp;sn=638c09b730f46f0d39191e681f8159a1#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://motrix.app/"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/zhangdaiscott/jeecg-boot">jeecg-boot</a> - 基于 Spring Boot + Mybatis + Vue 的代码生成器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1c69eced64f8813f68c300e5b80279a540d48a94a42f96cce5ab310e91fee77151cbbc2b1&amp;idx=1&amp;mid=2247488855&amp;scene=21&amp;sn=8fae4cff41c39c9f14e51c7d29b64b19#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="http://www.jeecg.com/"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/log4j/pig">pig</a> - 一个强大权限管理系统，可快速构建微服务代码框架。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1c69eced64f8813f68c300e5b80279a540d48a94a42f96cce5ab310e91fee77151cbbc2b1&amp;idx=1&amp;mid=2247488855&amp;scene=21&amp;sn=8fae4cff41c39c9f14e51c7d29b64b19#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/looly/hutool/">Hutool</a> - 一款小而全的 Java 工具类库：Hutool。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d7f8ced65eeeafc7323bdf614c920139f8688530a8c90525077683fbd2b2fd5266c3bd34&amp;idx=1&amp;mid=2247484465&amp;scene=21&amp;sn=1214bd576aef87a8e156a796f4c6559f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/zhaoolee/ChromeAppHeroes">ChromeAppHeroes</a> - 为优秀的 Chrome 插件写一本中文说明书, 让 Chrome 插件英雄们造福人类。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d7e9ced65effd4fa36134f044f881c5cdb7ed48bd91d23e6e45f5540a6b3f983a50b74cd&amp;idx=1&amp;mid=2247484448&amp;scene=21&amp;sn=d6973c2548361efe2c76a2fccbfb7155#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Fmstrat/winapps">winapps</a> - 如何在 Linux 上运行 Windows 的应用？<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23cceced5b5d81699bd349dbe57ed57b200ee733222e8368c5f13c4967f3eb2c104511375&amp;idx=1&amp;mid=2247495431&amp;scene=21&amp;sn=99c8579852afda8f9d849818eb2399bd#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/sivan/heti">heti</a> - 一个中文排版开源项目。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1c5bfced64ca982ebb99a56b7f9fe73713443f06fca1a49e476061f4df616804f29713218&amp;idx=1&amp;mid=2247489142&amp;scene=21&amp;sn=059feb284cdf9096121a921682fd4dca#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/microsoft/PowerToys/releases/">PowerToys</a> - 微软给 Win10 量身打造的效率神器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1c5efced64cf9379667b64ad3b92db792e2c604bf38d49ea983c2c768bc03a3fb88a9ca35&amp;idx=1&amp;mid=2247489062&amp;scene=21&amp;sn=0a8e2e9c48703c97076722bd66498d9f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Teraskull/PyDebloatX">PyDebloatX</a> - 一键卸载 Windows 默认程序。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1db9bced6528da94da33fe8661b269798179dfcc14412a3574688dd540f77c09c8a61cbf4&amp;idx=1&amp;mid=2247485522&amp;scene=21&amp;sn=d8693abad6a2f0b8d46ec6e794735c3c#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/microsoft/SandDance">SandDance</a> - 微软开源的可视化工具太酷炫了。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22935ced5a0235e47ea7eba9fa56d89ad5e4088453c46104e29ce84a5288fa1e3e40849f7&amp;idx=2&amp;mid=2247498492&amp;scene=21&amp;sn=823ff5005f42a2ad94349301448d578c#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/notable/notable">notable</a> - 高颜值 Markdown 编辑器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22aa1ced5a3b79597e1c7f65c69f8ecab8e14b44a0839ee7ca60688839fac5ec02c00bb49&amp;idx=2&amp;mid=2247498088&amp;scene=21&amp;sn=7ce23733aeba1de33fcc189e4bd88e06#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/digitalocean/nginxconfig.io">nginxconfig</a> - Nginx 可视化配置神器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22a9eced5a3881fc12c0ebca58fd4d840fac9ee465e8df47243c14d4f65416a04ca4918de&amp;idx=1&amp;mid=2247498071&amp;scene=21&amp;sn=af451a4c73a105df637cfd3f0856c3bf#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/usthe/sureness">sureness</a> - 比 Spring Security 快 4 倍的认证鉴权框架。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a224b4ced5ada2ad5feb993223e4e426540c1c060d55671e562cdad15995dca5e76eaa976d&amp;idx=1&amp;mid=2247497597&amp;scene=21&amp;sn=f874a7a326c042d113031004b4202f30#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/laike9m/Cyberbrain">Cyberbrain</a> - 谷歌大神又一开源代码调试神器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a226a9ced5afbf06b2c7fc7f917344619bf8d826bd8c4e4768f108e9ff1f8b40732a539ffa&amp;idx=2&amp;mid=2247497056&amp;scene=21&amp;sn=c74fb96d715dcb3141bb721156b320a0#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/t1m0thyj/WinDynamicDesktop">WinDynamicDesktop</a> - Windows 中使用苹果 macOS 动态桌面壁纸。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/pavlobu/deskreen">deskreen</a> - 将任何设备转换为电脑的辅助屏幕。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2276dced5ae7b800b7ecda3d5bedf98aa74dfd422c5272f1a5b168b820728dbc2890faa30&amp;idx=1&amp;mid=2247496868&amp;scene=21&amp;sn=aa69f8a60c2dfb5cde294137c1c89d02#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/soimort/you-get">you-get</a> - 一行命令下载全网视频。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a227d6ced5aec0a41cb7b9d97332ee28ebed65dc958ca35ceeeb629bb7ccb6f3c2a795631d&amp;idx=1&amp;mid=2247496735&amp;scene=21&amp;sn=66bdcb801c3f88662b91d56a5b042610#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/iawia002/annie">annie</a> - 视频下载神器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a227d6ced5aec0a41cb7b9d97332ee28ebed65dc958ca35ceeeb629bb7ccb6f3c2a795631d&amp;idx=1&amp;mid=2247496735&amp;scene=21&amp;sn=66bdcb801c3f88662b91d56a5b042610#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/zhangdaiscott/jeecg-boot">jeecg-boot</a> - 一键生成前后端代码，实现低代码开发，让开发者更多关注业务。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22007ced5a911c37864506c19fdee3114b6c9d598b52c8fd92d5426fb0f5fa0734df65194&amp;idx=1&amp;mid=2247496654&amp;scene=21&amp;sn=74c322b568b813e0e39671f393e00ee0#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/unbug/codelf">codelf</a> - 一个帮助开发者解决变量命名烦恼的工具: CodeIf。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://unbug.github.io/codelf/"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li>Octotree - 一个可以显示完整 GitHub 项目的完整目录树的 Chrome 插件。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a238b5ced5b1a30478c0ce0be21c986e30ab3a2f6f605dac0d46ada4d62a92257dd358d707&amp;idx=1&amp;mid=2247494524&amp;scene=21&amp;sn=0b17b90fb3e36ed842c1a0ed8e50c399#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li>Sourcegraph - 可以方便在 GitHub 上看源码的 Chrome 插件。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a238b5ced5b1a30478c0ce0be21c986e30ab3a2f6f605dac0d46ada4d62a92257dd358d707&amp;idx=1&amp;mid=2247494524&amp;scene=21&amp;sn=0b17b90fb3e36ed842c1a0ed8e50c399#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li>GitZip - 该 Chrome 插件能帮助你轻松下载一个仓库中的部分代码。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a238b5ced5b1a30478c0ce0be21c986e30ab3a2f6f605dac0d46ada4d62a92257dd358d707&amp;idx=1&amp;mid=2247494524&amp;scene=21&amp;sn=0b17b90fb3e36ed842c1a0ed8e50c399#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/songer/java_opencv">java_opencv</a> - 基于 Java 的答题卡识别系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a238b5ced5b1a30478c0ce0be21c986e30ab3a2f6f605dac0d46ada4d62a92257dd358d707&amp;idx=1&amp;mid=2247494524&amp;scene=21&amp;sn=0b17b90fb3e36ed842c1a0ed8e50c399#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="www.github.com/lana-k/sqliteviz">sqliteviz</a> - Sqliteviz 是一个轻量级 SQLite 可视化工具。 包含功能如下： 针对 SQLite 数据库运行 SQL 查询并根据结果集创建 Plotly 图表和数据透视表，将 CSV 文件导入 SQLite 数据库并可视化导入的数据，将结果集导出到 CSV 文件，管理查询并针对不同的数据库运行它们等等。</li><li><a href="https://github.com/Z4nzu/hackingtool">hackingtool</a> - 黑客的多合一黑客工具，包括很多黑客攻击的脚本和工具，比如匿名隐藏工具、SQL 注入工具等等。</li><li><a href="https://github.com/AmruthPillai/Reactive-Resume">Reactive-Resume</a> - Reactive Resume 是一个免费和开源的简历生成器，旨在简单的创建、更新和共享简历。</li><li><a href="https://github.com/vran-dev/databasir">databasir</a> - Databasir 是面向团队的关系型数据库模型文档管理平台，旨在通过自动化的方式解决模型文档管理过程中维护成本高、内容更新不及时以及团队协作复杂等问题。</li></ul><h3 id="Docker工具">Docker工具</h3><ul><li><a href="https://github.com/v2tec/watchtower">watchtower</a> - watchtower：自动更新 Docker 容器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d508ced65c1e6a9e505375b0bcc41edb2ddb01afa98ed01cf94a2b2812fab2e04ef2c0a5&amp;idx=1&amp;mid=2247485121&amp;scene=21&amp;sn=691f23084d06cba1113e203f712f8f12#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/docker-slim/docker-slim">docker-slim</a> - docker-gc：容器和镜像的垃圾回收。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d508ced65c1e6a9e505375b0bcc41edb2ddb01afa98ed01cf94a2b2812fab2e04ef2c0a5&amp;idx=1&amp;mid=2247485121&amp;scene=21&amp;sn=691f23084d06cba1113e203f712f8f12#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/grammarly/rocker">rocker</a> - rocker：突破 Dockerfile 的限制。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d508ced65c1e6a9e505375b0bcc41edb2ddb01afa98ed01cf94a2b2812fab2e04ef2c0a5&amp;idx=1&amp;mid=2247485121&amp;scene=21&amp;sn=691f23084d06cba1113e203f712f8f12#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/bcicen/ctop">ctop</a> - ctop：容器的类顶层接口。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d508ced65c1e6a9e505375b0bcc41edb2ddb01afa98ed01cf94a2b2812fab2e04ef2c0a5&amp;idx=1&amp;mid=2247485121&amp;scene=21&amp;sn=691f23084d06cba1113e203f712f8f12#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/openspug/spug">spug</a> - 使用 Python+Vue 实现的开源运维平台，前后端分离方便二次开发。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d4fbced65ded0e1856a1db7ce2e6f2c9e423de4428795644770bf2dbb9910874e1678b64&amp;idx=1&amp;mid=2247485234&amp;scene=21&amp;sn=e2ff671bbe9ff9c8a642ccc5793c266a#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/drone/drone">drone</a> - 一个基于 Docker 的持续集成平台，使用 Go 语言编写。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d4fbced65ded0e1856a1db7ce2e6f2c9e423de4428795644770bf2dbb9910874e1678b64&amp;idx=1&amp;mid=2247485234&amp;scene=21&amp;sn=e2ff671bbe9ff9c8a642ccc5793c266a#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/skanehira/docui">docui</a> - 终端 Docker 管理工具，自带一个终端界面。。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d4fbced65ded0e1856a1db7ce2e6f2c9e423de4428795644770bf2dbb9910874e1678b64&amp;idx=1&amp;mid=2247485234&amp;scene=21&amp;sn=e2ff671bbe9ff9c8a642ccc5793c266a#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/docker-slim/docker-slim">docker-slim</a> - 自动缩减 docker 镜像的体积的工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d4fbced65ded0e1856a1db7ce2e6f2c9e423de4428795644770bf2dbb9910874e1678b64&amp;idx=1&amp;mid=2247485234&amp;scene=21&amp;sn=e2ff671bbe9ff9c8a642ccc5793c266a#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/yeasy/docker_practice">docker_practice</a> - Docker 从入门到实践。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d4fbced65ded0e1856a1db7ce2e6f2c9e423de4428795644770bf2dbb9910874e1678b64&amp;idx=1&amp;mid=2247485234&amp;scene=21&amp;sn=e2ff671bbe9ff9c8a642ccc5793c266a#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li>[lazydocker](http s:// <a href="http://github.com/jesseduffield/lazydocker">github.com/jesseduffield/lazydocker</a>) - 带命令行 UI 的 docker 管理工具。可以通过点点点来管理 docker，却又不需要装 rancher 这样的企业级容器管理平台。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d4fbced65ded0e1856a1db7ce2e6f2c9e423de4428795644770bf2dbb9910874e1678b64&amp;idx=1&amp;mid=2247485234&amp;scene=21&amp;sn=e2ff671bbe9ff9c8a642ccc5793c266a#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/wagoodman/dive">dive</a> - 用来探索 docker 镜像每一层文件系统，以及发现缩小镜像体积方法的命令行工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d4fbced65ded0e1856a1db7ce2e6f2c9e423de4428795644770bf2dbb9910874e1678b64&amp;idx=1&amp;mid=2247485234&amp;scene=21&amp;sn=e2ff671bbe9ff9c8a642ccc5793c266a#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/LockGit/gochat">gochat</a> - 纯 Go 实现的轻量级即时通讯系统。。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d4fbced65ded0e1856a1db7ce2e6f2c9e423de4428795644770bf2dbb9910874e1678b64&amp;idx=1&amp;mid=2247485234&amp;scene=21&amp;sn=e2ff671bbe9ff9c8a642ccc5793c266a#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/pipiliang/docker-dashboard">docker-dashboard</a> - 基于控制台的 docker 工具，代码简单易读，可以做为学习 Node.js 的实践项目。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d4fbced65ded0e1856a1db7ce2e6f2c9e423de4428795644770bf2dbb9910874e1678b64&amp;idx=1&amp;mid=2247485234&amp;scene=21&amp;sn=e2ff671bbe9ff9c8a642ccc5793c266a#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/vicanso/diving">diving</a> - 基于 dive 分析 docker 镜像，界面化展示了镜像每层的变动（增加、修改、删除等）、用户层数据大小等信息。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d4fbced65ded0e1856a1db7ce2e6f2c9e423de4428795644770bf2dbb9910874e1678b64&amp;idx=1&amp;mid=2247485234&amp;scene=21&amp;sn=e2ff671bbe9ff9c8a642ccc5793c266a#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="命令行工具">命令行工具</h3><ul><li><a href="https://fishshell.com/">fishshell</a> - 一个非常优秀的终端 Shell 工具，拥有许多开箱即用的功能，例如语法自动推荐补全、语法高亮显示或使用快捷键在最近访问的文件夹之间来回切换。。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://starship.rs/">starship</a> - 强大的 Shell 提示工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/rupa/z">z</a> - 该工具可以让你快速地在文件目录之间跳转。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/junegunn/fzf">fzf</a> - fuzzy finder，命令行模糊查找器。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/sharkdp/fd">fd</a> - 类似于系统自带的 <code>find</code> 命令，但使用起来更简单。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/BurntSushi/ripgrep">ripgrep</a> - 列斯与 grep 但是更好的升级版的 grep 工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://nicolargo.github.io/glances/">glances</a> - 好用的系统监控工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://hisham.hm/htop/">htop</a> - 好用的系统监控工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/justinmayer/virtualfish">virtualfish</a> - Python 虚拟关键管理工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/pyenv/pyenv">pyenv</a> - 一款对 Python 不同版本管理的工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/nodenv/nodenv">nodenv</a> - 一款对Node 不同版本管理的工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/rbenv/rbenv">rbenv</a> - 一款对 Ruby 不同版本管理的工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/pipxproject/pipx">pipx</a> - Python 依赖安装环境工具命令行工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/bcicen/ctop">ctop</a> - 一款给力的 Docker 监控工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/jesseduffield/lazydocker">lazydocker</a> - 一款给力的 Docker 监控工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://brew.sh/">brew</a> - Mac OS 下的软件包管理工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://asciinema.org/">asciinema</a> - 一款终端会话记录工具，支持从动画中进行拷贝。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="%EF%BC%9Ahttps://www.colordiff.org/">colordiff</a> - 升级版的 diff 工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/so-fancy/diff-so-fancy">diff-so-fancy</a> - 升级版的 diff 工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/sharkdp/bat">bat</a> - 一款升级版的 cat 工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://httpie.org/">httpie</a> - 一款升级版的 curl 工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://tldr.sh/">tldr</a> - Too long，Dont read，简化版的 man pages 查看工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://the.exa.website/">exa</a> - 一款升级版的ls命令行工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://litecli.com/">litecli</a> - 升级版的 sqlite3 数据库链接工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://www.pgcli.com/">pgcli</a> - 升级版的 psql 数据库链接工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/mas-cli/mas">mas</a> - App Store 的命令行工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://dev.yorhel.nl/ncdu">ncdu</a> - 一款磁盘使用分析的命令行工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d521ced65c373d8970ddb8789ae7217e70c33981b00b7cdd6e4a13e528a9cba6509e1aad&amp;idx=1&amp;mid=2247485160&amp;scene=21&amp;sn=8c3ccfa18af516589f226bef3e8335d3#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/iggredible/Learn-Vim">Learn-Vim</a> - 用聪明的方式学习 Vim 。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d579ced65c6f8da85f71bc62947a1ab06e4f6a82f73cef09f57e6cffa146e501aabd622b&amp;idx=1&amp;mid=2247485104&amp;scene=21&amp;sn=1be7739aed86a99c0441c121d7105f8a#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/withfig/autocomplete">autocomplete</a>当在终端键入命令时，这个开源项目会在现有的 macOS 终端中弹出子命令、选项和上下文相关的参数，帮你快速完成当前命令的输入。</li></ul><h3 id="效率工具">效率工具</h3><ul><li><a href="https://github.com/conwnet/github1s">github1s</a> - 直接用 VS Code 方式打开 GitHub 代码的工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22041ced5a957749df576c4235cd0fef8af1edd46bb972e5c268b0e836bc5a04518d4f564&amp;idx=1&amp;mid=2247496584&amp;scene=21&amp;sn=ebf005a20ba375a4903aa3218648ea63#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Wox-launcher/Wox">wox</a> - 一款国产开源免费的软件快捷启动工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1c286ced64b9098c34a21dcaac3eef9d22f765dc1ef04fe891803f16eaa7c8c3c91d592f3&amp;idx=1&amp;mid=2247487823&amp;scene=21&amp;sn=9089d9cc38cda536fe2caea8bd6dbd65#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/microsoft/winget-cli">winget-cli</a> - 微软官方也为 Windows 系统发布了一款名为 Winget 的软件包管理工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22048ced5a95e05b7edd590a500f38bf75ec42024d84c3a2be27e1f06c03369308610a93a&amp;idx=1&amp;mid=2247496577&amp;scene=21&amp;sn=0e51c7bb103edc9a9a1dda7a9012aee0#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/rustdesk/rustdesk/releases">rustdesk</a> - 基于 Rust 编写的开源远程桌面客户端软件。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1c286ced64b9098c34a21dcaac3eef9d22f765dc1ef04fe891803f16eaa7c8c3c91d592f3&amp;idx=1&amp;mid=2247487823&amp;scene=21&amp;sn=9089d9cc38cda536fe2caea8bd6dbd65#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://gitee.com/kekingcn/file-online-preview">file-online-preview</a> - 用 Spring Boot 搭建的文档在线预览解决方案。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247508410&amp;idx=1&amp;sn=6cd313978ecaa8b30744a5a7fe7eb947&amp;chksm=f9a27273ced5fb65c06f48f85bb034a185befc1d34d4d86de7e382425cd7d29c57e0f923ffcb&amp;token=1224408490&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Tencent/APIJSON">APIJSON</a> - APIJSON 是一种专为 API 而生的 JSON 网络传输协议 以及 基于这套协议实现的 ORM 库。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247508410&amp;idx=1&amp;sn=6cd313978ecaa8b30744a5a7fe7eb947&amp;chksm=f9a27273ced5fb65c06f48f85bb034a185befc1d34d4d86de7e382425cd7d29c57e0f923ffcb&amp;token=1224408490&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/DevYao/JSONConverter">JSONConverter</a> - JSONConverter 是 MAC 上 iOS / Flutter / Android / Server 等开发的辅助工具，可以快速的格式化 JSON 数据并转换生成对应的模型类属性。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247508410&amp;idx=1&amp;sn=6cd313978ecaa8b30744a5a7fe7eb947&amp;chksm=f9a27273ced5fb65c06f48f85bb034a185befc1d34d4d86de7e382425cd7d29c57e0f923ffcb&amp;token=1224408490&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="www.github.com/sbfkcel/towxml">towxml</a> - Towxml  是一个可将 HTML 、 Markdown 转为微信小程序 WXML (WeiXin Markup Language)的渲染库。 用于解决在微信小程序中 Markdown 、 HTML 不能直接渲染的问题。</li><li><a href="www.github.com/justauth/JustAuth">JustAuth</a> - 一个超级全的第三方登录开源组件。该项目已支持Github、Gitee、微博、钉钉、百度、Coding、腾讯云开发者平台、OSChina、支付宝、QQ等第三方平台的授权登录。</li><li><a href="www.github.com/go-pay/gopay">gopay</a> - 本项目是微信、支付宝、PayPal、QQ 的 Golang 版本SDK。</li></ul><h2 id="学习资源">学习资源</h2><h3 id="学习项目">学习项目</h3><ul><li><a href="https://github.com/danistefanovic/build-your-own-x">build-your-own-x</a> - 汇集了诸多优质资源，教你如何构建一些属于自己的东西，内容主要分为增强现实、区块链、机器人、编辑器等等。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2257cced5ac6ae928edb792014120ea367f88402af7d363580f3d44fcde8da3e864bf39f3&amp;idx=1&amp;mid=2247497397&amp;scene=21&amp;sn=8416e22549c14eaf4688842d139640ba#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="%5Btwitter.com/danistefanovic%5D(https://twitter.com/danistefanovic)"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/EbookFoundation/free-programming-books">free-programming-books</a> - 收集了特别多免费的编程电子书、编程课程、播客、网站等学习资源。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2257cced5ac6ae928edb792014120ea367f88402af7d363580f3d44fcde8da3e864bf39f3&amp;idx=1&amp;mid=2247497397&amp;scene=21&amp;sn=8416e22549c14eaf4688842d139640ba#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://ebookfoundation.github.io/free-programming-books/"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/jwasham/coding-interview-university/blob/main/translations/README-cn.md">coding-interview-university</a> - 堪称 GitHub 上最励志的学习教程，上岸谷歌的编程大佬的自学笔记。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/donnemartin/system-design-primer">system-design-primer</a> - 帮助你学习如何设计大型系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2257cced5ac6ae928edb792014120ea367f88402af7d363580f3d44fcde8da3e864bf39f3&amp;idx=1&amp;mid=2247497397&amp;scene=21&amp;sn=8416e22549c14eaf4688842d139640ba#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/public-apis/public-apis">public-apis</a> - 收集了了很多免费的 API，供你的项目和应用程序使用。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2257cced5ac6ae928edb792014120ea367f88402af7d363580f3d44fcde8da3e864bf39f3&amp;idx=1&amp;mid=2247497397&amp;scene=21&amp;sn=8416e22549c14eaf4688842d139640ba#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/jlevy/the-art-of-command-line">the-art-of-command-line</a> - 总结了在 Linux 上使用命令行时的相关技巧，内容覆盖基础使用、文件操作、数据处理等等。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2257cced5ac6ae928edb792014120ea367f88402af7d363580f3d44fcde8da3e864bf39f3&amp;idx=1&amp;mid=2247497397&amp;scene=21&amp;sn=8416e22549c14eaf4688842d139640ba#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/trekhleb/javascript-algorithms">javascript-algorithms</a> - 算法和数据结构是计算机学习的基石。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/kamranahmedse/developer-roadmap">developer-roadmap</a> - 为前端、后端、DevOps等开发着准备可详细的技术路线图。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2257cced5ac6ae928edb792014120ea367f88402af7d363580f3d44fcde8da3e864bf39f3&amp;idx=1&amp;mid=2247497397&amp;scene=21&amp;sn=8416e22549c14eaf4688842d139640ba#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/tuteng/Best-websites-a-programmer-should-visit-zh">Best-websites-a-programmer-should-visit-zh</a> - 这个 GitHub 项目，这个项目包含一系列技术网站列表，堪称全网最全技术网站索引。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2297dced5a06bc51848fa262bec471c220594d7d932cfdd12fdd9963a76b99b6b0af2d4a2&amp;idx=2&amp;mid=2247498420&amp;scene=21&amp;sn=138835003875196bfc106f12a4827716#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="">Reo</a> - 一个适合计算机专业学生看的编程笔记。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/seaswalker/spring-analysis">spring-analysis</a> - 带你读 Spring 的源码。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d263ced65b75708578d9af60cd61da016f1a4dc189db68a5c9ee2a6d468d69b051829b8e&amp;idx=1&amp;mid=2247483818&amp;scene=21&amp;sn=a44eebb49095f26b6acd865aa17ce479#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/XINCGer/Unity3DTraining">Unity3DTraining</a> - Unity3D 的练习项目，该练习项目总结了 57 个小项目。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247508410&amp;idx=1&amp;sn=6cd313978ecaa8b30744a5a7fe7eb947&amp;chksm=f9a27273ced5fb65c06f48f85bb034a185befc1d34d4d86de7e382425cd7d29c57e0f923ffcb&amp;token=1224408490&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/coderit666/GoGuide">GoGuide</a> - Go语言学习指南是一份涵盖大部分 Golang 程序员所需要掌握的核心知识，拥有 Go语言教程、Go开源书籍、Go语言入门教程、Go语言学习路线。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247508410&amp;idx=1&amp;sn=6cd313978ecaa8b30744a5a7fe7eb947&amp;chksm=f9a27273ced5fb65c06f48f85bb034a185befc1d34d4d86de7e382425cd7d29c57e0f923ffcb&amp;token=1224408490&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/doggy8088/Learn-Git-in-30-days">Learn-Git-in-30-days</a> - 本开源项目是 Will 保哥在 2013 第 6 界 IT 邦帮忙铁人赛年度大奖的得奖著作。这是一个 Git 教程，这个开源教程用 30 天的时间，带领大家详细了解使用 Git 。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247508410&amp;idx=1&amp;sn=6cd313978ecaa8b30744a5a7fe7eb947&amp;chksm=f9a27273ced5fb65c06f48f85bb034a185befc1d34d4d86de7e382425cd7d29c57e0f923ffcb&amp;token=1224408490&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alaskasquirrel/Lisp-China">Lisp-China</a> - 古老的编程语言，不为人知的秘密。</li><li><a href="https://github.com/alaskasquirrel/Email-newsletter-RSS">Email-newsletter-RSS</a> - 阅读文章，体味酸甜苦辣。</li><li><a href="https://github.com/alaskasquirrel/Chinese-Podcasts">Chinese-Podcasts</a> - 听播客，了解人声百态。</li><li><a href="www.github.com/Tencent/secguide">secguides</a> - 面向开发人员梳理的代码安全指南，旨在梳理 API 层面的风险点并提供详实可行的安全编码方案。</li></ul><h3 id="学习IDEA">学习IDEA</h3><ul><li><p><a href="github.com/xiaoxiunique/awesome-IntelliJ-IDEA">awesome-IntelliJ-IDEA</a> - IntelliJ IDEA 从入门到上瘾！<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a234e2ced5bdf43177322c746a2cf1587dc9d1f209300db4c157438adeb34b2bcaf69d0d75&amp;idx=1&amp;mid=2247493419&amp;scene=21&amp;sn=5dbb6d6b89b6a8dc8b93fd5bf8c23906#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></p></li><li><p><a href="https://github.com/judasn/IntelliJ-IDEA-Tutorial">IntelliJ-IDEA-Tutorial</a> - 本教程从 IntelliJ IDEA 的安装、卸载、软件设置、项目配置等各个方面进行讲解。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d009ced6591fd4eeaa13af74c69fbaf3b235fcee0c3393640f6a75fc57713fc22e6df78e&amp;idx=1&amp;mid=2247484352&amp;scene=21&amp;sn=42652cde7493dded30700cacd251466e#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></p></li><li><p><a href="https://github.com/guobinhit/intellij-idea-tutorial">intellij-idea-tutorial</a> - 作者想把自己的经验整理记录下来。此教程使用的工具为 IntelliJ IDEA 2017(.1.5) 版本。。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a1d009ced6591fd4eeaa13af74c69fbaf3b235fcee0c3393640f6a75fc57713fc22e6df78e&amp;idx=1&amp;mid=2247484352&amp;scene=21&amp;sn=42652cde7493dded30700cacd251466e#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></p></li></ul><h3 id="算法项目">算法项目</h3><ul><li><a href="https://github.com/trekhleb/javascript-algorithms">javascript-algorithms</a> - 基于 JavaScript 的算法和数据结构教程。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/algorithm-visualizer/algorithm-visualizer">algorithm-visualizer</a> - 在线动态演示算法，清楚的看到算法运行的整个过程，直观便于学习。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a229a1ced5a0b75b8cf784306e502530c1a6229371c4c99ecdf9ea89a04bfb65cf1c2ac347&amp;idx=1&amp;mid=2247498344&amp;scene=21&amp;sn=764f8b7c5ab7336d0161ff3fee27c56f#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a>  <a href="https://algorithm-visualizer.org/"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/geekxh/hello-algorithm">hello-algorithm</a> - 疫情期间完成的一部图解算法题典，共 140+ 道高频面试算法题目。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247484442&amp;idx=1&amp;sn=9ce658b30b3841b75e306c7a7bd6e805&amp;chksm=f9a1d7d3ced65ec5fba8b9814a7382c43764247efe2d0cc416510190f3426383539f467c16c4&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a>  <a href="www.geekxh.com"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/labuladong/fucking-algorithm">fucking-algorithm</a> - 基于 LeetCode 的题目，涵盖了所有题型和技巧。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247484442&amp;idx=1&amp;sn=9ce658b30b3841b75e306c7a7bd6e805&amp;chksm=f9a1d7d3ced65ec5fba8b9814a7382c43764247efe2d0cc416510190f3426383539f467c16c4&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a>  <a href="https://labuladong.gitbook.io/algo/"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/TheAlgorithms">TheAlgorithms</a> - 各种版本算法的学习资料。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247484389&amp;idx=1&amp;sn=d522412d6e268e938a30b6b80f1796c1&amp;chksm=f9a1d02cced6593a63886d4601063812be055421e61669fa715c201cba57a13a2a17b49d4dbf&amp;scene=21#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="Python资源">Python资源</h3><ul><li><a href="https://github.com/vinta/awesome-python">awesome-python</a> - 这是一个接近 100k 标星的开源项目，它收集了基于 Python 进行开发各种场景的资源和库。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2294aced5a05cd37b90202a8b5f2d6510aef3ede9af1b3ccf25ed611d36ecbb1ba39ac66f&amp;idx=1&amp;mid=2247498371&amp;scene=21&amp;sn=0288eaf2cba474b82acc7f4db3020033#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/mahmoud/awesome-python-applications">awesome-python-applications</a> - 收集了将近 400 个开源 Python 应用程序。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a2294aced5a05cd37b90202a8b5f2d6510aef3ede9af1b3ccf25ed611d36ecbb1ba39ac66f&amp;idx=1&amp;mid=2247498371&amp;scene=21&amp;sn=0288eaf2cba474b82acc7f4db3020033#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Junnplus/awesome-python-books">awesome-python-books</a> - 开源的 Python 电子书籍。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/realpython/python-guide">python-guide</a> - 关于 Python 日常安装、配置和使用的最佳实践手册，包括 pip、numpy、virtualenv等的介绍。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/swaroopch/byte-of-python">byte-of-python</a> - 面向 Python 小白的教程，你只需要知道如何保存一个保存文本文件即可开始学习。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/StBogdan/CTCI_python">CTCI_python</a> - Python 高赞面试题。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/sigmavirus24/python-interview-questions">python-interview-questions</a> - Python 高赞面试题。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/learning-zone/python-interview-questions">python-interview-questions</a> - 描述。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/keon/algorithms">algorithms</a> - 基于 Python 3 的数据结构与算法实现。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/gregmalcolm/python_koans">python_koans</a> - 交互式学习 Python ，学习更高效。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/tuvtran/project-based-learning#python">project-based-learning</a> - 教你搞个爬虫、做个机器人、搞个 Web项目。从项目入手，快速学习 Python。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/jerry-git/learn-python3">learn-python3</a> - 通过案例学习 Python 3：基于 Jupyter Notebook 的案例学习 Python 。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/leisurelicht/wtfpython-cn">wtfpython-cn</a> - 作者收集了一些奇怪的 Python 代码片段，当你敲完这些代码片段，运行看到结果，会惊呼：What the f*ck！因为这些代码的输出结果会和你想象中的不太一样。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="电子书籍">电子书籍</h3><ul><li><a href="https://github.com/EbookFoundation/free-programming-books">free-programming-books</a> - 收集了特别多免费的编程电子书、编程课程、播客、网站等学习资源。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247498782&amp;idx=1&amp;sn=bcc67c9f56a0765b0c4e7e3ce67f9f06&amp;chksm=f9a22fd7ced5a6c1a61c9eb154dcb60d3d1fd4d46536588140e3293d34c22bccf0dfcb4ec0d0&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="Linux学习项目">Linux学习项目</h3><ul><li><a href="dunwu.github.io/linux-tutorial/">linux-tutorial</a> - 项目包括 Linux 命令、运维管理、开发环境配置、中间件服务配置、服务器运维、Docker、Shell 脚本等等相关教程。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247498968&amp;idx=1&amp;sn=51fbaaeb9f1b49faa4089271b1b76ea4&amp;chksm=f9a22f11ced5a6070c95e2f812b227dcb753603d31824e949fafbd905071c161f1c926ddc349&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="wangchujiang.com/linux-command/">linux-command</a> - 这个仓库搜集了 570 多个 Linux 命令，内容包含 Linux 命令手册、详解、学习，是一个非常值得收藏的 Linux 命令速查手册。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247498968&amp;idx=1&amp;sn=51fbaaeb9f1b49faa4089271b1b76ea4&amp;chksm=f9a22f11ced5a6070c95e2f812b227dcb753603d31824e949fafbd905071c161f1c926ddc349&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/judasn/Linux-Tutorial">Linux-Tutorial</a> - 如果你是一个 Java后端开发者，具有了一定的 Linux 基础。这个 GitHub 项目你不能错过。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247498968&amp;idx=1&amp;sn=51fbaaeb9f1b49faa4089271b1b76ea4&amp;chksm=f9a22f11ced5a6070c95e2f812b227dcb753603d31824e949fafbd905071c161f1c926ddc349&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/me115/linuxtools_rst">linuxtools_rst</a>  - 专注于 Linux 工具的最常用用法，以便读者能以最快时间掌握，并在工作中应用。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;mid=2247498968&amp;idx=1&amp;sn=51fbaaeb9f1b49faa4089271b1b76ea4&amp;chksm=f9a22f11ced5a6070c95e2f812b227dcb753603d31824e949fafbd905071c161f1c926ddc349&amp;token=1761720145&amp;lang=zh_CN#rd"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="计算机考研项目">计算机考研项目</h3><ul><li><p><a href="https://github.com/hao14293/2021-Postgraduate-408">2021-Postgraduate-408</a> - 各个学校近几年考研初试真题（包括 408）。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23a4dced5b35b8319d4b9607528f6ea62287edf39c289f714b50352121a082ea3de1a5c31&amp;idx=1&amp;mid=2247494020&amp;scene=21&amp;sn=0e13760ed2dc13144a8f44b27c6bb9ef#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></p></li><li><p><a href="https://github.com/xiaolei565/aimto408">aimto408</a> -  408 统考资料和信息汇总。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23a4dced5b35b8319d4b9607528f6ea62287edf39c289f714b50352121a082ea3de1a5c31&amp;idx=1&amp;mid=2247494020&amp;scene=21&amp;sn=0e13760ed2dc13144a8f44b27c6bb9ef#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></p></li><li><p><a href="https://github.com/KimYangOfCat/CSPostgraduate-408-2021">CSPostgraduate-408-2021</a> - 408 统考资料和信息汇总。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a23a4dced5b35b8319d4b9607528f6ea62287edf39c289f714b50352121a082ea3de1a5c31&amp;idx=1&amp;mid=2247494020&amp;scene=21&amp;sn=0e13760ed2dc13144a8f44b27c6bb9ef#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></p></li><li><p>北邮考研资料及信息汇总</p><ul><li><a href="https://github.com/ningzimu/See_you_in_BUPT">See_you_in_BUPT</a></li><li><a href="https://github.com/ImportMengjie/KaoYan_807">KaoYan_807</a></li><li><a href="https://github.com/Rvien/BUAA-National-post-graduate-entrance-examination">BUAA-National-post-graduate-entrance-examination</a></li></ul></li><li><p>杭电考研资料及信息汇总</p><ul><li><a href="https://github.com/ztygalaxy/Hello_HDU">Hello_HDU</a></li><li><a href="https://github.com/lambdacat94/HDUDS">HDUDS</a></li></ul></li><li><p>南软考研资料及信息汇总</p><ul><li><a href="https://github.com/staresgroup/NJU-SE-GraduateEntrance">NJU-SE-GraduateEntrance</a></li></ul></li><li><p>南京大学考研资料及信息汇总</p><ul><li><a href="https://github.com/ThyrixYang/nju_cs_kaoyan_19">nju_cs_kaoyan_19</a></li><li><a href="https://github.com/nju-kaoyan/nju_csai_kaoyan">nju_csai_kaoyan</a></li><li><a href="https://github.com/JackeyLea/NJUCS">NJUCS</a></li></ul></li><li><p>北京大学考研资料及信息汇总</p><ul><li><a href="https://github.com/wenyiyi/PKU">PKU</a></li><li><a href="https://github.com/sdmengxiangyu/kao_yan">kao_yan</a></li></ul></li><li><p>南航考研资料及信息汇总</p><ul><li><a href="https://github.com/nuaa-cs-kaoyan/awesome-nuaa-cs-kaoyan">awesome-nuaa-cs-kaoyan</a></li></ul></li><li><p>清华大学考研资料及信息汇总</p><ul><li><a href="https://github.com/stellarkey/912_project">912_project</a></li><li><a href="https://github.com/xUhEngwAng/912-notes">912-notes</a></li></ul></li><li><p>华中科技大学考研资料及信息汇总</p><ul><li><a href="https://github.com/janglucky/KAOYAN">KAOYAN</a></li></ul></li><li><p>湖南大学考研资料及信息汇总</p><ul><li><a href="https://github.com/ZSCDumin/HunanUniversity">HunanUniversity</a></li></ul></li><li><p>哈工大考研资料及信息汇总</p><ul><li><a href="https://github.com/guoJohnny/-837-">-837-</a></li><li><a href="https://github.com/hakulamtta/HIT-C-language-review">HIT_C_language-review</a></li></ul></li><li><p>西工大考研资料及信息汇总</p><ul><li><a href="https://github.com/Scorpio-xu/2017NPU-Exam">2017NPU-Exam</a></li></ul></li><li><p>电子科技大学考研资料及信息汇总</p><ul><li><a href="https://github.com/Leslan/uestc_master_interview">uestc_master_interview</a></li></ul></li><li><p>上海交大考研资料及信息汇总</p><ul><li><a href="https://github.com/zakiso/Postgraduate_notebook_for_SJTU_CS">Postgraduate_notebook_for_SJTU_CS</a></li></ul></li><li><p>北航考研资料及信息汇总</p><ul><li><a href="https://github.com/finlay-liu/BuaaMasterQuestion">BuaaMasterQuestion</a></li><li><a href="https://github.com/chengyong1/beihang-university">beihang-university</a></li></ul></li><li><p>数一、数二解析</p><ul><li><a href="https://github.com/fjh1997/China-NPEE-math">China-NPEE-math</a></li></ul></li></ul><h2 id="大厂开源">大厂开源</h2><h3 id="百度开源">百度开源</h3><ul><li><a href="https://github.com/apache/echarts">echarts</a> - ECharts 是国内应用最广泛的前端可视化生成工具，像素级的渲染效果使得绘制的图像几近完美。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22929ced5a03ffded2c41fd257d3eb96be02195de3ca66a083177bf5f73e2f418728f7f06&amp;idx=1&amp;mid=2247498464&amp;scene=21&amp;sn=4f85123d6ca67578ca7bad8f7dc71453#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/PaddlePaddle/PaddleHub">PaddleHub</a> - 一个深度学习模型开发工具，它提供了很多训练好的人工智能算法模型。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22929ced5a03ffded2c41fd257d3eb96be02195de3ca66a083177bf5f73e2f418728f7f06&amp;idx=1&amp;mid=2247498464&amp;scene=21&amp;sn=4f85123d6ca67578ca7bad8f7dc71453#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/ksky521/nodePPT">nodePPT</a> - 迄今为止最好的网页版 PPT，基于 markdown 语法编写。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22929ced5a03ffded2c41fd257d3eb96be02195de3ca66a083177bf5f73e2f418728f7f06&amp;idx=1&amp;mid=2247498464&amp;scene=21&amp;sn=4f85123d6ca67578ca7bad8f7dc71453#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://www.minimamente.com/project/magic/">magic</a> - Magic 是一个轻量级 UI 组件，具有性能高效、代码量小等优势。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22929ced5a03ffded2c41fd257d3eb96be02195de3ca66a083177bf5f73e2f418728f7f06&amp;idx=1&amp;mid=2247498464&amp;scene=21&amp;sn=4f85123d6ca67578ca7bad8f7dc71453#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="腾讯开源">腾讯开源</h3><ul><li><a href="https://github.com/Tencent/APIJSON">APIJSON</a> - APIJSON 是一种专为 API 而生的 JSON 网络传输协议以及基于这套协议实现的 ORM 库。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Tencent/wepy">wepy</a> - WePY 是一款让小程序支持组件化开发的框架，类似于 Vue 开发风格，它可以很方便的让开发者选择自己喜欢的开发风格去开发小程序。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Tencent/Tendis">Tendis</a> - 腾讯互娱 CROS DBA 团队和腾讯云数据库团队自主设计和研发的开源分布式高性能 KV 存储，推出了 Tendis。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Tencent/kbone">kbone</a> - kbone 实现了一个适配器，在适配层里模拟出了浏览器环境，让 Web 端的代码可以不做什么改动便可运行在小程序里。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Tencent/TencentOS-tiny">TencentOS-tiny</a> - 腾讯面向物联网领域开发的实时操作系统，具有低功耗、低资源占用、模块化、安全可靠等优点，可有效提升物联网终端产品开发效率。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Tencent/Hippy">Hippy</a> - Hippy 是一个跨端开发框架，开发者只写一套代码就直接运行于三个平台（iOS、Android 和 Web）。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/Tencent/kbone">kbone</a> - kbone 实现了一个适配器，在适配层里模拟出了浏览器环境，让 Web 端的代码可以不做什么改动便可运行在小程序里。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="www.github.com/Tencent/secguide">secguides</a> - 面向开发人员梳理的代码安全指南，旨在梳理 API 层面的风险点并提供详实可行的安全编码方案。</li></ul><h3 id="阿里开源">阿里开源</h3><ul><li><a href="https://github.com/alibaba/arthas">arthas</a> - Arthas 是阿里巴巴开源的 Java 诊断工具，深受开发者喜爱。<a href="https://github.com/alibaba/arthas"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://arthas.aliyun.com/doc/"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="github.com/alibaba/fastjson">fastjson</a> - fastjson 是一个 Java 库，可将 Java 对象转换为其 JSON 表示形式。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="github.com/alibaba/fastjson/wiki/Quick-Start-CN"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/druid">druid</a> - Druid 是一款强大的数据库连接池。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://github.com/alibaba/druid/wiki"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/ant-design/ant-design">ant-design</a> - 蚂蚁金服开源的一套企业级的前端设计语言和基于 React 的前端框架实现。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://ant.design/docs/react/introduce-cn"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/spring-cloud-incubator/spring-cloud-alibaba">spring-cloud-alibaba</a> - 微服务开发一站式解决方案，可以帮助阿里巴巴开源中间件与 Spring Cloud 体系更好的融合。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alipay/sofa-boot">sofa-boot</a> - 蚂蚁金服团队开源的基于 Spring Boot 的研发框架。<a href=""><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/dubbo">dubbo</a> - Dubbo 是阿里巴巴的一款高性能、轻量级的开源 Java RPC框架，可以和 Spring 框架无缝集成。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a> <a href="https://dubbo.apache.org/zh/"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlldddjwlj305k05kwed.jpg" alt="1网站建站"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/easyexcel">easyexcel</a> - easyexcel 重写了 poi 对 07 版 Excel 的解析，大大降低了内存功耗。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/taobao/nginx-book">nginx-book</a> - Nginx 开发从入门到精通。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/antvis/g2">g2</a> - 数据驱动的高交互可视化图形语法，一条语句即可构建出各种各样的可交互的统计图表。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://fusion.design/">fusion</a> - 企业级中后台 UI 解决方案，旨在提升设计与开发之间 UI 构建效率的工作方式。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/BizCharts">BizCharts</a> - 基于 G2 封装的 React 图表库，数据可视化项目可能会用到。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/eggjs/egg">egg</a> - 企业级 Node.js 框架 。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/umijs/umi">umi</a> - 基于 React 的前端框架 。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://alibaba.github.io/dawn/">dawn</a> - 前端构建和工程化工具，简化并统一了开发人员的日常构建与开发相关的工作。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="http://ux.ant.design/">Ant UX</a> - 页面逻辑原型 ,可以用它来绘制页面与页面之间的逻辑图。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://alibaba.github.io/G3D/">G3D</a> - 一个基于 WebGL 的 Javascript 3D 绘图引擎。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/apache/incubator-weex/">Weex</a> - 跨平台移动开发工具。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/weex-ui">Weex Ui</a> - 基于 Weex 的 UI 组件库 。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://motion.ant.design/">Ant Motion</a> - 动效语言&amp; React 框架动效解决方案。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/hiloteam/Hilo">Hilo</a> - HTML5 互动游戏引擎。这个项目可以帮助开发者快速创建HTML5游戏。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/shepherdwind/velocity.js">Velocity.js</a> - JavaScript 模板引擎。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/taobaofed/react-web">React Web</a> - 通过与 React Native 一致的 API 构建 Web 应用。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/nuysoft/Mock">Mock.js</a> - 模拟数据生成器，帮助前端开发者独立于后端进行开发，帮助编写单元测试。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/noform">noForm</a> - 基于React的表单解决方案。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/jstorm">Jstorm</a> - 企业级流式计算引擎 。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/simpleimage">SimpleImage</a> - 一个 Java 图片处理的类库，包含功能有图片缩略、水印等。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/justified/tedis">tedis</a> - redis 的 java 客户端 。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alipay/sofa-rpc">sofa-rpc</a> - 高性能 Java RPC 框架。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/p3c">p3c</a> - Java 代码规约扫描插件，IntelliJ IDEA  搜索这款插件安装，时刻监控你写的代码规不规范。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/AliSQL">AliSQL</a> - 开源数据库，适合电商、云计算以及金融等行业环境。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/oceanbase">oceanbase</a> - 分布式数据库。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/happyfish100/fastdfs">fastdfs</a> - 分布式文件系统 。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/apache/rocketmq/">rocketmq</a> - RocketMQ 是一款分布式、队列模型的消息中间件。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/killme2008/Metamorphosis">Metamorphosis</a> - 分布式消息中间件。这是一个高性能、高可用、可扩展的分布式消息中间件。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/tengine">tengine</a> - 淘宝 Web 服务器。在Nginx的基础上，针对大访问量网站的需求，添加了很多高级功能和特性。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li><li><a href="https://github.com/alibaba/tfs">tfs</a> - 分布式文件系统。这是一个高可扩展、高可用、高性能、面向互联网服务的分布式文件系统。<a href="https://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA%3D%3D&amp;chksm=f9a22984ced5a092b79362bb18932e8895ed01dba198513522bf50bec33c1458dd29805bd4da&amp;idx=1&amp;mid=2247498317&amp;scene=21&amp;sn=8d67a6067e8a30d2bc6548c3756621ad#wechat_redirect"><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxlhtmg11mj305k05k746.jpg" alt="微信"  width="18px" height="18px" /></a></li></ul><h3 id="字节开源">字节开源</h3><ul><li><a href="www.github.com/DouyinFE/semi-design">semi-design</a> - 抖音企业级应用 UI 解决方案 Semi Design，由字节跳动抖音前端与 UED 团队设计、开发并维护，是一款包含设计语言、React 组件、主题等开箱即用的中后台解决方案，可用于快速搭建美观的 React 应用。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Awesome GitHub Repo 会收集整理 GitHub 上高质量、有趣的开源项目，并将他们进行归类。值得注意的是，不是简单的按照编程语言来分类，而是按照更有趣的分类方式，比如：有趣项目、沙雕项目、实战项目、学习项目、实用工具等等。同时欢迎通过 Pull Reque</summary>
      
    
    
    
    <category term="github" scheme="https://www.fomal.cc/categories/github/"/>
    
    
    <category term="github" scheme="https://www.fomal.cc/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>三光年</title>
    <link href="https://www.fomal.cc/posts/60b29a37.html"/>
    <id>https://www.fomal.cc/posts/60b29a37.html</id>
    <published>2023-11-17T20:18:40.000Z</published>
    <updated>2024-06-25T01:56:19.839Z</updated>
    
    <content type="html"><![CDATA[<p><strong>三年，三十年，三光年，在这些日子里勿忘我。</strong></p><p><img src="https://free-img.mofashi.ltd/4/2024/05/08/663b8700535cd.jpg" alt="微信图片_20231210232854.jpg" title="微信图片_20231210232854.jpg"></p><p>时令该是小阳春，但我的严冬已然到来，命运大概确实热衷于同你我开玩笑。</p><p>至少你还在另一端，这个事实仍然让我心安。</p><p>我始终为你骄傲。即使有时候，你的存在对我而言已经有些像梦中在风里摇曳的风信子。</p><p>你早就能够独当一面，也完全有能力和决心去做出你想做的任何事情。</p><p>我又想起落雪了。当时二月初，站点的行道树全然白头，你把我从实验室里拽出来去公园散步。说将来可能看不到这种景致了，要多看看。</p><p>数支葡萄风信子都堆在我身侧，我忽然有些后悔那时没有多再看看你。</p><p>将来化作尘埃，能够伴随破碎的粒子流，在接下来无限的时间里，跨过那一点五光年的距离，缥缈银河，也算得上归宿吧。</p><p>至少那时不会再分别。</p>]]></content>
    
    
    <summary type="html">三年，三十年，三光年，在这些日子里勿忘我。</summary>
    
    
    
    <category term="随记" scheme="https://www.fomal.cc/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
    <category term="随记" scheme="https://www.fomal.cc/tags/%E9%9A%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>CHATGLM-6B清华AI语言模型</title>
    <link href="https://www.fomal.cc/posts/8d07c4e7.html"/>
    <id>https://www.fomal.cc/posts/8d07c4e7.html</id>
    <published>2023-11-05T06:39:51.000Z</published>
    <updated>2024-06-24T18:12:29.559Z</updated>
    
    <content type="html"><![CDATA[<p><s>猜猜我在清华找到了什么好东西</s><br><s>模型可以装在电脑里跑的，然后发现电脑带不动（悲）</s></p><span id="more"></span><h1>ChatGLM-6B</h1><h1><a href="https://gitclone.com/aiit/chat/">https://gitclone.com/aiit/chat/</a></h1><p><s>页面嵌入各种bug</s></p><p>新一代开源模型 <a href="https://github.com/THUDM/ChatGLM3">ChatGLM3-6B</a> 已发布，拥有10B以下最强的基础模型，支持工具调用（Function Call）、代码执行（Code Interpreter）、Agent 任务等功能。</p><h2 id="介绍">介绍</h2><p>ChatGLM-6B 是一个开源的、支持中英双语的对话语言模型，基于 <a href="https://github.com/THUDM/GLM">General Language Model (GLM)</a> 架构，具有 62 亿参数。结合模型量化技术，用户可以在消费级的显卡上进行本地部署（INT4 量化级别下最低只需 6GB 显存）。<br>ChatGLM-6B 使用了和 ChatGPT 相似的技术，针对中文问答和对话进行了优化。经过约 1T 标识符的中英双语训练，辅以监督微调、反馈自助、人类反馈强化学习等技术的加持，62 亿参数的 ChatGLM-6B 已经能生成相当符合人类偏好的回答，更多信息请参考我们的<a href="https://chatglm.cn/blog">博客</a>。欢迎通过 <a href="https://chatglm.cn">chatglm.cn</a> 体验更大规模的 ChatGLM 模型。</p><p>为了方便下游开发者针对自己的应用场景定制模型，我们同时实现了基于 <a href="https://github.com/THUDM/P-tuning-v2">P-Tuning v2</a> 的高效参数微调方法 <a href="ptuning/README.md">(使用指南)</a> ，INT4 量化级别下最低只需 7GB 显存即可启动微调。</p><p>ChatGLM-6B 权重对学术研究<strong>完全开放</strong>，在填写<a href="https://open.bigmodel.cn/mla/form">问卷</a>进行登记后<strong>亦允许免费商业使用</strong>。</p><hr><p>ChatGLM-6B 开源模型旨在与开源社区一起推动大模型技术发展，恳请开发者和大家遵守<a href="MODEL_LICENSE">开源协议</a>，勿将开源模型和代码及基于开源项目产生的衍生物用于任何可能给国家和社会带来危害的用途以及用于任何未经过安全评估和备案的服务。<strong>目前，本项目团队未基于 ChatGLM-6B 开发任何应用，包括网页端、安卓、苹果 iOS 及 Windows App 等应用。</strong></p><p>尽管模型在训练的各个阶段都尽力确保数据的合规性和准确性，但由于 ChatGLM-6B 模型规模较小，且模型受概率随机性因素影响，无法保证输出内容的准确性，且模型易被误导（详见<a href="README.md#%E5%B1%80%E9%99%90%E6%80%A7">局限性</a>）。<strong>本项目不承担开源模型和代码导致的数据安全、舆情风险或发生任何模型被误导、滥用、传播、不当利用而产生的风险和责任。</strong></p><h2 id="更新信息">更新信息</h2><p><strong>[2023/07/25]</strong> 发布 <a href="https://github.com/THUDM/CodeGeeX2">CodeGeeX2</a> ，基于 ChatGLM2-6B 的代码生成模型，代码能力全面提升，更多特性包括：</p><ul><li><strong>更强大的代码能力</strong>：CodeGeeX2-6B 进一步经过了 600B 代码数据预训练，相比 CodeGeeX 一代模型，在代码能力上全面提升，<a href="https://huggingface.co/datasets/THUDM/humaneval-x">HumanEval-X</a> 评测集的六种编程语言均大幅提升 (Python +57%, C++ +71%, Java +54%, JavaScript +83%, Go +56%, Rust +321%)，在Python上达到 35.9% 的 Pass@1 一次通过率，超越规模更大的 StarCoder-15B。</li><li><strong>更优秀的模型特性</strong>：继承 ChatGLM2-6B 模型特性，CodeGeeX2-6B 更好支持中英文输入，支持最大 8192 序列长度，推理速度较一代 大幅提升，量化后仅需6GB显存即可运行，支持轻量级本地化部署。</li><li><strong>更全面的AI编程助手</strong>：CodeGeeX插件（<a href="https://marketplace.visualstudio.com/items?itemName=aminer.codegeex">VS Code</a>, <a href="https://plugins.jetbrains.com/plugin/20587-codegeex">Jetbrains</a>）后端升级，支持超过100种编程语言，新增上下文补全、跨文件补全等实用功能。结合 Ask CodeGeeX 交互式AI编程助手，支持中英文对话解决各种编程问题，包括且不限于代码解释、代码翻译、代码纠错、文档生成等，帮助程序员更高效开发。</li></ul><p><strong>[2023/06/25]</strong> 发布 <a href="https://github.com/THUDM/ChatGLM2-6B">ChatGLM2-6B</a>，ChatGLM-6B 的升级版本，在保留了了初代模型对话流畅、部署门槛较低等众多优秀特性的基础之上，ChatGLM<strong>2</strong>-6B 引入了如下新特性：</p><ol><li><strong>更强大的性能</strong>：基于 ChatGLM 初代模型的开发经验，我们全面升级了 ChatGLM2-6B 的基座模型。ChatGLM2-6B 使用了 <a href="https://github.com/THUDM/GLM">GLM</a> 的混合目标函数，经过了 1.4T 中英标识符的预训练与人类偏好对齐训练，<a href="#%E8%AF%84%E6%B5%8B%E7%BB%93%E6%9E%9C">评测结果</a>显示，相比于初代模型，ChatGLM2-6B 在 MMLU（+23%）、CEval（+33%）、GSM8K（+571%） 、BBH（+60%）等数据集上的性能取得了大幅度的提升，在同尺寸开源模型中具有较强的竞争力。</li><li><strong>更长的上下文</strong>：基于 <a href="https://github.com/HazyResearch/flash-attention">FlashAttention</a> 技术，我们将基座模型的上下文长度（Context Length）由 ChatGLM-6B 的 2K 扩展到了 32K，并在对话阶段使用 8K 的上下文长度训练，允许更多轮次的对话。但当前版本的 ChatGLM2-6B 对单轮超长文档的理解能力有限，我们会在后续迭代升级中着重进行优化。</li><li><strong>更高效的推理</strong>：基于 <a href="http://arxiv.org/abs/1911.02150">Multi-Query Attention</a> 技术，ChatGLM2-6B 有更高效的推理速度和更低的显存占用：在官方的模型实现下，推理速度相比初代提升了 42%，INT4 量化下，6G 显存支持的对话长度由 1K 提升到了 8K。</li></ol><p>更多信息参见 <a href="https://github.com/THUDM/ChatGLM2-6B">ChatGLM2-6B</a>。</p><p><strong>[2023/06/14]</strong> 发布 <a href="https://github.com/THUDM/WebGLM">WebGLM</a>，一项被接受于KDD 2023的研究工作，支持利用网络信息生成带有准确引用的长回答。</p><p><strong>[2023/05/17]</strong> 发布 <a href="https://github.com/THUDM/VisualGLM-6B">VisualGLM-6B</a>，一个支持图像理解的多模态对话语言模型。</p><p>可以通过本仓库中的 <a href="cli_demo_vision.py">cli_demo_vision.py</a> 和 <a href="web_demo_vision.py">web_demo_vision.py</a> 来运行命令行和网页 Demo。注意 VisualGLM-6B 需要额外安装 <a href="https://github.com/THUDM/SwissArmyTransformer/">SwissArmyTransformer</a> 和 torchvision。更多信息参见 <a href="https://github.com/THUDM/VisualGLM-6B">VisualGLM-6B</a>。</p><p><strong>[2023/05/15]</strong> 更新 v1.1 版本 checkpoint，训练数据增加英文指令微调数据以平衡中英文数据比例，解决英文回答中夹杂中文词语的现象。</p><h2 id="友情链接">友情链接</h2><p>对 ChatGLM 进行加速的开源项目：</p><ul><li><a href="https://huggingface.co/TMElyralab/lyraChatGLM">lyraChatGLM</a>: 对 ChatGLM-6B 进行推理加速，最高可以实现 9000+ tokens/s 的推理速度</li><li><a href="https://github.com/wangzhaode/ChatGLM-MNN">ChatGLM-MNN</a>: 一个基于 MNN 的 ChatGLM-6B C++ 推理实现，支持根据显存大小自动分配计算任务给 GPU 和 CPU</li><li><a href="https://github.com/Jittor/JittorLLMs">JittorLLMs</a>：最低3G显存或者没有显卡都可运行 ChatGLM-6B FP16， 支持Linux、windows、Mac部署</li><li><a href="https://github.com/MegEngine/InferLLM">InferLLM</a>：轻量级 C++ 推理，可以实现本地 x86，Arm 处理器上实时聊天，手机上也同样可以实时运行，运行内存只需要 4G</li></ul><p>基于或使用了 ChatGLM-6B 的开源项目：</p><ul><li><a href="https://github.com/imClumsyPanda/langchain-ChatGLM">langchain-ChatGLM</a>：基于 langchain 的 ChatGLM 应用，实现基于可扩展知识库的问答</li><li><a href="https://github.com/l15y/wenda">闻达</a>：大型语言模型调用平台，基于 ChatGLM-6B 实现了类 ChatPDF 功能</li><li><a href="https://github.com/initialencounter/glm-bot">glm-bot</a>：将ChatGLM接入Koishi可在各大聊天平台上调用ChatGLM</li><li><a href="https://github.com/GaiZhenbiao/ChuanhuChatGPT">Chuanhu Chat</a>: 为各个大语言模型和在线模型API提供美观易用、功能丰富、快速部署的用户界面，支持ChatGLM-6B。</li></ul><p>支持 ChatGLM-6B 和相关应用在线训练的示例项目：</p><ul><li><a href="https://www.heywhale.com/mw/project/6436d82948f7da1fee2be59e">ChatGLM-6B 的部署与微调教程</a></li><li><a href="https://www.heywhale.com/mw/project/643977aa446c45f4592a1e59">ChatGLM-6B 结合 langchain 实现本地知识库 QA Bot</a></li></ul><p>第三方评测：</p><ul><li><a href="https://arxiv.org/abs/2304.12986">Measuring Massive Multitask Chinese Understanding</a></li></ul><p>更多开源项目参见 <a href="PROJECT.md">PROJECT.md</a></p><h2 id="使用方式">使用方式</h2><h3 id="硬件需求">硬件需求</h3><table><thead><tr><th><strong>量化等级</strong></th><th><strong>最低 GPU 显存</strong>（推理）</th><th><strong>最低 GPU 显存</strong>（高效参数微调）</th></tr></thead><tbody><tr><td>FP16（无量化）</td><td>13 GB</td><td>14 GB</td></tr><tr><td>INT8</td><td>8 GB</td><td>9 GB</td></tr><tr><td>INT4</td><td>6 GB</td><td>7 GB</td></tr></tbody></table><h3 id="环境安装">环境安装</h3><p>使用 pip 安装依赖：<code>pip install -r requirements.txt</code>，其中 <code>transformers</code> 库版本推荐为 <code>4.27.1</code>，但理论上不低于 <code>4.23.1</code> 即可。</p><p>此外，如果需要在 cpu 上运行量化后的模型，还需要安装 <code>gcc</code> 与 <code>openmp</code>。多数 Linux 发行版默认已安装。对于 Windows ，可在安装 <a href="https://jmeubank.github.io/tdm-gcc/">TDM-GCC</a> 时勾选 <code>openmp</code>。 Windows 测试环境 <code>gcc</code> 版本为 <code>TDM-GCC 10.3.0</code>， Linux 为 <code>gcc 11.3.0</code>。在 MacOS 上请参考 <a href="FAQ.md#q1">Q1</a>。</p><h3 id="代码调用">代码调用</h3><p>可以通过如下代码调用 ChatGLM-6B 模型来生成对话：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> transformers <span class="keyword">import</span> AutoTokenizer, AutoModel</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tokenizer = AutoTokenizer.from_pretrained(<span class="string">&quot;THUDM/chatglm-6b&quot;</span>, trust_remote_code=<span class="literal">True</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>model = AutoModel.from_pretrained(<span class="string">&quot;THUDM/chatglm-6b&quot;</span>, trust_remote_code=<span class="literal">True</span>).half().cuda()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>model = model.<span class="built_in">eval</span>()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>response, history = model.chat(tokenizer, <span class="string">&quot;你好&quot;</span>, history=[])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(response)</span><br><span class="line">你好👋!我是人工智能助手 ChatGLM-6B,很高兴见到你,欢迎问我任何问题。</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>response, history = model.chat(tokenizer, <span class="string">&quot;晚上睡不着应该怎么办&quot;</span>, history=history)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(response)</span><br><span class="line">晚上睡不着可能会让你感到焦虑或不舒服,但以下是一些可以帮助你入睡的方法:</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> 制定规律的睡眠时间表:保持规律的睡眠时间表可以帮助你建立健康的睡眠习惯,使你更容易入睡。尽量在每天的相同时间上床,并在同一时间起床。</span><br><span class="line"><span class="number">2.</span> 创造一个舒适的睡眠环境:确保睡眠环境舒适,安静,黑暗且温度适宜。可以使用舒适的床上用品,并保持房间通风。</span><br><span class="line"><span class="number">3.</span> 放松身心:在睡前做些放松的活动,例如泡个热水澡,听些轻柔的音乐,阅读一些有趣的书籍等,有助于缓解紧张和焦虑,使你更容易入睡。</span><br><span class="line"><span class="number">4.</span> 避免饮用含有咖啡因的饮料:咖啡因是一种刺激性物质,会影响你的睡眠质量。尽量避免在睡前饮用含有咖啡因的饮料,例如咖啡,茶和可乐。</span><br><span class="line"><span class="number">5.</span> 避免在床上做与睡眠无关的事情:在床上做些与睡眠无关的事情,例如看电影,玩游戏或工作等,可能会干扰你的睡眠。</span><br><span class="line"><span class="number">6.</span> 尝试呼吸技巧:深呼吸是一种放松技巧,可以帮助你缓解紧张和焦虑,使你更容易入睡。试着慢慢吸气,保持几秒钟,然后缓慢呼气。</span><br><span class="line"></span><br><span class="line">如果这些方法无法帮助你入睡,你可以考虑咨询医生或睡眠专家,寻求进一步的建议。</span><br></pre></td></tr></table></figure><p>模型的实现仍然处在变动中。如果希望固定使用的模型实现以保证兼容性，可以在 <code>from_pretrained</code> 的调用中增加 <code>revision=&quot;v1.1.0&quot;</code> 参数。<code>v1.1.0</code> 是当前最新的版本号，完整的版本列表参见 <a href="https://huggingface.co/THUDM/chatglm-6b#change-log">Change Log</a>。</p><h3 id="从本地加载模型">从本地加载模型</h3><p>以上代码会由 <code>transformers</code> 自动下载模型实现和参数。完整的模型实现可以在 <a href="https://huggingface.co/THUDM/chatglm-6b">Hugging Face Hub</a>。如果你的网络环境较差，下载模型参数可能会花费较长时间甚至失败。此时可以先将模型下载到本地，然后从本地加载。</p><p>从 Hugging Face Hub 下载模型需要先<a href="https://docs.github.com/zh/repositories/working-with-files/managing-large-files/installing-git-large-file-storage">安装Git LFS</a>，然后运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://huggingface.co/THUDM/chatglm-6b</span><br></pre></td></tr></table></figure><p>如果你从 Hugging Face Hub 上下载 checkpoint 的速度较慢，可以只下载模型实现</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GIT_LFS_SKIP_SMUDGE=1 git clone https://huggingface.co/THUDM/chatglm-6b</span><br></pre></td></tr></table></figure><p>然后从<a href="https://cloud.tsinghua.edu.cn/d/fb9f16d6dc8f482596c2/">这里</a>手动下载模型参数文件，并将下载的文件替换到本地的 <code>chatglm-6b</code> 目录下。</p><p>将模型下载到本地之后，将以上代码中的 <code>THUDM/chatglm-6b</code> 替换为你本地的 <code>chatglm-6b</code> 文件夹的路径，即可从本地加载模型。</p><p><strong>Optional</strong> 模型的实现仍然处在变动中。如果希望固定使用的模型实现以保证兼容性，可以执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout v1.1.0</span><br></pre></td></tr></table></figure><h2 id="Demo-API">Demo &amp; API</h2><p>我们提供了一个基于 <a href="https://gradio.app">Gradio</a> 的网页版 Demo 和一个命令行 Demo。使用时首先需要下载本仓库：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/THUDM/ChatGLM-6B</span><br><span class="line">cd ChatGLM-6B</span><br></pre></td></tr></table></figure><h3 id="网页版-Demo">网页版 Demo</h3><p><img src="./CHATGLM-6B/resources/web-demo.gif" alt="web-demo.gif"></p><p>首先安装 Gradio：<code>pip install gradio</code>，然后运行仓库中的 <a href="web_demo.py">web_demo.py</a>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python web_demo.py</span><br></pre></td></tr></table></figure><p>程序会运行一个 Web Server，并输出地址。在浏览器中打开输出的地址即可使用。最新版 Demo 实现了打字机效果，速度体验大大提升。注意，由于国内 Gradio 的网络访问较为缓慢，启用 <code>demo.queue().launch(share=True, inbrowser=True)</code> 时所有网络会经过 Gradio 服务器转发，导致打字机体验大幅下降，现在默认启动方式已经改为 <code>share=False</code>，如有需要公网访问的需求，可以重新修改为 <code>share=True</code> 启动。</p><p>感谢 <a href="https://github.com/AdamBear">@AdamBear</a> 实现了基于 Streamlit 的网页版 Demo，运行方式见<a href="https://github.com/THUDM/ChatGLM-6B/pull/117">#117</a>.</p><h3 id="命令行-Demo">命令行 Demo</h3><p><img src="./CHATGLM-6B/resources/cli-demo.png" alt="cli-demo.png"></p><p>运行仓库中 <a href="cli_demo.py">cli_demo.py</a>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python cli_demo.py</span><br></pre></td></tr></table></figure><p>程序会在命令行中进行交互式的对话，在命令行中输入指示并回车即可生成回复，输入 <code>clear</code> 可以清空对话历史，输入 <code>stop</code> 终止程序。</p><h3 id="API部署">API部署</h3><p>首先需要安装额外的依赖 <code>pip install fastapi uvicorn</code>，然后运行仓库中的 <a href="api.py">api.py</a>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python api.py</span><br></pre></td></tr></table></figure><p>默认部署在本地的 8000 端口，通过 POST 方法进行调用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST &quot;http://127.0.0.1:8000&quot; \</span><br><span class="line">     -H &#x27;Content-Type: application/json&#x27; \</span><br><span class="line">     -d &#x27;&#123;&quot;prompt&quot;: &quot;你好&quot;, &quot;history&quot;: []&#125;&#x27;</span><br></pre></td></tr></table></figure><p>得到的返回值为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;response&quot;:&quot;你好👋！我是人工智能助手 ChatGLM-6B，很高兴见到你，欢迎问我任何问题。&quot;,</span><br><span class="line">  &quot;history&quot;:[[&quot;你好&quot;,&quot;你好👋！我是人工智能助手 ChatGLM-6B，很高兴见到你，欢迎问我任何问题。&quot;]],</span><br><span class="line">  &quot;status&quot;:200,</span><br><span class="line">  &quot;time&quot;:&quot;2023-03-23 21:38:40&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="低成本部署">低成本部署</h2><h3 id="模型量化">模型量化</h3><p>默认情况下，模型以 FP16 精度加载，运行上述代码需要大概 13GB 显存。如果你的 GPU 显存有限，可以尝试以量化方式加载模型，使用方法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按需修改，目前只支持 4/8 bit 量化</span></span><br><span class="line">model = AutoModel.from_pretrained(<span class="string">&quot;THUDM/chatglm-6b&quot;</span>, trust_remote_code=<span class="literal">True</span>).quantize(<span class="number">8</span>).half().cuda()</span><br></pre></td></tr></table></figure><p>进行 2 至 3 轮对话后，8-bit 量化下 GPU 显存占用约为 10GB，4-bit 量化下仅需 6GB 占用。随着对话轮数的增多，对应消耗显存也随之增长，由于采用了相对位置编码，理论上 ChatGLM-6B 支持无限长的 context-length，但总长度超过 2048（训练长度）后性能会逐渐下降。</p><p>模型量化会带来一定的性能损失，经过测试，ChatGLM-6B 在 4-bit 量化下仍然能够进行自然流畅的生成。使用 <a href="https://arxiv.org/abs/2210.17323">GPT-Q</a> 等量化方案可以进一步压缩量化精度/提升相同量化精度下的模型性能，欢迎大家提出对应的 Pull Request。</p><p>量化过程需要在内存中首先加载 FP16 格式的模型，消耗大概 13GB 的内存。如果你的内存不足的话，可以直接加载量化后的模型，INT4 量化后的模型仅需大概 5.2GB 的内存：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># INT8 量化的模型将&quot;THUDM/chatglm-6b-int4&quot;改为&quot;THUDM/chatglm-6b-int8&quot;</span></span><br><span class="line">model = AutoModel.from_pretrained(<span class="string">&quot;THUDM/chatglm-6b-int4&quot;</span>, trust_remote_code=<span class="literal">True</span>).half().cuda()</span><br></pre></td></tr></table></figure><p>量化模型的参数文件也可以从<a href="https://cloud.tsinghua.edu.cn/d/674208019e314311ab5c/">这里</a>手动下载。</p><h3 id="CPU-部署">CPU 部署</h3><p>如果你没有 GPU 硬件的话，也可以在 CPU 上进行推理，但是推理速度会更慢。使用方法如下（需要大概 32GB 内存）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model = AutoModel.from_pretrained(<span class="string">&quot;THUDM/chatglm-6b&quot;</span>, trust_remote_code=<span class="literal">True</span>).<span class="built_in">float</span>()</span><br></pre></td></tr></table></figure><p>如果你的内存不足，可以直接加载量化后的模型：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># INT8 量化的模型将&quot;THUDM/chatglm-6b-int4&quot;改为&quot;THUDM/chatglm-6b-int8&quot;</span></span><br><span class="line">model = AutoModel.from_pretrained(<span class="string">&quot;THUDM/chatglm-6b-int4&quot;</span>,trust_remote_code=<span class="literal">True</span>).<span class="built_in">float</span>()</span><br></pre></td></tr></table></figure><p>如果遇到了报错 <code>Could not find module 'nvcuda.dll'</code> 或者 <code>RuntimeError: Unknown platform: darwin</code> (MacOS) ，请<a href="README.md#%E4%BB%8E%E6%9C%AC%E5%9C%B0%E5%8A%A0%E8%BD%BD%E6%A8%A1%E5%9E%8B">从本地加载模型</a></p><h3 id="Mac-部署">Mac 部署</h3><p>对于搭载了 Apple Silicon 或者 AMD GPU 的Mac，可以使用 MPS 后端来在 GPU 上运行 ChatGLM-6B。需要参考 Apple 的 <a href="https://developer.apple.com/metal/pytorch">官方说明</a> 安装 PyTorch-Nightly（正确的版本号应该是2.1.0.dev2023xxxx，而不是2.0.0）。</p><p>目前在 MacOS 上只支持<a href="README.md#%E4%BB%8E%E6%9C%AC%E5%9C%B0%E5%8A%A0%E8%BD%BD%E6%A8%A1%E5%9E%8B">从本地加载模型</a>。将代码中的模型加载改为从本地加载，并使用 mps 后端：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model = AutoModel.from_pretrained(<span class="string">&quot;your local path&quot;</span>, trust_remote_code=<span class="literal">True</span>).half().to(<span class="string">&#x27;mps&#x27;</span>)</span><br></pre></td></tr></table></figure><p>加载半精度的 ChatGLM-6B 模型需要大概 13GB 内存。内存较小的机器（比如 16GB 内存的 MacBook Pro），在空余内存不足的情况下会使用硬盘上的虚拟内存，导致推理速度严重变慢。此时可以使用量化后的模型如 chatglm-6b-int4。因为 GPU 上量化的 kernel 是使用 CUDA 编写的，因此无法在 MacOS 上使用，只能使用 CPU 进行推理。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># INT8 量化的模型将&quot;THUDM/chatglm-6b-int4&quot;改为&quot;THUDM/chatglm-6b-int8&quot;</span></span><br><span class="line">model = AutoModel.from_pretrained(<span class="string">&quot;THUDM/chatglm-6b-int4&quot;</span>,trust_remote_code=<span class="literal">True</span>).<span class="built_in">float</span>()</span><br></pre></td></tr></table></figure><p>为了充分使用 CPU 并行，还需要<a href="FAQ.md#q1">单独安装 OpenMP</a>。</p><h3 id="多卡部署">多卡部署</h3><p>如果你有多张 GPU，但是每张 GPU 的显存大小都不足以容纳完整的模型，那么可以将模型切分在多张GPU上。首先安装 accelerate: <code>pip install accelerate</code>，然后通过如下方法加载模型：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> utils <span class="keyword">import</span> load_model_on_gpus</span><br><span class="line">model = load_model_on_gpus(<span class="string">&quot;THUDM/chatglm-6b&quot;</span>, num_gpus=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>即可将模型部署到两张 GPU 上进行推理。你可以将 <code>num_gpus</code> 改为你希望使用的 GPU 数。默认是均匀切分的，你也可以传入 <code>device_map</code> 参数来自己指定。</p><h2 id="高效参数微调">高效参数微调</h2><p>基于 <a href="https://github.com/THUDM/P-tuning-v2">P-tuning v2</a> 的高效参数微调。具体使用方法详见 <a href="ptuning/README.md">ptuning/README.md</a>。</p><h2 id="ChatGLM-6B-示例">ChatGLM-6B 示例</h2><p>以下是一些使用 <code>web_demo.py</code> 得到的示例截图。<br><img src="./CHATGLM-6B/examples/ad-writing-2.png" alt="ad-writing-2.png"><br><img src="./CHATGLM-6B/examples/blog-outline.png" alt="blog-outline.png"><br><img src="./CHATGLM-6B/examples/comments-writing.png" alt="comments-writing.png"><br><img src="./CHATGLM-6B/examples/email-writing-1.png" alt="email-writing-1.png"><br><img src="./CHATGLM-6B/examples/email-writing-2.png" alt="email-writing-2.png"><br><img src="./CHATGLM-6B/examples/information-extraction.png" alt="information-extraction.png"><br><img src="./CHATGLM-6B/examples/role-play.png" alt="role-play.png"><br><img src="./CHATGLM-6B/examples/self-introduction.png" alt="self-introduction.png"><br><img src="./CHATGLM-6B/examples/sport.png" alt="sport.png"><br><img src="./CHATGLM-6B/examples/tour-guide.png" alt="tour-guide.png"></p><h2 id="局限性">局限性</h2><p>由于 ChatGLM-6B 的小规模，其能力仍然有许多局限性。以下是我们目前发现的一些问题：</p><ul><li><p>模型容量较小：6B 的小容量，决定了其相对较弱的模型记忆和语言能力。在面对许多事实性知识任务时，ChatGLM-6B 可能会生成不正确的信息；它也不擅长逻辑类问题（如数学、编程）的解答。</p><p><img src="./CHATGLM-6B/limitations/factual_error.png" alt="factual_error.png"><br><img src="./CHATGLM-6B/limitations/math_error.png" alt="math_error.png"></p></li><li><p>产生有害说明或有偏见的内容：ChatGLM-6B 只是一个初步与人类意图对齐的语言模型，可能会生成有害、有偏见的内容。（内容可能具有冒犯性，此处不展示）</p></li><li><p>英文能力不足：ChatGLM-6B 训练时使用的指示/回答大部分都是中文的，仅有极小一部分英文内容。因此，如果输入英文指示，回复的质量远不如中文，甚至与中文指示下的内容矛盾，并且出现中英夹杂的情况。</p></li><li><p>易被误导，对话能力较弱：ChatGLM-6B 对话能力还比较弱，而且 “自我认知” 存在问题，并很容易被误导并产生错误的言论。例如当前版本的模型在被误导的情况下，会在自我认知上发生偏差。</p><p><img src="./CHATGLM-6B/limitations/self-confusion_google.jpg" alt="self-confusion_google.jpg"><br><img src="./CHATGLM-6B/limitations/self-confusion_openai.jpg" alt="self-confusion_openai.jpg"><br><img src="./CHATGLM-6B/limitations/self-confusion_tencent.jpg" alt="self-confusion_tencent.jpg"></p></li></ul><h2 id="协议">协议</h2><p>本仓库的代码依照 <a href="LICENSE">Apache-2.0</a> 协议开源，ChatGLM-6B 模型的权重的使用则需要遵循 <a href="MODEL_LICENSE">Model License</a>。ChatGLM-6B 权重对学术研究<strong>完全开放</strong>，在填写<a href="https://open.bigmodel.cn/mla/form">问卷</a>进行登记后<strong>亦允许免费商业使用</strong>。</p><h2 id="引用">引用</h2><p>如果你觉得我们的工作有帮助的话，请考虑引用下列论文</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@article&#123;zeng2022glm,</span><br><span class="line">  title=&#123;Glm<span class="number">-130</span>b: An open <span class="keyword">bilingual </span>pre-trained model&#125;,</span><br><span class="line">  author=&#123;Zeng, Aohan <span class="keyword">and </span>Liu, Xiao <span class="keyword">and </span>Du, Zhengxiao <span class="keyword">and </span>Wang, Zihan <span class="keyword">and </span>Lai, Hanyu <span class="keyword">and </span><span class="keyword">Ding, </span>Ming <span class="keyword">and </span>Yang, Zhuoyi <span class="keyword">and </span>Xu, Yifan <span class="keyword">and </span>Zheng, Wendi <span class="keyword">and </span>Xia, Xiao <span class="keyword">and </span>others&#125;,</span><br><span class="line">  <span class="keyword">journal=&#123;arXiv </span>preprint arXiv:<span class="number">2210</span>.<span class="number">02414</span>&#125;,</span><br><span class="line">  year=&#123;<span class="number">2022</span>&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@inproceedings&#123;du2022glm,</span><br><span class="line">  title=&#123;GLM: General Language Model Pretraining with Autoregressive <span class="keyword">Blank </span>Infilling&#125;,</span><br><span class="line">  author=&#123;Du, Zhengxiao <span class="keyword">and </span>Qian, Yujie <span class="keyword">and </span>Liu, Xiao <span class="keyword">and </span><span class="keyword">Ding, </span>Ming <span class="keyword">and </span>Qiu, <span class="keyword">Jiezhong </span><span class="keyword">and </span>Yang, Zhilin <span class="keyword">and </span>Tang, <span class="keyword">Jie&#125;,</span></span><br><span class="line"><span class="keyword"></span>  <span class="keyword">booktitle=&#123;Proceedings </span>of the <span class="number">60</span>th Annual Meeting of the Association for Computational Linguistics (Volume <span class="number">1</span>: Long Papers)&#125;,</span><br><span class="line">  pages=&#123;<span class="number">320</span>--<span class="number">335</span>&#125;,</span><br><span class="line">  year=&#123;<span class="number">2022</span>&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;s&gt;猜猜我在清华找到了什么好东西&lt;/s&gt;&lt;br&gt;
&lt;s&gt;模型可以装在电脑里跑的，然后发现电脑带不动（悲）&lt;/s&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="AI工具" scheme="https://www.fomal.cc/categories/AI%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="github" scheme="https://www.fomal.cc/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>网页嵌套</title>
    <link href="https://www.fomal.cc/posts/54821428.html"/>
    <id>https://www.fomal.cc/posts/54821428.html</id>
    <published>2023-11-02T08:37:01.000Z</published>
    <updated>2024-06-19T16:05:17.372Z</updated>
    
    <content type="html"><![CDATA[<h1><a href="https://www.cnblogs.com/Tanghongchang/p/7194180.html">如何将一个HTML页面嵌套在另一个页面中</a></h1><p><strong>一 在原页面嵌入其他页面</strong></p><p></p><p>1、使用<strong>iframe</strong>框架</p><p>客户端页面嵌套可以使用iframe的方法，弊端是必须事先想好被嵌套的页面在首页中要占多大的位置。</p><p>如果被嵌套页面太大，超过事先定义的宽度或高度，则首页会出现滚动条。这也许正是你所需要的，</p><p>但也许会完全破坏主页的设计。</p><p></p><p></p><p>** &lt; iframe &gt;------ &lt; / iframe &gt;**</p><p><strong>&lt;iframe  src=“要放在框架里面的网址或文件” height=“” width=“”&gt;</strong>  <strong>&lt;/ifrmae&gt;</strong>\</p><p>例：** &lt;iframe src=“text.asp” height=“200” width=“600”&gt;   **</p><p>**                       &lt;a href=“<strong>text.asp</strong>”&gt;**</p><p>**                          你的浏览器不支持iframe页面嵌套，请点击这里访问页面内容。**</p><p>**                       &lt;/a&gt;**</p><p>**              &lt;/ifrmae &gt;**</p><p></p><p>可加属性    scrolling=“No”     意为滚动条不随内容改变而出现      – 多余的内容会被自动隐藏！</p><p>frameborder=“0”   嵌套页面边框</p><p>leftmargin=“0”      左边距</p><p>topmargin=“0”      上边距</p><p>onscroll=“true”      当元素滚动条被滚动时执行脚本 ,在HTML 5 中定义了该元素</p><p></p><p>插入&lt;a&gt;，是因为老版本的浏览器和搜索引擎不支持iframe，虽然现在已经</p><p>很少有人还会使用Netscape 4这样老的浏览器了，但是几乎所有人都会使用象Google这样的搜索引擎。</p><p>在iframe里面加上超级链接可以帮助搜索引擎找到网页的内容。</p><p></p><p><strong>2、SSI (Server Side Include)</strong></p><p>SSI是一种简单的动态网页制作技术，但是有些服务器要求网页文件扩展名为.shtml才能识别文件中SSI命令。所以如果你的SSI命令看起来不工作，先别放弃，试着把文件扩展名改为.shtml，也许会成功。如果知道自己的服务器是否支持SSI，请看另一篇文章。</p><p>使用SSI一个局限性是页面一定要放在网页服务器上才能看到效果，在本地是不好调试的。当然，如果非要在本地调试，就本地装一个Apache服务器好了。</p><p>比如你想在每个网页的底部加上同样的版权信息，像</p><blockquote><p>© 2009 程序员实验室 版权所有</p></blockquote><p>可以把这行信息放到一个叫做footer.html的文件里，footer.html的内容为：</p><blockquote><p><strong>&lt;center&gt; &amp;copy; 程序员实验室 版权所有&lt;/center&gt;;</strong></p></blockquote><p>这样同一路径下的其他页面文件要包含footer.html的SSI命令是：</p><p>**         &lt;!- #include virtual=“footer.html” -&gt;（常用）**</p><p>或者</p><p><strong><code>   &lt;!- #include file=&quot;footer.html&quot; -&gt;</code></strong></p><p>这两者的几乎是一样的，不同之处在于include virtual后面取的是一个URL形式的路径，甚至还可以执行一个CGI程序并包含其输出结果，如果你的服务器支持CGI的话。而include file后面取的是一个文件系统路径，并且不能执行CGI程序。两者都可以接受相对路径，所以对上面这个简单例子，两者的效果是一样的。如果你不知道URL路径与文件系统路径两者的区别的话，就用include virtual</p><p></p><p><strong>3、ASP和ASP<a href="http://lib.csdn.net/base/dotnet" title=".NET知识库">.Net</a></strong></p><p>如果你使用的是老式的ASP，则语法是与上面SSI一样的，不需要任何修改，只要把命令所在文件的扩展名改为.asp即可。</p><p><a href="http://xn--ASP-xi9dk72d.NET">对于ASP.NET</a>，也是类似，不同之处在于，因为SSI命令是在ASP命令运行之前被首先编译，所以文件名中不能够使用ASP.NET的变量。如果一定要用的话，就用ASP.NET的命令来做文件嵌套吧。</p><p>比如：</p><pre><code>&lt;%          Response.WriteFile (&quot;footer.html&quot;)%&gt;</code></pre><p>更多关于怎样在ASP.NET中实现动态文件嵌套，请参考<a href="http://support.microsoft.com/kb/306575/EN-US/">微软的这篇文章</a>。</p><p></p><p></p><p><strong>4、PHP</strong></p><p>如果你的服务器支持PHP的话，用PHP引用footer.html文件的写法如下：</p><p><code>&lt;?php include(&quot;footer.html&quot;); ?&gt;</code></p><p>这句命令所在的文件扩展名必须被为.php。</p><p>除了引用本服务器上的文件，PHP的include命令还可以用来引用其它网站上的html文件，比如：</p><p><code>&lt;?php include(http://www.prglab.com/examples/footer.html); ?&gt;</code></p><p>当然你要得到其它网站的允许才能引用别人的文件。</p><p></p><p></p><p><strong>5、JSP （<a href="http://lib.csdn.net/base/java" title="Java 知识库">Java </a>Server Page)</strong></p><p>JSP文件需要在基于<a href="http://lib.csdn.net/base/java" title="Java 知识库">Java</a>的服务器上运行，比如<a href="http://tomcat.apache.org/">Apache Tomcat</a>。JSP包含文件的语法是：</p><p><code>&lt;%@ include file=&quot;footer.html&quot; %&gt;</code></p><p><img src="./%E7%BD%91%E9%A1%B5%E5%B5%8C%E5%A5%97/s122.png" alt="s122.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;a href=&quot;https://www.cnblogs.com/Tanghongchang/p/7194180.html&quot;&gt;如何将一个HTML页面嵌套在另一个页面中&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;一 在原页面嵌入其他页面&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>SD模型原理</title>
    <link href="https://www.fomal.cc/posts/3c803fb8.html"/>
    <id>https://www.fomal.cc/posts/3c803fb8.html</id>
    <published>2023-10-29T13:50:19.000Z</published>
    <updated>2024-06-25T02:58:37.187Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SD模型原理"><strong>SD模型原理</strong></h2><p>SD是<a href="https://link.zhihu.com/?target=https%3A//github.com/CompVis">CompVis</a>、<a href="https://link.zhihu.com/?target=https%3A//stability.ai/">Stability AI</a>和<a href="https://link.zhihu.com/?target=https%3A//laion.ai/">LAION</a>等公司研发的一个文生图模型，它的模型和代码是开源的，而且训练数据<a href="https://link.zhihu.com/?target=https%3A//laion.ai/blog/laion-5b/">LAION-5B</a>也是开源的。SD在开源90天github仓库就收获了<strong>33K的stars</strong>，可见这个模型是多受欢迎。</p><p><img src="https://pic2.zhimg.com/80/v2-45c26a5ea3556598b5ce39348f672af5_1440w.webp" alt=""></p><p>SD是一个<strong>基于latent的扩散模型</strong>，它在UNet中引入text condition来实现基于文本生成图像。SD的核心来源于<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2112.10752">Latent Diffusion</a>这个工作，常规的扩散模型是基于pixel的生成模型，而Latent Diffusion是基于latent的生成模型，它先采用一个autoencoder将图像压缩到latent空间，然后用扩散模型来生成图像的latents，最后送入autoencoder的decoder模块就可以得到生成的图像。</p><p><img src="https://pic4.zhimg.com/80/v2-649a55e230feba6997604da9724db197_1440w.webp" alt=""></p><p><strong>基于latent的扩散模型的优势在于计算效率更高效，因为图像的latent空间要比图像pixel空间要小，这也是SD的核心优势</strong>。文生图模型往往参数量比较大，基于pixel的方法往往限于算力只生成64x64大小的图像，比如OpenAI的DALL-E2和谷歌的Imagen，然后再通过超分辨模型将图像分辨率提升至256x256和1024x1024；而基于latent的SD是在latent空间操作的，它可以直接生成256x256和512x512甚至更高分辨率的图像。</p><p>SD模型的主体结构如下图所示，主要包括三个模型：</p><ul><li><strong>autoencoder</strong>：encoder将图像压缩到latent空间，而decoder将latent解码为图像；</li><li><strong>CLIP text encoder</strong>：提取输入text的text embeddings，通过cross attention方式送入扩散模型的UNet中作为condition；</li><li><strong>UNet</strong>：扩散模型的主体，用来实现文本引导下的latent生成。</li></ul><p><img src="https://pic1.zhimg.com/80/v2-fddf45ed17a509336d1550833a257684_1440w.webp" alt=""></p><p>对于SD模型，其autoencoder模型参数大小为84M，CLIP text encoder模型大小为123M，而UNet参数大小为860M，所以<strong>SD模型的总参数量约为1B</strong>。</p><h3 id="autoencoder"><strong>autoencoder</strong></h3><p>autoencoder是一个基于encoder-decoder架构的图像压缩模型，对于一个大小为的输入图像，encoder模块将其编码为一个大小为的latent，其中为下采样率（downsampling factor）。在训练autoencoder过程中，除了采用<strong>L1重建损失</strong>外，还增加了<strong>感知损失</strong>（perceptual loss，即LPIPS，具体见论文<a href="https://link.zhihu.com/?target=https%3A//richzhang.github.io/PerceptualSimilarity/">The Unreasonable Effectiveness of Deep Features as a Perceptual Metric</a>）以及<strong>基于patch的对抗训练</strong>。辅助loss主要是为了确保重建的图像局部真实性以及避免模糊，具体损失函数见<a href="https://link.zhihu.com/?target=https%3A//github.com/CompVis/latent-diffusion/tree/main/ldm/modules/losses">latent diffusion的loss部分</a>。同时为了防止得到的latent的标准差过大，采用了两种正则化方法：第一种是<strong>KL-reg</strong>，类似VAE增加一个latent和标准正态分布的KL loss，不过这里为了保证重建效果，采用比较小的权重（～10e-6）；第二种是<strong>VQ-reg</strong>，引入一个VQ （vector quantization）layer，此时的模型可以看成是一个VQ-GAN，不过VQ层是在decoder模块中，这里VQ的codebook采样较高的维度（8192）来降低正则化对重建效果的影响。 latent diffusion论文中实验了不同参数下的autoencoder模型，如下表所示，可以看到当较小和较大时，重建效果越好（PSNR越大），这也比较符合预期，毕竟此时压缩率小。</p><p><img src="https://pic3.zhimg.com/80/v2-e4e760f8a0762f1cb7130e9d99b602d6_1440w.webp" alt=""></p><p>论文进一步将不同的autoencoder在扩散模型上进行实验，在ImageNet数据集上训练同样的步数（2M steps），其训练过程的生成质量如下所示，可以看到过小的（比如1和2）下收敛速度慢，此时图像的感知压缩率较小，扩散模型需要较长的学习；而过大的其生成质量较差，此时压缩损失过大。</p><p><img src="https://pic2.zhimg.com/80/v2-e35e58a520fa825f64e89eea4422ea89_1440w.webp" alt=""></p><p>当在4～16时，可以取得相对好的效果。SD采用基于KL-reg的autoencoder，其中下采样率，特征维度为，当输入图像为512x512大小时将得到64x64x4大小的latent。 autoencoder模型时在OpenImages数据集上基于256x256大小训练的，但是由于autoencoder的模型是全卷积结构的（基于ResnetBlock，只有模型的中间存在两个self attention层），所以它可以扩展应用在尺寸&gt;256的图像上。下面我们给出使用diffusers库来加载autoencoder模型，并使用autoencoder来实现图像的压缩和重建，代码如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> AutoencoderKL</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment">#加载模型: autoencoder可以通过SD权重指定subfolder来单独加载</span></span><br><span class="line">autoencoder = AutoencoderKL.from_pretrained(<span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span>, subfolder=<span class="string">&quot;vae&quot;</span>)</span><br><span class="line">autoencoder.to(<span class="string">&quot;cuda&quot;</span>, dtype=torch.float16)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取图像并预处理</span></span><br><span class="line">raw_image = Image.<span class="built_in">open</span>(<span class="string">&quot;boy.png&quot;</span>).convert(<span class="string">&quot;RGB&quot;</span>).resize((<span class="number">256</span>, <span class="number">256</span>))</span><br><span class="line">image = np.array(raw_image).astype(np.float32) / <span class="number">127.5</span> - <span class="number">1.0</span></span><br><span class="line">image = image[<span class="literal">None</span>].transpose(<span class="number">0</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">image = torch.from_numpy(image)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩图像为latent并重建</span></span><br><span class="line"><span class="keyword">with</span> torch.inference_mode():</span><br><span class="line">    latent = autoencoder.encode(image.to(<span class="string">&quot;cuda&quot;</span>, dtype=torch.float16)).latent_dist.sample()</span><br><span class="line">    rec_image = autoencoder.decode(latent).sample</span><br><span class="line">    rec_image = (rec_image / <span class="number">2</span> + <span class="number">0.5</span>).clamp(<span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">    rec_image = rec_image.cpu().permute(<span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>).numpy()</span><br><span class="line">    rec_image = (rec_image * <span class="number">255</span>).<span class="built_in">round</span>().astype(<span class="string">&quot;uint8&quot;</span>)</span><br><span class="line">    rec_image = Image.fromarray(rec_image[<span class="number">0</span>])</span><br><span class="line">rec_image</span><br></pre></td></tr></table></figure><p>这里我们给出了两张图片在256x256和512x512下的重建效果对比，如下所示，第一列为原始图片，第二列为512x512尺寸下的重建图，第三列为256x256尺寸下的重建图。对比可以看出，autoencoder将图片压缩到latent后再重建其实是有损的，比如会出现文字和人脸的畸变，在256x256分辨率下是比较明显的，512x512下效果会好很多。</p><p><img src="https://pic3.zhimg.com/80/v2-2f439931568ec63d03e40c1735f9264e_1440w.webp" alt=""></p><p><img src="https://pic3.zhimg.com/80/v2-cb198cc9134f4dab69ec7365b90078e6_1440w.webp" alt=""></p><p>这种有损压缩肯定是对SD的生成图像质量是有一定影响的，不过好在SD模型基本上是在512x512以上分辨率下使用的。为了改善这种畸变，stabilityai在发布SD 2.0时同时发布了两个在LAION子数据集上<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/sd-vae-ft-mse-original">精调的autoencoder</a>，注意这里只精调autoencoder的decoder部分，SD的UNet在训练过程只需要encoder部分，所以这样精调后的autoencoder可以直接用在先前训练好的UNet上（这种技巧还是比较通用的，比如谷歌的<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2206.10789">Parti</a>也是在训练好后自回归生成模型后，扩大并精调ViT-VQGAN的decoder模块来提升生成质量）。我们也可以直接在diffusers中使用这些autoencoder，比如mse版本（采用mse损失来finetune的模型）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">autoencoder = AutoencoderKL.from_pretrained(<span class="string">&quot;stabilityai/sd-vae-ft-mse/&quot;</span>)</span><br></pre></td></tr></table></figure><p>对于同样的两张图，这个mse版本的重建效果如下所示，可以看到相比原始版本的autoencoder，畸变是有一定改善的。</p><p><img src="https://pic4.zhimg.com/80/v2-ee18f2e828fd1357b2c29c2355439fcb_1440w.webp" alt=""></p><p><img src="https://pic3.zhimg.com/80/v2-818195b8ac7730ab632ae32b47f9272e_1440w.webp" alt=""></p><p>由于SD采用的autoencoder是基于KL-reg的，所以这个autoencoder在编码图像时其实得到的是一个高斯分布<a href="https://link.zhihu.com/?target=https%3A//github.com/huggingface/diffusers/blob/bbab8553224d12f7fd58b0e65b0daf899769ef0b/src/diffusers/models/vae.py%23L312">DiagonalGaussianDistribution</a>（分布的均值和标准差），然后通过调用sample方法来采样一个具体的latent（调用mode方法可以得到均值）。由于KL-reg的权重系数非常小，实际得到latent的标准差还是比较大的，latent diffusion论文中提出了一种rescaling方法：首先计算出第一个batch数据中的latent的标准差，然后采用的系数来rescale latent，这样就尽量保证latent的标准差接近1（防止扩散过程的SNR较高，影响生成效果，具体见latent diffusion论文的D1部分讨论），然后扩散模型也是应用在rescaling的latent上，在解码时只需要将生成的latent除以，然后再送入autoencoder的decoder即可。对于SD所使用的autoencoder，这个rescaling系数为0.18215。</p><h3 id="CLIP-text-encoder"><strong>CLIP text encoder</strong></h3><p>SD<strong>采用CLIP text encoder来对输入text提取text embeddings</strong>，具体的是采用目前OpenAI所开源的最大CLIP模型：<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/openai/clip-vit-large-patch14">clip-vit-large-patch14</a>，这个CLIP的text encoder是一个transformer模型（只有encoder模块）：层数为12，特征维度为768，模型参数大小是123M。对于输入text，送入CLIP text encoder后得到最后的hidden states（即最后一个transformer block得到的特征），其特征维度大小为77x768（77是token的数量），<strong>这个细粒度的text embeddings将以cross attention的方式送入UNet中</strong>。在transofmers库中，可以如下使用CLIP text encoder：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> CLIPTextModel, CLIPTokenizer</span><br><span class="line"></span><br><span class="line">text_encoder = CLIPTextModel.from_pretrained(<span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span>, subfolder=<span class="string">&quot;text_encoder&quot;</span>).to(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line"><span class="comment"># text_encoder = CLIPTextModel.from_pretrained(&quot;openai/clip-vit-large-patch14&quot;).to(&quot;cuda&quot;)</span></span><br><span class="line">tokenizer = CLIPTokenizer.from_pretrained(<span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span>, subfolder=<span class="string">&quot;tokenizer&quot;</span>)</span><br><span class="line"><span class="comment"># tokenizer = CLIPTokenizer.from_pretrained(&quot;openai/clip-vit-large-patch14&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对输入的text进行tokenize，得到对应的token ids</span></span><br><span class="line">prompt = <span class="string">&quot;a photograph of an astronaut riding a horse&quot;</span></span><br><span class="line">text_input_ids = text_tokenizer(</span><br><span class="line">    prompt,</span><br><span class="line">    padding=<span class="string">&quot;max_length&quot;</span>,</span><br><span class="line">    max_length=tokenizer.model_max_length,</span><br><span class="line">    truncation=<span class="literal">True</span>,</span><br><span class="line">    return_tensors=<span class="string">&quot;pt&quot;</span></span><br><span class="line">).input_ids</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将token ids送入text model得到77x768的特征</span></span><br><span class="line">text_embeddings = text_encoder(text_input_ids.to(<span class="string">&quot;cuda&quot;</span>))[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><p>值得注意的是，这里的tokenizer最大长度为77（CLIP训练时所采用的设置），当输入text的tokens数量超过77后，将进行截断，如果不足则进行paddings，这样将保证无论输入任何长度的文本（甚至是空文本）都得到77x768大小的特征。 在训练SD的过程中，<strong>CLIP text encoder模型是冻结的</strong>。在早期的工作中，比如OpenAI的<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2112.10741">GLIDE</a>和latent diffusion中的LDM均采用一个随机初始化的tranformer模型来提取text的特征，但是最新的工作都是采用预训练好的text model。比如谷歌的Imagen采用纯文本模型T5 encoder来提出文本特征，而SD则采用CLIP text encoder，预训练好的模型往往已经在大规模数据集上进行了训练，它们要比直接采用一个从零训练好的模型要好。</p><h3 id="UNet"><strong>UNet</strong></h3><p>SD的扩散模型是一个860M的UNet，其主要结构如下图所示（这里以输入的latent为64x64x4维度为例），其中encoder部分包括3个CrossAttnDownBlock2D模块和1个DownBlock2D模块，而decoder部分包括1个UpBlock2D模块和3个CrossAttnUpBlock2D模块，中间还有一个UNetMidBlock2DCrossAttn模块。encoder和decoder两个部分是完全对应的，中间存在skip connection。注意3个CrossAttnDownBlock2D模块最后均有一个2x的downsample操作，而DownBlock2D模块是不包含下采样的。</p><p><img src="https://pic3.zhimg.com/80/v2-2c71f809868ea14d0e2f8caa024781e2_1440w.webp" alt=""></p><p>其中CrossAttnDownBlock2D模块的主要结构如下图所示，text condition将通过CrossAttention模块嵌入进来，此时Attention的query是UNet的中间特征，而key和value则是text embeddings。 CrossAttnUpBlock2D模块和CrossAttnDownBlock2D模块是一致的，但是就是总层数为3。</p><p><img src="https://pic3.zhimg.com/80/v2-0eff7fa232e2d33aeb435132c4cd897a_1440w.webp" alt=""></p><p>SD和DDPM一样采用预测noise的方法来训练UNet，其训练损失也和DDPM一样：  这里的为text embeddings，此时的模型是一个条件扩散模型。基于diffusers库，我们可以很快实现SD的训练，其核心代码如下所示（这里参考diffusers库下examples中的<a href="https://link.zhihu.com/?target=https%3A//github.com/huggingface/diffusers/blob/main/examples/text_to_image/train_text_to_image.py">finetune代码</a>）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> AutoencoderKL, UNet2DConditionModel, DDPMScheduler</span><br><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> CLIPTextModel, CLIPTokenizer</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载autoencoder</span></span><br><span class="line">vae = AutoencoderKL.from_pretrained(<span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span>, subfolder=<span class="string">&quot;vae&quot;</span>)</span><br><span class="line"><span class="comment"># 加载text encoder</span></span><br><span class="line">text_encoder = CLIPTextModel.from_pretrained(<span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span>, subfolder=<span class="string">&quot;text_encoder&quot;</span>)</span><br><span class="line">tokenizer = CLIPTokenizer.from_pretrained(<span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span>, subfolder=<span class="string">&quot;tokenizer&quot;</span>)</span><br><span class="line"><span class="comment"># 初始化UNet</span></span><br><span class="line">unet = UNet2DConditionModel(**model_config) <span class="comment"># model_config为模型参数配置</span></span><br><span class="line"><span class="comment"># 定义scheduler</span></span><br><span class="line">noise_scheduler = DDPMScheduler(</span><br><span class="line">    beta_start=<span class="number">0.00085</span>, beta_end=<span class="number">0.012</span>, beta_schedule=<span class="string">&quot;scaled_linear&quot;</span>, num_train_timesteps=<span class="number">1000</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 冻结vae和text_encoder</span></span><br><span class="line">vae.requires_grad_(<span class="literal">False</span>)</span><br><span class="line">text_encoder.requires_grad_(<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">opt = torch.optim.AdamW(unet.parameters(), lr=<span class="number">1e-4</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> step, batch <span class="keyword">in</span> <span class="built_in">enumerate</span>(train_dataloader):</span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        <span class="comment"># 将image转到latent空间</span></span><br><span class="line">        latents = vae.encode(batch[<span class="string">&quot;image&quot;</span>]).latent_dist.sample()</span><br><span class="line">        latents = latents * vae.config.scaling_factor <span class="comment"># rescaling latents</span></span><br><span class="line">        <span class="comment"># 提取text embeddings</span></span><br><span class="line">        text_input_ids = text_tokenizer(</span><br><span class="line">            batch[<span class="string">&quot;text&quot;</span>],</span><br><span class="line">            padding=<span class="string">&quot;max_length&quot;</span>,</span><br><span class="line">            max_length=tokenizer.model_max_length,</span><br><span class="line">            truncation=<span class="literal">True</span>,</span><br><span class="line">            return_tensors=<span class="string">&quot;pt&quot;</span></span><br><span class="line">  ).input_ids</span><br><span class="line">  text_embeddings = text_encoder(text_input_ids)[<span class="number">0</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 随机采样噪音</span></span><br><span class="line">    noise = torch.randn_like(latents)</span><br><span class="line">    bsz = latents.shape[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 随机采样timestep</span></span><br><span class="line">    timesteps = torch.randint(<span class="number">0</span>, noise_scheduler.num_train_timesteps, (bsz,), device=latents.device)</span><br><span class="line">    timesteps = timesteps.long()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将noise添加到latent上，即扩散过程</span></span><br><span class="line">    noisy_latents = noise_scheduler.add_noise(latents, noise, timesteps)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 预测noise并计算loss</span></span><br><span class="line">    model_pred = unet(noisy_latents, timesteps, encoder_hidden_states=text_embeddings).sample</span><br><span class="line">    loss = F.mse_loss(model_pred.<span class="built_in">float</span>(), noise.<span class="built_in">float</span>(), reduction=<span class="string">&quot;mean&quot;</span>)</span><br><span class="line"></span><br><span class="line"> opt.step()</span><br><span class="line">    opt.zero_grad()</span><br></pre></td></tr></table></figure><p>注意的是SD的noise scheduler虽然也是采用一个1000步长的scheduler，但是不是linear的，而是scaled linear，具体的计算如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">betas = torch.linspace(beta_start**<span class="number">0.5</span>, beta_end**<span class="number">0.5</span>, num_train_timesteps, dtype=torch.float32) ** <span class="number">2</span></span><br></pre></td></tr></table></figure><p>在训练条件扩散模型时，往往会采用<strong>Classifier-Free Guidance</strong>（这里简称为CFG），所谓的CFG简单来说就是在训练条件扩散模型的同时也训练一个无条件的扩散模型，同时在采样阶段将条件控制下预测的噪音和无条件下的预测噪音组合在一起来确定最终的噪音，具体的计算公式如下所示：</p><p>这里的为<strong>guidance scale</strong>，当越大时，condition起的作用越大，即生成的图像其更和输入文本一致。CFG的具体实现非常简单，在训练过程中，我们只需要<strong>以一定的概率（比如10%）随机drop掉text</strong>即可，这里我们可以将text置为空字符串（前面说过此时依然能够提取text embeddings）。这里并没有介绍CLF背后的技术原理，感兴趣的可以阅读CFG的论文<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2207.12598">Classifier-Free Diffusion Guidance</a>以及guided diffusion的论文<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2105.05233">Diffusion Models Beat GANs on Image Synthesis</a>。<strong>CFG对于提升条件扩散模型的图像生成效果是至关重要的</strong>。</p><h3 id="训练细节"><strong>训练细节</strong></h3><p>前面我们介绍了SD的模型结构，这里我们也简单介绍一下SD的训练细节，主要包括训练数据和训练资源，这方面也是在SD的<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/runwayml/stable-diffusion-v1-5">Model Card</a>上有说明。 首先是训练数据，SD在<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/datasets/laion/laion2B-en">laion2B-en</a><strong>数据集</strong>上训练的，它是<a href="https://link.zhihu.com/?target=https%3A//laion.ai/blog/laion-5b/">laion-5b</a><strong>数据集</strong>的一个子集，更具体的说它是laion-5b中的英文（文本为英文）数据集。laion-5b数据集是从网页数据Common Crawl中筛选出来的图像-文本对数据集，它包含5.85B的图像-文本对，其中文本为英文的数据量为2.32B，这就是laion2B-en数据集。</p><p><img src="https://pic3.zhimg.com/80/v2-91d5227730b38d1c72d7858d3b67fbba_1440w.webp" alt=""></p><p>下面是laion2B-en数据集的元信息（图片width和height，以及文本长度）统计分析：其中图片的width和height均在256以上的样本量为1324M，在512以上的样本量为488M，而在1024以上的样本为76M；文本的平均长度为67。</p><p><img src="https://pic1.zhimg.com/80/v2-7bc54f633af1760a97b5af05746a74a0_1440w.webp" alt=""></p><p>laion数据集中除了图片（下载URL，图像width和height）和文本（描述文本）的元信息外，还包含以下信息：</p><ul><li>similarity：使用CLIP ViT-B/32计算出来的图像和文本余弦相似度；</li><li>pwatermark：使用一个图片<a href="https://link.zhihu.com/?target=https%3A//github.com/LAION-AI/LAION-5B-WatermarkDetection">水印检测器</a>检测的概率值，表示图片含有水印的概率；</li><li>punsafe：图片是否安全，或者图片是不是NSFW，使用<a href="https://link.zhihu.com/?target=https%3A//github.com/LAION-AI/CLIP-based-NSFW-Detector">基于CLIP的检测器</a>来估计；</li><li>AESTHETIC_SCORE：图片的美学评分（1-10），这个是后来追加的，首先选择一小部分图片数据集让人对图片的美学打分，然后基于这个标注数据集来训练一个<a href="https://link.zhihu.com/?target=https%3A//laion.ai/blog/laion-aesthetics/">打分模型</a>，并对所有样本计算估计的美学评分。</li></ul><p>上面是laion数据集的情况，下面我们来介绍SD训练数据集的具体情况，<strong>SD的训练是多阶段的</strong>（先在256x256尺寸上预训练，然后在512x512尺寸上精调），不同的阶段产生了不同的版本：</p><ul><li>SD v1.1：在laion2B-en数据集上以256x256大小训练237,000步，上面我们已经说了，laion2B-en数据集中256以上的样本量共1324M；然后在laion5B的<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/datasets/laion/laion-high-resolution">高分辨率数据集</a>以512x512尺寸训练194,000步，这里的高分辨率数据集是图像尺寸在1024x1024以上，共170M样本。</li><li>SD v1.2：以SD v1.1为初始权重，在<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/datasets/ChristophSchuhmann/improved_aesthetics_5plus">improved_aesthetics_5plus</a>数据集上以512x512尺寸训练515,000步数，这个improved_aesthetics_5plus数据集上laion2B-en数据集中美学评分在5分以上的子集（共约600M样本），注意这里过滤了含有水印的图片（pwatermark&gt;0.5)以及图片尺寸在512x512以下的样本。</li><li>SD v1.3：以SD v1.2为初始权重，在improved_aesthetics_5plus数据集上继续以512x512尺寸训练195,000步数，不过这里采用了CFG（以10%的概率随机drop掉text）。</li><li>SD v1.4：以SD v1.2为初始权重，在improved_aesthetics_5plus数据集上采用CFG以512x512尺寸训练225,000步数。</li><li>SD v1.5：以SD v1.2为初始权重，在improved_aesthetics_5plus数据集上采用CFG以512x512尺寸训练595,000步数。</li></ul><p>其实可以看到SD v1.3、SD v1.4和SD v1.5其实是以SD v1.2为起点在improved_aesthetics_5plus数据集上采用CFG训练过程中的不同checkpoints，<strong>目前最常用的版本是SD v1.4和SD v1.5</strong>。 SD的训练是<strong>采用了32台8卡的A100机器</strong>（32 x 8 x A100_40GB GPUs），所需要的训练硬件还是比较多的，但是相比语言大模型还好。单卡的训练batch size为2，并采用gradient accumulation，其中gradient accumulation steps=2，那么训练的<strong>总batch size就是32x8x2x2=2048</strong>。训练<strong>优化器采用AdamW</strong>，训练采用warmup，在初始10,000步后<strong>学习速率升到0.0001</strong>，后面保持不变。至于训练时间，文档上只说了用了150,000小时，这个应该是A100卡时，如果按照256卡A100来算的话，那么大约<strong>需要训练25天左右</strong>。</p><h3 id="模型评测"><strong>模型评测</strong></h3><p>上面介绍了模型训练细节，那么最后的问题就是模型评测了。对于文生图模型，目前常采用的定量指标是<strong>FID</strong>（Fréchet inception distance）和CLIP score，其中FID可以衡量生成图像的逼真度（image fidelity），而CLIP score评测的是生成的图像与输入文本的一致性，其中FID越低越好，而CLIP score是越大越好。当CFG的gudiance scale参数设置不同时，FID和CLIP score会发生变化，下图为不同的gudiance scale参数下，SD模型在COCO2017验证集上的评测结果，注意这里是zero-shot评测，即SD模型并没有在COCO训练数据集上精调。</p><p><img src="https://pic1.zhimg.com/80/v2-b7ef3c892c5b833191b483932c42fc1c_1440w.webp" alt=""></p><p>可以看到当gudiance scale=3时，FID最低；而当gudiance scale越大时，CLIP score越大，但是FID同时也变大。在实际应用时，往往会采用较大的gudiance scale，比如SD模型默认采用7.5，此时生成的图像和文本有较好的一致性。从不同版本的对比曲线上看，SD的采用CFG训练后三个版本其实差别并没有那么大，其中SD v1.5相对好一点，但是明显要未采用CFG训练的版本要好的多，这说明CFG训练是比较关键的。 目前在模型对比上，大家往往是比较不同模型在COCO验证集上的zero-shot FID-30K（选择30K的样本），大家往往就选择模型所能得到的最小FID来比较，下面为eDiff和GigaGAN两篇论文所报道的不同文生图模型的FID对比（由于SD并没有给出FID-30K，所以大家应该都是自己用开源SD的模型计算的，由于选择样本不同，可能结果存在差异）：</p><p><img src="https://pic1.zhimg.com/80/v2-979a3b11b99fbd854f472e8902f578a0_1440w.webp" alt=""></p><p>可以看到SD虽然FID不是最好的，但是也能达到比较低的FID（大约在8～9之间）。不过虽然学术界常采用FID来定量比较模型，但是FID有很大的局限性，它并不能很好地衡量生成图像的质量，也是因为这个原因，谷歌的Imagen引入了人工评价，先建立一个评测数据集DrawBench（包含200个不同类型的text），然后用不同的模型来生成图像，让人去评价同一个text下不同模型生成的图像，这种评测方式比较直接，但是可能也受一些主观因素的影响。总而言之，目前的评价方式都有一定的局限性，最好还是直接上手使用来比较不同的模型。</p><h2 id="SD的主要应用"><strong>SD的主要应用</strong></h2><p>下面来介绍SD的主要应用，这包括<strong>文生图</strong>，<strong>图生图</strong>以及<strong>图像inpainting</strong>。其中文生图是SD的基础功能：根据输入文本生成相应的图像，而图生图和图像inpainting是在文生图的基础上延伸出来的两个功能。</p><h3 id="文生图"><strong>文生图</strong></h3><p>根据文本生成图像这是文生图的最核心的功能，下图为SD的文生图的推理流程图：首先根据输入text用text encoder提取text embeddings，同时初始化一个随机噪音noise（latent上的，512x512图像对应的noise维度为64x64x4），然后将text embeddings和noise送入扩散模型UNet中生成去噪后的latent，最后送入autoencoder的decoder模块得到生成的图像。</p><p><img src="https://pic3.zhimg.com/80/v2-4b69474b69a10f7963cc8a6f68ede756_1440w.webp" alt=""></p><p>使用diffusers库，我们可以直接调用<code>StableDiffusionPipeline</code>来实现文生图，具体代码如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> StableDiffusionPipeline</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment"># 组合图像，生成grid</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">image_grid</span>(<span class="params">imgs, rows, cols</span>):</span><br><span class="line">    <span class="keyword">assert</span> <span class="built_in">len</span>(imgs) == rows*cols</span><br><span class="line"></span><br><span class="line">    w, h = imgs[<span class="number">0</span>].size</span><br><span class="line">    grid = Image.new(<span class="string">&#x27;RGB&#x27;</span>, size=(cols*w, rows*h))</span><br><span class="line">    grid_w, grid_h = grid.size</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i, img <span class="keyword">in</span> <span class="built_in">enumerate</span>(imgs):</span><br><span class="line">        grid.paste(img, box=(i%cols*w, i//cols*h))</span><br><span class="line">    <span class="keyword">return</span> grid</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载文生图pipeline</span></span><br><span class="line">pipe = StableDiffusionPipeline.from_pretrained(</span><br><span class="line">    <span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span>, <span class="comment"># 或者使用 SD v1.4: &quot;CompVis/stable-diffusion-v1-4&quot;</span></span><br><span class="line">    torch_dtype=torch.float16</span><br><span class="line">).to(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入text，这里text又称为prompt</span></span><br><span class="line">prompts = [</span><br><span class="line">    <span class="string">&quot;a photograph of an astronaut riding a horse&quot;</span>,</span><br><span class="line">    <span class="string">&quot;A cute otter in a rainbow whirlpool holding shells, watercolor&quot;</span>,</span><br><span class="line">    <span class="string">&quot;An avocado armchair&quot;</span>,</span><br><span class="line">    <span class="string">&quot;A white dog wearing sunglasses&quot;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">generator = torch.Generator(<span class="string">&quot;cuda&quot;</span>).manual_seed(<span class="number">42</span>) <span class="comment"># 定义随机seed，保证可重复性</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行推理</span></span><br><span class="line">images = pipe(</span><br><span class="line">    prompts,</span><br><span class="line">    height=<span class="number">512</span>,</span><br><span class="line">    width=<span class="number">512</span>,</span><br><span class="line">    num_inference_steps=<span class="number">50</span>,</span><br><span class="line">    guidance_scale=<span class="number">7.5</span>,</span><br><span class="line">    negative_prompt=<span class="literal">None</span>,</span><br><span class="line">    num_images_per_prompt=<span class="number">1</span>,</span><br><span class="line">    generator=generator</span><br><span class="line">).images</span><br><span class="line"></span><br><span class="line">grid = image_grid(images, rows=<span class="number">1</span>, cols=<span class="number">4</span>)</span><br><span class="line">grid</span><br></pre></td></tr></table></figure><p>生成的图像效果如下所示：</p><p><img src="https://pic2.zhimg.com/80/v2-e2da18f32ca57ed37f36d5099da636ad_1440w.webp" alt=""></p><p>这里可以通过指定width和height来决定生成图像的大小，前面说过SD最后是在512x512尺度上训练的，所以生成512x512尺寸效果是最好的，但是实际上SD可以生成任意尺寸的图片：一方面autoencoder支持任意尺寸的图片的编码和解码，另外一方面扩散模型UNet也是支持任意尺寸的latents生成的（UNet是卷积+attention的混合结构）。然而，生成512x512以外的图片会存在一些问题，比如生成低分辨率图像时，图像的质量大幅度下降，下图为同样的文本在256x256尺寸下的生成效果：</p><p><img src="https://pic4.zhimg.com/80/v2-17adfbcb66d31299a2c397c16066c463_1440w.webp" alt=""></p><p>如果是生成512x512以上分辨率的图像，图像质量虽然没问题，但是可能会出现重复物体以及物体被拉长的情况，下图为分别为768x512和512x768尺寸下的生成效果，可以看到部分图像存在一定的问题：</p><p><img src="https://pic1.zhimg.com/80/v2-76de42ced2d2cda89bb0aebe7086bc2c_1440w.webp" alt=""></p><p><img src="https://pic1.zhimg.com/80/v2-6259780a378b797cbb58d12471acbca8_1440w.webp" alt=""></p><p>所以虽然SD的架构上支持任意尺寸的图像生成，但训练是在固定尺寸上（512x512），生成其它尺寸图像还是会存在一定的问题。解决这个问题的办法就相对比较简单，就是采用多尺度策略训练，比如NovelAI提出采用<a href="https://link.zhihu.com/?target=https%3A//github.com/NovelAI/novelai-aspect-ratio-bucketing">Aspect Ratio Bucketing</a>策略来在二次元数据集上精调模型，这样得到的模型就很大程度上避免SD的这个问题，目前大部分开源的基于SD的精调模型往往都采用类似的多尺度策略来精调。比如我们采用开源的<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/dreamlike-art/dreamlike-diffusion-1.0">dreamlike-diffusion-1.0</a>模型（基于SD v1.5精调的），其生成的图像效果在变尺寸上就好很多：</p><p><img src="https://pic3.zhimg.com/80/v2-89b25d80d68f3e818beaa1c909a1b026_1440w.webp" alt=""></p><p><img src="https://pic1.zhimg.com/80/v2-f571223e3f3022460808f6ba072a0934_1440w.webp" alt=""></p><p>另外一个参数是<code>num_inference_steps</code>，它是指<strong>推理过程中的去噪步数或者采样步数</strong>。SD在训练过程采用的是步数为1000的noise scheduler，但是在推理时往往采用速度更快的scheduler：只需要少量的采样步数就能生成不错的图像，比如SD默认采用<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2202.09778">PNDM scheduler</a>，它只需要采样50步就可以出图。当然我们也可以换用其它类型的scheduler，比如<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2010.02502">DDIM scheduler</a>和<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2206.00927">DPM-Solver scheduler</a>。我们可以在diffusers中直接替换scheduler，比如我们想使用DDIM：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> DDIMScheduler</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意这里的clip_sample要关闭，否则生成图像存在问题，因为不能对latent进行clip</span></span><br><span class="line">pipe.scheduler = DDIMScheduler.from_config(pipe.scheduler.config, clip_sample=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p>换成DDIM后，同样的采样步数生成的图像如下所示，在部分细节上和PNDM有差异：</p><p><img src="https://pic3.zhimg.com/80/v2-88ed3ce8a9b3847c8ac90e89faee5e5a_1440w.webp" alt=""></p><p>当然<strong>采样步数越大，生成的图像质量越好，但是相应的推理时间也更久</strong>。这里我们可以试验一下不同采样步数下的生成效果，以宇航员骑马为例，下图展示了采样步数为10，20，30，50，70和100时的生成图像，可以看到采样步数增加后，图像生成质量是有一定的提升的，当采样步数为30时就能生成相对稳定的图像。</p><p><img src="https://pic4.zhimg.com/80/v2-ef712b5422e00d7497ec9afb9822359f_1440w.webp" alt=""></p><p>我们要讨论的第三个参数是<code>guidance_scale</code>，前面说过当CFG的<code>guidance_scale</code>越大时，生成的图像应该会和输入文本更一致，这里我们同样以宇航员骑马为例来测试不同guidance_scale下的图像生成效果。下图为guidance_scale为1，3，5，7，9和11下生成的图像对比，可以看到当guidance_scale较低时生成的图像效果是比较差的，<strong>当guidance_scale在7～9时，生成的图像效果是可以的</strong>，当采用更大的guidance_scale比如11，图像的色彩过饱和而看起来不自然，所以SD<strong>默认采用的guidance_scale为7.5</strong>。</p><p><img src="https://pic4.zhimg.com/80/v2-8337dbec38f8c3e7f684cf49ed64cecf_1440w.webp" alt=""></p><p>过大的guidance_scale之所以出现问题，主要是由于训练和测试的不一致，过大的guidance_scale会导致生成的样本超出范围。谷歌的Imagen论文提出一种dynamic thresholding策略来解决这个问题，所谓的dynamic thresholding是相对于原来的static thresholding，static thresholding策略是直接将生成的样本clip到[-1, 1]范围内（Imagen是基于pixel的扩散模型，这里是将图像像素值归一化到-1到1之间），但是会在过大的guidance_scale时产生很多的饱含像素点。而dynamic thresholding策略是先计算样本在某个百分位下（比如99%）的像素绝对值，然后如果它超过1时就采用来进行clip，这样就可以大大减少过饱和的像素。两种策略的具体实现代码如下所示：</p><p><img src="https://pic2.zhimg.com/80/v2-ab0405eb00a79be6eb953227e565cfcd_1440w.webp" alt=""></p><p>dynamic thresholding策略对于Imagen是比较关键的，它使得Imagen可以采用较大的guidance_scale来生成更自然的图像。下图为两种thresholding策略下生成图像的对比：</p><p><img src="https://pic1.zhimg.com/80/v2-942d6e58a310f24136134fc89f6eac0c_1440w.webp" alt=""></p><p>虽然SD是基于latent的扩散模型，但依然可以采用类似的dynamic thresholding策略，感兴趣的可以参考目前的一个开源实现：<a href="https://link.zhihu.com/?target=https%3A//github.com/mcmonkeyprojects/sd-dynamic-thresholding">sd-dynamic-thresholding</a>，使用dynamic thresholding策略后，SD可以在较大的guidance_scale下生成相对自然的图像。</p><p><img src="https://pic2.zhimg.com/80/v2-b097ffe7c5bcb131341b9b6a6b3241e9_1440w.webp" alt=""></p><p>另外一个比较容易忽略的参数是<code>negative_prompt</code>，这个参数和CFG有关，前面说过，SD采用了CFG来提升生成图像的质量。使用CFG，去噪过程的噪音预测不仅仅依赖条件扩散模型，也依赖无条件扩散模型：  这里的<code>negative_prompt</code>便是无条件扩散模型的text输入，前面说过训练过程中我们将text置为空字符串来实现无条件扩散模型，所以这里：<code>negative_prompt = None = &quot;&quot;</code>。但是有时候我们可以<strong>使用不为空的negative_prompt来避免模型生成的图像包含不想要的东西</strong>，因为从上述公式可以看到这里的无条件扩散模型是我们想远离的部分。下面我们来举几个具体的例子，首先来看生成人物图像的一个例子，这里的输入文本为&quot;a portrait of a beautiful blonde woman&quot;，其生成的图像如下所示：</p><p><img src="https://pic1.zhimg.com/80/v2-477a9a38dfe2ed22e37d39a8021108ac_1440w.webp" alt=""></p><p>可以看到生成的图像效果并不好，比如出现一些脸部的畸变，但是我们可以设置negative_prompt来提升生成效果，这里我们将negative_prompt设置为&quot;cropped, lowres, poorly drawn face, out of frame, poorly drawn hands, blurry&quot;，这些描述都是负面的。改变negative_prompt后，生成的图像效果有一个明显的提升：</p><p><img src="https://pic1.zhimg.com/80/v2-40c14e5aa7d107dec744d8581904db9c_1440w.webp" alt=""></p><p>第二个例子是一个建筑物，这里的输入文本为&quot;A Hyperrealistic photograph of German architectural modern home&quot;，默认图像生成效果如下所示：</p><p><img src="https://pic2.zhimg.com/80/v2-3904adb4555d7461331f9c2f7e600771_1440w.webp" alt=""></p><p>虽然生成的图像效果不错，但是如果只想要一个干净的建筑物，而不想背景中含有树木和草地等，此时我们可以通过设置negative prompt来达到这种效果。这里将negative prompt设为&quot;trees, bushes, leaves, greenery&quot;，其生成的建筑物就干净了很多：</p><p><img src="https://pic3.zhimg.com/80/v2-9cf023a14899f7b60d3edeb360a45616_1440w.webp" alt=""></p><p>可以看到合理使用negative prompt能够帮助我们去除不想要的东西来提升图像生成效果。 一般情况下，输入的text或者prompt我们称之为“<strong>正向提示词</strong>”，而negative prompt称之为“<strong>反向提示词</strong>”，想要生成的好的图像，不仅要选择好的正向提示词，也需要好的反向提示词，这和文本生成模型也比较类似：都需要好的prompt。这里也举一个对正向prompt优化的例子（这个例子来源于微软的工作<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2212.09611">Optimizing Prompts for Text-to-Image Generation</a>），这里的原始prompt为&quot;A rabbit is wearing a space suit&quot;，可以看到直接生成的效果其实是不尽人意的：</p><p><img src="https://pic2.zhimg.com/80/v2-04235db0adbeb2e5f4edab3ded4d5c75_1440w.webp" alt=""></p><p>但是如果我们将prompt改为&quot;A rabbit is wearing a space suit, digital Art, Greg rutkowski, Trending cinematographic artstation&quot;，其生成的效果就大大提升：</p><p><img src="https://pic3.zhimg.com/80/v2-74b0506d89da4ca89e8be8e0b5bf57a2_1440w.webp" alt=""></p><p>这里我们其实只是在原有的prompt基础加上了一些描述词，有时候我们称之为“<strong>魔咒</strong>”，不同的模型可能会有不同的魔咒。 上述我们讨论了SD的文生图的主要参数，这里简单总结一下：</p><ul><li>SD默认生成512x512大小的图像，但实际上可以生成其它分辨率的图像，但是可能会出现不协调，如果采用多尺度策略训练，会改善这种情况；</li><li>采用快速的noise scheduler，SD在去噪步数为30～50步时就能生成稳定的图像；</li><li>SD的guidance_scale设置为7～9是比较稳定的，过小和过大都会出现图像质量下降，实际使用中可以根据具体情况灵活调节；</li><li>可以使用negative prompt来去除不想要的东西来改善图像生成效果；</li><li>好的prompt对图像生成效果是至关重要的。</li></ul><p>上边我们介绍了如何使用SD进行文生图以及一些主要参数，在最后我们也给出文生图这个pipeline的内部流程代码，如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> AutoencoderKL, UNet2DConditionModel, DDIMScheduler</span><br><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> CLIPTextModel, CLIPTokenizer</span><br><span class="line"><span class="keyword">from</span> tqdm.auto <span class="keyword">import</span> tqdm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">model_id = <span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span></span><br><span class="line"><span class="comment"># 1. 加载autoencoder</span></span><br><span class="line">vae = AutoencoderKL.from_pretrained(model_id, subfolder=<span class="string">&quot;vae&quot;</span>)</span><br><span class="line"><span class="comment"># 2. 加载tokenizer和text encoder </span></span><br><span class="line">tokenizer = CLIPTokenizer.from_pretrained(model_id, subfolder=<span class="string">&quot;tokenizer&quot;</span>)</span><br><span class="line">text_encoder = CLIPTextModel.from_pretrained(model_id, subfolder=<span class="string">&quot;text_encoder&quot;</span>)</span><br><span class="line"><span class="comment"># 3. 加载扩散模型UNet</span></span><br><span class="line">unet = UNet2DConditionModel.from_pretrained(model_id, subfolder=<span class="string">&quot;unet&quot;</span>)</span><br><span class="line"><span class="comment"># 4. 定义noise scheduler</span></span><br><span class="line">noise_scheduler = DDIMScheduler(</span><br><span class="line">    num_train_timesteps=<span class="number">1000</span>,</span><br><span class="line">    beta_start=<span class="number">0.00085</span>,</span><br><span class="line">    beta_end=<span class="number">0.012</span>,</span><br><span class="line">    beta_schedule=<span class="string">&quot;scaled_linear&quot;</span>,</span><br><span class="line">    clip_sample=<span class="literal">False</span>, <span class="comment"># don&#x27;t clip sample, the x0 in stable diffusion not in range [-1, 1]</span></span><br><span class="line">    set_alpha_to_one=<span class="literal">False</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将模型复制到GPU上</span></span><br><span class="line">device = <span class="string">&quot;cuda&quot;</span></span><br><span class="line">vae.to(device, dtype=torch.float16)</span><br><span class="line">text_encoder.to(device, dtype=torch.float16)</span><br><span class="line">unet = unet.to(device, dtype=torch.float16)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义参数</span></span><br><span class="line">prompt = [</span><br><span class="line">    <span class="string">&quot;A dragon fruit wearing karate belt in the snow&quot;</span>,</span><br><span class="line">    <span class="string">&quot;A small cactus wearing a straw hat and neon sunglasses in the Sahara desert&quot;</span>,</span><br><span class="line">    <span class="string">&quot;A photo of a raccoon wearing an astronaut helmet, looking out of the window at night&quot;</span>,</span><br><span class="line">    <span class="string">&quot;A cute otter in a rainbow whirlpool holding shells, watercolor&quot;</span></span><br><span class="line">]</span><br><span class="line">height = <span class="number">512</span></span><br><span class="line">width = <span class="number">512</span></span><br><span class="line">num_inference_steps = <span class="number">50</span></span><br><span class="line">guidance_scale = <span class="number">7.5</span></span><br><span class="line">negative_prompt = <span class="string">&quot;&quot;</span></span><br><span class="line">batch_size = <span class="built_in">len</span>(prompt)</span><br><span class="line"><span class="comment"># 随机种子</span></span><br><span class="line">generator = torch.Generator(device).manual_seed(<span class="number">2023</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> torch.no_grad():</span><br><span class="line"> <span class="comment"># 获取text_embeddings</span></span><br><span class="line"> text_input = tokenizer(prompt, padding=<span class="string">&quot;max_length&quot;</span>, max_length=tokenizer.model_max_length, truncation=<span class="literal">True</span>, return_tensors=<span class="string">&quot;pt&quot;</span>)</span><br><span class="line">    text_embeddings = text_encoder(text_input.input_ids.to(device))[<span class="number">0</span>]</span><br><span class="line"> <span class="comment"># 获取unconditional text embeddings</span></span><br><span class="line"> max_length = text_input.input_ids.shape[-<span class="number">1</span>]</span><br><span class="line"> uncond_input = tokenizer(</span><br><span class="line">     [negative_prompt] * batch_size, padding=<span class="string">&quot;max_length&quot;</span>, max_length=max_length, return_tensors=<span class="string">&quot;pt&quot;</span></span><br><span class="line"> )</span><br><span class="line">      uncond_embeddings = text_encoder(uncond_input.input_ids.to(device))[<span class="number">0</span>]</span><br><span class="line"> <span class="comment"># 拼接为batch，方便并行计算</span></span><br><span class="line"> text_embeddings = torch.cat([uncond_embeddings, text_embeddings])</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 生成latents的初始噪音</span></span><br><span class="line"> latents = torch.randn(</span><br><span class="line">     (batch_size, unet.in_channels, height // <span class="number">8</span>, width // <span class="number">8</span>),</span><br><span class="line">     generator=generator, device=device</span><br><span class="line"> )</span><br><span class="line"> latents = latents.to(device, dtype=torch.float16)</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 设置采样步数</span></span><br><span class="line"> noise_scheduler.set_timesteps(num_inference_steps, device=device)</span><br><span class="line"></span><br><span class="line"> <span class="comment"># scale the initial noise by the standard deviation required by the scheduler</span></span><br><span class="line"> latents = latents * noise_scheduler.init_noise_sigma <span class="comment"># for DDIM, init_noise_sigma = 1.0</span></span><br><span class="line"></span><br><span class="line"> timesteps_tensor = noise_scheduler.timesteps</span><br><span class="line"></span><br><span class="line"> <span class="comment"># Do denoise steps</span></span><br><span class="line"> <span class="keyword">for</span> t <span class="keyword">in</span> tqdm(timesteps_tensor):</span><br><span class="line">     <span class="comment"># 这里latens扩展2份，是为了同时计算unconditional prediction</span></span><br><span class="line">     latent_model_input = torch.cat([latents] * <span class="number">2</span>)</span><br><span class="line">     latent_model_input = noise_scheduler.scale_model_input(latent_model_input, t) <span class="comment"># for DDIM, do nothing</span></span><br><span class="line"></span><br><span class="line">     <span class="comment"># 使用UNet预测噪音</span></span><br><span class="line">        noise_pred = unet(latent_model_input, t, encoder_hidden_states=text_embeddings).sample</span><br><span class="line"></span><br><span class="line">     <span class="comment"># 执行CFG</span></span><br><span class="line">     noise_pred_uncond, noise_pred_text = noise_pred.chunk(<span class="number">2</span>)</span><br><span class="line">     noise_pred = noise_pred_uncond + guidance_scale * (noise_pred_text - noise_pred_uncond)</span><br><span class="line"></span><br><span class="line">     <span class="comment"># 计算上一步的noisy latents：x_t -&gt; x_t-1</span></span><br><span class="line">     latents = noise_scheduler.step(noise_pred, t, latents).prev_sample</span><br><span class="line">    </span><br><span class="line"> <span class="comment"># 注意要对latents进行scale</span></span><br><span class="line"> latents = <span class="number">1</span> / <span class="number">0.18215</span> * latents</span><br><span class="line"> <span class="comment"># 使用vae解码得到图像</span></span><br><span class="line">    image = vae.decode(latents).sample</span><br></pre></td></tr></table></figure><h3 id="图生图"><strong>图生图</strong></h3><p><strong>图生图（image2image）是对文生图功能的一个扩展</strong>，这个功能来源于<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2108.01073">SDEdit</a>这个工作，其核心思路也非常简单：给定一个笔画的色块图像，可以先给它加一定的高斯噪音（执行扩散过程）得到噪音图像，然后基于扩散模型对这个噪音图像进行去噪，就可以生成新的图像，但是这个图像在结构和布局和输入图像基本一致。</p><p><img src="https://pic4.zhimg.com/80/v2-88ea5b0999db0f14b270847ab12610b3_1440w.webp" alt=""></p><p>对于SD来说，图生图的流程图如下所示，相比文生图流程来说，这里的初始latent不再是一个随机噪音，而是由初始图像经过autoencoder编码之后的latent加高斯噪音得到，这里的加噪过程就是扩散过程。要注意的是，去噪过程的步数要和加噪过程的步数一致，就是说你加了多少噪音，就应该去掉多少噪音，这样才能生成想要的无噪音图像。</p><p><img src="https://pic4.zhimg.com/80/v2-1f760753b2577060a67963f6532634cb_1440w.webp" alt=""></p><p>在diffusers中，我们可以使用<code>StableDiffusionImg2ImgPipeline</code>来实现文生图，具体代码如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> StableDiffusionImg2ImgPipeline</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载图生图pipeline</span></span><br><span class="line">model_id = <span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span></span><br><span class="line">pipe = StableDiffusionImg2ImgPipeline.from_pretrained(model_id, torch_dtype=torch.float16).to(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取初始图片</span></span><br><span class="line">init_image = Image.<span class="built_in">open</span>(<span class="string">&quot;init_image.png&quot;</span>).convert(<span class="string">&quot;RGB&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推理</span></span><br><span class="line">prompt = <span class="string">&quot;A fantasy landscape, trending on artstation&quot;</span></span><br><span class="line">generator = torch.Generator(device=<span class="string">&quot;cuda&quot;</span>).manual_seed(<span class="number">2023</span>)</span><br><span class="line"></span><br><span class="line">image = pipe(</span><br><span class="line">    prompt=prompt,</span><br><span class="line">    image=init_image,</span><br><span class="line">    strength=<span class="number">0.8</span>,</span><br><span class="line">    guidance_scale=<span class="number">7.5</span>,</span><br><span class="line">    generator=generator</span><br><span class="line">).images[<span class="number">0</span>]</span><br><span class="line">image</span><br></pre></td></tr></table></figure><p>相比文生图的pipeline，图生图的pipeline还多了一个参数<code>strength</code>，这个参数介于0-1之间，表示对输入图片加噪音的程度，这个值越大加的噪音越多，对原始图片的破坏也就越大，当strength=1时，其实就变成了一个随机噪音，此时就相当于纯粹的文生图pipeline了。下面展示了一个具体的实例，这里的第一张图为输入的初始图片，它是一个笔画的色块，我们可以通过图生图将它生成一幅具体的图像，其中第2张图和第3张图的strength分别是0.5和0.8，可以看到当strength=0.5时，生成的图像和原图比较一致，但是就比较简单了，当strength=0.8时，生成的图像偏离原图更多，但是图像的质感有一个明显的提升。</p><p><img src="https://pic3.zhimg.com/80/v2-4e0affea8868b71ca483fc0a4c324b26_1440w.webp" alt=""></p><p>图生图这个功能一个更广泛的应用是在风格转换上，比如给定一张人像，想生成动漫风格的图像。这里我们可以使用动漫风格的开源模型<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/andite/anything-v4.0">anything-v4.0</a>，它是基于SD v1.5在动漫风格数据集上finetune的，使用它可以更好地利用图生图将人物动漫化。下面的第1张为输入人物图像，采用的prompt为&quot;masterpiece, best quality, 1girl, red hair, medium hair, green eyes&quot;，后面的图像是strength分别为0.3-0.9下生成的图像。可以看到在不同的strength下图像有不同的生成效果，其中strength=0.6时我觉得效果是最好的。</p><p><img src="https://pic1.zhimg.com/80/v2-9ff42eb6049882d71ff76c97ce7a8a80_1440w.webp" alt=""></p><p>总结来看，<strong>图生图其实核心也是依赖了文生图的能力，其中strength这个参数需要灵活调节来得到满意的图像</strong>。在最后，我们也给出图生图pipeline的内部主要代码，如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> PIL</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> AutoencoderKL, UNet2DConditionModel, DDIMScheduler</span><br><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> CLIPTextModel, CLIPTokenizer</span><br><span class="line"><span class="keyword">from</span> tqdm.auto <span class="keyword">import</span> tqdm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">model_id = <span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span></span><br><span class="line"><span class="comment"># 1. 加载autoencoder</span></span><br><span class="line">vae = AutoencoderKL.from_pretrained(model_id, subfolder=<span class="string">&quot;vae&quot;</span>)</span><br><span class="line"><span class="comment"># 2. 加载tokenizer和text encoder </span></span><br><span class="line">tokenizer = CLIPTokenizer.from_pretrained(model_id, subfolder=<span class="string">&quot;tokenizer&quot;</span>)</span><br><span class="line">text_encoder = CLIPTextModel.from_pretrained(model_id, subfolder=<span class="string">&quot;text_encoder&quot;</span>)</span><br><span class="line"><span class="comment"># 3. 加载扩散模型UNet</span></span><br><span class="line">unet = UNet2DConditionModel.from_pretrained(model_id, subfolder=<span class="string">&quot;unet&quot;</span>)</span><br><span class="line"><span class="comment"># 4. 定义noise scheduler</span></span><br><span class="line">noise_scheduler = DDIMScheduler(</span><br><span class="line">    num_train_timesteps=<span class="number">1000</span>,</span><br><span class="line">    beta_start=<span class="number">0.00085</span>,</span><br><span class="line">    beta_end=<span class="number">0.012</span>,</span><br><span class="line">    beta_schedule=<span class="string">&quot;scaled_linear&quot;</span>,</span><br><span class="line">    clip_sample=<span class="literal">False</span>, <span class="comment"># don&#x27;t clip sample, the x0 in stable diffusion not in range [-1, 1]</span></span><br><span class="line">    set_alpha_to_one=<span class="literal">False</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将模型复制到GPU上</span></span><br><span class="line">device = <span class="string">&quot;cuda&quot;</span></span><br><span class="line">vae.to(device, dtype=torch.float16)</span><br><span class="line">text_encoder.to(device, dtype=torch.float16)</span><br><span class="line">unet = unet.to(device, dtype=torch.float16)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 预处理init_image</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">preprocess</span>(<span class="params">image</span>):</span><br><span class="line">    w, h = image.size</span><br><span class="line">    w, h = <span class="built_in">map</span>(<span class="keyword">lambda</span> x: x - x % <span class="number">32</span>, (w, h))  <span class="comment"># resize to integer multiple of 32</span></span><br><span class="line">    image = image.resize((w, h), resample=PIL.Image.LANCZOS)</span><br><span class="line">    image = np.array(image).astype(np.float32) / <span class="number">255.0</span></span><br><span class="line">    image = image[<span class="literal">None</span>].transpose(<span class="number">0</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">    image = torch.from_numpy(image)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2.0</span> * image - <span class="number">1.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数设置</span></span><br><span class="line">prompt = [<span class="string">&quot;A fantasy landscape, trending on artstation&quot;</span>]</span><br><span class="line">num_inference_steps = <span class="number">50</span></span><br><span class="line">guidance_scale = <span class="number">7.5</span></span><br><span class="line">strength = <span class="number">0.8</span></span><br><span class="line">batch_size = <span class="number">1</span></span><br><span class="line">negative_prompt = <span class="string">&quot;&quot;</span></span><br><span class="line">generator = torch.Generator(device).manual_seed(<span class="number">2023</span>)</span><br><span class="line"></span><br><span class="line">init_image = PIL.Image.<span class="built_in">open</span>(<span class="string">&quot;init_image.png&quot;</span>).convert(<span class="string">&quot;RGB&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> torch.no_grad():</span><br><span class="line"> <span class="comment"># 获取prompt的text_embeddings</span></span><br><span class="line"> text_input = tokenizer(prompt, padding=<span class="string">&quot;max_length&quot;</span>, max_length=tokenizer.model_max_length, truncation=<span class="literal">True</span>, return_tensors=<span class="string">&quot;pt&quot;</span>)</span><br><span class="line">    text_embeddings = text_encoder(text_input.input_ids.to(device))[<span class="number">0</span>]</span><br><span class="line"> <span class="comment"># 获取unconditional text embeddings</span></span><br><span class="line"> max_length = text_input.input_ids.shape[-<span class="number">1</span>]</span><br><span class="line"> uncond_input = tokenizer(</span><br><span class="line">     [negative_prompt] * batch_size, padding=<span class="string">&quot;max_length&quot;</span>, max_length=max_length, return_tensors=<span class="string">&quot;pt&quot;</span></span><br><span class="line"> )</span><br><span class="line">      uncond_embeddings = text_encoder(uncond_input.input_ids.to(device))[<span class="number">0</span>]</span><br><span class="line"> <span class="comment"># 拼接batch</span></span><br><span class="line"> text_embeddings = torch.cat([uncond_embeddings, text_embeddings])</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 设置采样步数</span></span><br><span class="line"> noise_scheduler.set_timesteps(num_inference_steps, device=device)</span><br><span class="line"> <span class="comment"># 根据strength计算timesteps</span></span><br><span class="line"> init_timestep = <span class="built_in">min</span>(<span class="built_in">int</span>(num_inference_steps * strength), num_inference_steps)</span><br><span class="line"> t_start = <span class="built_in">max</span>(num_inference_steps - init_timestep, <span class="number">0</span>)</span><br><span class="line"> timesteps = noise_scheduler.timesteps[t_start:]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment"># 预处理init_image</span></span><br><span class="line"> init_input = preprocess(init_image)</span><br><span class="line">    init_latents = vae.encode(init_input.to(device, dtype=torch.float16)).latent_dist.sample(generator)</span><br><span class="line">    init_latents = <span class="number">0.18215</span> * init_latents</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 给init_latents加噪音</span></span><br><span class="line"> noise = torch.randn(init_latents.shape, generator=generator, device=device, dtype=init_latents.dtype)</span><br><span class="line"> init_latents = noise_scheduler.add_noise(init_latents, noise, timesteps[:<span class="number">1</span>])</span><br><span class="line"> latents = init_latents <span class="comment"># 作为初始latents</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment"># Do denoise steps</span></span><br><span class="line"> <span class="keyword">for</span> t <span class="keyword">in</span> tqdm(timesteps):</span><br><span class="line">     <span class="comment"># 这里latens扩展2份，是为了同时计算unconditional prediction</span></span><br><span class="line">     latent_model_input = torch.cat([latents] * <span class="number">2</span>)</span><br><span class="line">     latent_model_input = noise_scheduler.scale_model_input(latent_model_input, t) <span class="comment"># for DDIM, do nothing</span></span><br><span class="line"></span><br><span class="line">     <span class="comment"># 预测噪音</span></span><br><span class="line">        noise_pred = unet(latent_model_input, t, encoder_hidden_states=text_embeddings).sample</span><br><span class="line"></span><br><span class="line">     <span class="comment"># CFG</span></span><br><span class="line">     noise_pred_uncond, noise_pred_text = noise_pred.chunk(<span class="number">2</span>)</span><br><span class="line">     noise_pred = noise_pred_uncond + guidance_scale * (noise_pred_text - noise_pred_uncond)</span><br><span class="line"></span><br><span class="line">     <span class="comment"># 计算上一步的noisy latents：x_t -&gt; x_t-1</span></span><br><span class="line">     latents = noise_scheduler.step(noise_pred, t, latents).prev_sample</span><br><span class="line">    </span><br><span class="line"> <span class="comment"># 注意要对latents进行scale</span></span><br><span class="line"> latents = <span class="number">1</span> / <span class="number">0.18215</span> * latents</span><br><span class="line">    <span class="comment"># 解码</span></span><br><span class="line">    image = vae.decode(latents).sample</span><br></pre></td></tr></table></figure><h3 id="图像inpainting"><strong>图像inpainting</strong></h3><p>最后我们要介绍的一项功能是图像inpainting，它和图生图一样也是文生图功能的一个扩展。SD的图像inpainting不是用在图像修复上，而是主要用在<strong>图像编辑</strong>上：给定一个输入图像和想要编辑的区域mask，我们想通过文生图来编辑mask区域的内容。SD的图像inpainting原理可以参考论文<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2206.02779">Blended Latent Diffusion</a>，其主要原理图如下所示：</p><p><img src="https://pic4.zhimg.com/80/v2-927c1583cfcb13dfab39f9fcda1ab96b_1440w.webp" alt=""></p><p>它和图生图一样：首先将输入图像通过autoencoder编码为latent，然后加入一定的高斯噪音生成noisy latent，再进行去噪生成图像，但是这里为了保证mask以外的区域不发生变化，在去噪过程的每一步，都将扩散模型预测的noisy latent用真实图像同level的nosiy latent替换。 在diffusers中，使用<code>StableDiffusionInpaintPipelineLegacy</code>可以实现文本引导下的图像inpainting，具体代码如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> StableDiffusionInpaintPipelineLegacy</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载inpainting pipeline</span></span><br><span class="line">model_id = <span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span></span><br><span class="line">pipe = StableDiffusionInpaintPipelineLegacy.from_pretrained(model_id, torch_dtype=torch.float16).to(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取输入图像和输入mask</span></span><br><span class="line">input_image = Image.<span class="built_in">open</span>(<span class="string">&quot;overture-creations-5sI6fQgYIuo.png&quot;</span>).resize((<span class="number">512</span>, <span class="number">512</span>))</span><br><span class="line">input_mask = Image.<span class="built_in">open</span>(<span class="string">&quot;overture-creations-5sI6fQgYIuo_mask.png&quot;</span>).resize((<span class="number">512</span>, <span class="number">512</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行推理</span></span><br><span class="line">prompt = [<span class="string">&quot;a mecha robot sitting on a bench&quot;</span>, <span class="string">&quot;a cat sitting on a bench&quot;</span>]</span><br><span class="line">generator = torch.Generator(<span class="string">&quot;cuda&quot;</span>).manual_seed(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> torch.autocast(<span class="string">&quot;cuda&quot;</span>):</span><br><span class="line">    images = pipe(</span><br><span class="line">        prompt=prompt,</span><br><span class="line">        image=input_image,</span><br><span class="line">        mask_image=input_mask,</span><br><span class="line">        num_inference_steps=<span class="number">50</span>,</span><br><span class="line">        strength=<span class="number">0.75</span>,</span><br><span class="line">        guidance_scale=<span class="number">7.5</span>,</span><br><span class="line">        num_images_per_prompt=<span class="number">1</span>,</span><br><span class="line">        generator=generator,</span><br><span class="line">    ).images</span><br></pre></td></tr></table></figure><p>下面是一个具体的生成效果，这里我们将输入图像的dog换成了mecha robot或者cat，从而实现了图像编辑。</p><p><img src="https://pic1.zhimg.com/80/v2-d46397655ae48aa691ec55b4c8e8ba98_1440w.webp" alt=""></p><p>要注意的是这里的参数guidance_scale也和图生图一样比较重要，要生成好的图像，需要选择合适的guidance_scale。如果guidance_scale=0.5时，生成的图像由于过于受到原图干扰而产生一些不协调，如下所示：</p><p><img src="https://pic3.zhimg.com/80/v2-ec7dc58bc0ea6fe71e68559eda72acae_1440w.webp" alt=""></p><p>合适的prompt也比较重要，比如如果我们去掉prompt中的&quot;sitting on a bench&quot;，那么编辑的图像效果也会出现不协调：</p><p><img src="https://pic1.zhimg.com/80/v2-6e559a47524be82c50c5f00b502bc204_1440w.webp" alt=""></p><p>无论是上面的图生图还是这里的图像inpainting，我们其实并没有去finetune SD模型，只是扩展了它的能力，但是这两样功能就需要精确调整参数才能得到满意的生成效果。 这里，我们也给出<code>StableDiffusionInpaintPipelineLegacy</code>这个pipeline内部的核心代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> PIL</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> AutoencoderKL, UNet2DConditionModel, DDIMScheduler</span><br><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> CLIPTextModel, CLIPTokenizer</span><br><span class="line"><span class="keyword">from</span> tqdm.auto <span class="keyword">import</span> tqdm</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">preprocess_mask</span>(<span class="params">mask</span>):</span><br><span class="line">    mask = mask.convert(<span class="string">&quot;L&quot;</span>)</span><br><span class="line">    w, h = mask.size</span><br><span class="line">    w, h = <span class="built_in">map</span>(<span class="keyword">lambda</span> x: x - x % <span class="number">32</span>, (w, h))  <span class="comment"># resize to integer multiple of 32</span></span><br><span class="line">    mask = mask.resize((w // <span class="number">8</span>, h // <span class="number">8</span>), resample=PIL.Image.NEAREST)</span><br><span class="line">    mask = np.array(mask).astype(np.float32) / <span class="number">255.0</span></span><br><span class="line">    mask = np.tile(mask, (<span class="number">4</span>, <span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">    mask = mask[<span class="literal">None</span>].transpose(<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)  <span class="comment"># what does this step do?</span></span><br><span class="line">    mask = <span class="number">1</span> - mask  <span class="comment"># repaint white, keep black</span></span><br><span class="line">    mask = torch.from_numpy(mask)</span><br><span class="line">    <span class="keyword">return</span> mask</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">preprocess</span>(<span class="params">image</span>):</span><br><span class="line">    w, h = image.size</span><br><span class="line">    w, h = <span class="built_in">map</span>(<span class="keyword">lambda</span> x: x - x % <span class="number">32</span>, (w, h))  <span class="comment"># resize to integer multiple of 32</span></span><br><span class="line">    image = image.resize((w, h), resample=PIL.Image.LANCZOS)</span><br><span class="line">    image = np.array(image).astype(np.float32) / <span class="number">255.0</span></span><br><span class="line">    image = image[<span class="literal">None</span>].transpose(<span class="number">0</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">    image = torch.from_numpy(image)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2.0</span> * image - <span class="number">1.0</span></span><br><span class="line"></span><br><span class="line">model_id = <span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span></span><br><span class="line"><span class="comment"># 1. 加载autoencoder</span></span><br><span class="line">vae = AutoencoderKL.from_pretrained(model_id, subfolder=<span class="string">&quot;vae&quot;</span>)</span><br><span class="line"><span class="comment"># 2. 加载tokenizer和text encoder </span></span><br><span class="line">tokenizer = CLIPTokenizer.from_pretrained(model_id, subfolder=<span class="string">&quot;tokenizer&quot;</span>)</span><br><span class="line">text_encoder = CLIPTextModel.from_pretrained(model_id, subfolder=<span class="string">&quot;text_encoder&quot;</span>)</span><br><span class="line"><span class="comment"># 3. 加载扩散模型UNet</span></span><br><span class="line">unet = UNet2DConditionModel.from_pretrained(model_id, subfolder=<span class="string">&quot;unet&quot;</span>)</span><br><span class="line"><span class="comment"># 4. 定义noise scheduler</span></span><br><span class="line">noise_scheduler = DDIMScheduler(</span><br><span class="line">    num_train_timesteps=<span class="number">1000</span>,</span><br><span class="line">    beta_start=<span class="number">0.00085</span>,</span><br><span class="line">    beta_end=<span class="number">0.012</span>,</span><br><span class="line">    beta_schedule=<span class="string">&quot;scaled_linear&quot;</span>,</span><br><span class="line">    clip_sample=<span class="literal">False</span>, <span class="comment"># don&#x27;t clip sample, the x0 in stable diffusion not in range [-1, 1]</span></span><br><span class="line">    set_alpha_to_one=<span class="literal">False</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将模型复制到GPU上</span></span><br><span class="line">device = <span class="string">&quot;cuda&quot;</span></span><br><span class="line">vae.to(device, dtype=torch.float16)</span><br><span class="line">text_encoder.to(device, dtype=torch.float16)</span><br><span class="line">unet = unet.to(device, dtype=torch.float16)</span><br><span class="line"></span><br><span class="line">prompt = <span class="string">&quot;a mecha robot sitting on a bench&quot;</span></span><br><span class="line">strength = <span class="number">0.75</span></span><br><span class="line">guidance_scale = <span class="number">7.5</span></span><br><span class="line">batch_size = <span class="number">1</span></span><br><span class="line">num_inference_steps = <span class="number">50</span></span><br><span class="line">negative_prompt = <span class="string">&quot;&quot;</span></span><br><span class="line">generator = torch.Generator(device).manual_seed(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> torch.no_grad():</span><br><span class="line">    <span class="comment"># 获取prompt的text_embeddings</span></span><br><span class="line">    text_input = tokenizer(prompt, padding=<span class="string">&quot;max_length&quot;</span>, max_length=tokenizer.model_max_length, truncation=<span class="literal">True</span>, return_tensors=<span class="string">&quot;pt&quot;</span>)</span><br><span class="line">    text_embeddings = text_encoder(text_input.input_ids.to(device))[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 获取unconditional text embeddings</span></span><br><span class="line">    max_length = text_input.input_ids.shape[-<span class="number">1</span>]</span><br><span class="line">    uncond_input = tokenizer(</span><br><span class="line">        [negative_prompt] * batch_size, padding=<span class="string">&quot;max_length&quot;</span>, max_length=max_length, return_tensors=<span class="string">&quot;pt&quot;</span></span><br><span class="line">    )</span><br><span class="line">    uncond_embeddings = text_encoder(uncond_input.input_ids.to(device))[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 拼接batch</span></span><br><span class="line">    text_embeddings = torch.cat([uncond_embeddings, text_embeddings])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置采样步数</span></span><br><span class="line">    noise_scheduler.set_timesteps(num_inference_steps, device=device)</span><br><span class="line">    <span class="comment"># 根据strength计算timesteps</span></span><br><span class="line">    init_timestep = <span class="built_in">min</span>(<span class="built_in">int</span>(num_inference_steps * strength), num_inference_steps)</span><br><span class="line">    t_start = <span class="built_in">max</span>(num_inference_steps - init_timestep, <span class="number">0</span>)</span><br><span class="line">    timesteps = noise_scheduler.timesteps[t_start:]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 预处理init_image</span></span><br><span class="line">    init_input = preprocess(input_image)</span><br><span class="line">    init_latents = vae.encode(init_input.to(device, dtype=torch.float16)).latent_dist.sample(generator)</span><br><span class="line">    init_latents = <span class="number">0.18215</span> * init_latents</span><br><span class="line">    init_latents = torch.cat([init_latents] * batch_size, dim=<span class="number">0</span>)</span><br><span class="line">    init_latents_orig = init_latents</span><br><span class="line">    <span class="comment"># 处理mask</span></span><br><span class="line">    mask_image = preprocess_mask(input_mask)</span><br><span class="line">    mask_image = mask_image.to(device=device, dtype=init_latents.dtype)</span><br><span class="line">    mask = torch.cat([mask_image] * batch_size)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 给init_latents加噪音</span></span><br><span class="line">    noise = torch.randn(init_latents.shape, generator=generator, device=device, dtype=init_latents.dtype)</span><br><span class="line">    init_latents = noise_scheduler.add_noise(init_latents, noise, timesteps[:<span class="number">1</span>])</span><br><span class="line">    latents = init_latents <span class="comment"># 作为初始latents</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Do denoise steps</span></span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> tqdm(timesteps):</span><br><span class="line">        <span class="comment"># 这里latens扩展2份，是为了同时计算unconditional prediction</span></span><br><span class="line">        latent_model_input = torch.cat([latents] * <span class="number">2</span>)</span><br><span class="line">        latent_model_input = noise_scheduler.scale_model_input(latent_model_input, t) <span class="comment"># for DDIM, do nothing</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 预测噪音</span></span><br><span class="line">        noise_pred = unet(latent_model_input, t, encoder_hidden_states=text_embeddings).sample</span><br><span class="line"></span><br><span class="line">        <span class="comment"># CFG</span></span><br><span class="line">        noise_pred_uncond, noise_pred_text = noise_pred.chunk(<span class="number">2</span>)</span><br><span class="line">        noise_pred = noise_pred_uncond + guidance_scale * (noise_pred_text - noise_pred_uncond)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 计算上一步的noisy latents：x_t -&gt; x_t-1</span></span><br><span class="line">        latents = noise_scheduler.step(noise_pred, t, latents).prev_sample</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 将unmask区域替换原始图像的nosiy latents</span></span><br><span class="line">        init_latents_proper = noise_scheduler.add_noise(init_latents_orig, noise, torch.tensor([t]))</span><br><span class="line">        latents = (init_latents_proper * mask) + (latents * (<span class="number">1</span> - mask))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 注意要对latents进行scale</span></span><br><span class="line">    latents = <span class="number">1</span> / <span class="number">0.18215</span> * latents</span><br><span class="line">    image = vae.decode(latents).sample</span><br></pre></td></tr></table></figure><p>另外，runwayml在发布SD 1.5版本的同时还发布了一个inpainting模型：<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/runwayml/stable-diffusion-inpainting">runwayml/stable-diffusion-inpainting</a>，与前面所讲不同的是，这是一个<strong>在SD 1.2上finetune的模型</strong>。原来SD的UNet的输入是64x64x4，为了实现inpainting，现在给UNet的第一个卷机层增加5个channels，分别为masked图像的latents（经过autoencoder编码，64x64x4）和mask图像（直接下采样8x，64x64x1），增加的权重填零初始化。在diffusers中，可以使用<code>StableDiffusionInpaintPipeline</code>来调用这个模型，具体代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> StableDiffusionInpaintPipeline</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> tqdm.auto <span class="keyword">import</span> tqdm</span><br><span class="line"><span class="keyword">import</span> PIL</span><br><span class="line"></span><br><span class="line"><span class="comment"># Load pipeline</span></span><br><span class="line">model_id = <span class="string">&quot;runwayml/stable-diffusion-inpainting/&quot;</span></span><br><span class="line">pipe = StableDiffusionInpaintPipeline.from_pretrained(model_id, torch_dtype=torch.float16).to(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line"></span><br><span class="line">prompt = [<span class="string">&quot;a mecha robot sitting on a bench&quot;</span>, <span class="string">&quot;a dog sitting on a bench&quot;</span>, <span class="string">&quot;a bench&quot;</span>]</span><br><span class="line"></span><br><span class="line">generator = torch.Generator(<span class="string">&quot;cuda&quot;</span>).manual_seed(<span class="number">2023</span>)</span><br><span class="line"></span><br><span class="line">input_image = Image.<span class="built_in">open</span>(<span class="string">&quot;overture-creations-5sI6fQgYIuo.png&quot;</span>).resize((<span class="number">512</span>, <span class="number">512</span>))</span><br><span class="line">input_mask = Image.<span class="built_in">open</span>(<span class="string">&quot;overture-creations-5sI6fQgYIuo_mask.png&quot;</span>).resize((<span class="number">512</span>, <span class="number">512</span>))</span><br><span class="line"></span><br><span class="line">images = pipe(</span><br><span class="line">    prompt=prompt,</span><br><span class="line">    image=input_image,</span><br><span class="line">    mask_image=input_mask,</span><br><span class="line">    num_inference_steps=<span class="number">50</span>,</span><br><span class="line">    generator=generator,</span><br><span class="line">    ).images</span><br></pre></td></tr></table></figure><p>其生成的效果图如下所示：</p><p><img src="https://pic4.zhimg.com/80/v2-71940530603f265d2f2597cf8570ef97_1440w.webp" alt=""></p><p>经过finetune的inpainting在生成细节上可能会更好，但是有可能会丧失部分文生图的能力，而且也比较难迁移其它finetune的SD模型。</p><h2 id="SD-2-0"><strong>SD 2.0</strong></h2><h3 id="SD-2-0-2"><strong>SD 2.0</strong></h3><p>Stability AI公司在2022年11月（<a href="https://link.zhihu.com/?target=https%3A//stability.ai/blog/stable-diffusion-v2-release">stable-diffusion-v2-release</a>）放出了<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-2-base">SD 2.0版本</a>，这里我们也简单介绍一下相比SD 1.x版本SD 2.0的具体改进点。SD 2.0相比SD 1.x版本的主要变动在于<strong>模型结构</strong>和<strong>训练数据</strong>两个部分。</p><p><img src="https://pic2.zhimg.com/80/v2-b9c901beba87587f110fc603f79b7b79_1440w.webp" alt=""></p><p>首先是模型结构方面，SD 1.x版本的text encoder采用的是OpenAI的CLIP ViT-L/14模型，其模型参数量为123.65M；而SD 2.0采用了更大的text encoder：基于OpenCLIP在laion-2b数据集上训练的<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/laion/CLIP-ViT-H-14-laion2B-s32B-b79K">CLIP ViT-H/14</a>模型，其参数量为354.03M，相比原来的text encoder模型大了约3倍。两个CLIP模型的对比如下所示：</p><p><img src="https://pic1.zhimg.com/80/v2-f4f57a7cbcdfabb12dc11e57792d42c8_1440w.webp" alt=""></p><p>可以看到CLIP ViT-H/14模型相比原来的OpenAI的L/14模型，在imagenet1K上分类准确率和mscoco多模态检索任务上均有明显的提升，这也意味着对应的text encoder更强，能够抓住更准确的文本语义信息。另外是一个小细节是SD 2.0提取的是text encoder倒数第二层的特征，而SD 1.x提取的是倒数第一层的特征。由于倒数第一层的特征之后就是CLIP的对比学习任务，所以倒数第一层的特征可能部分丢失细粒度语义信息，Imagen论文（见论文D.1部分）和novelai（见<a href="https://link.zhihu.com/?target=https%3A//blog.novelai.net/novelai-improvements-on-stable-diffusion-e10d38db82ac">novelai blog</a>）均采用了倒数第二层特征。对于UNet模型，SD 2.0相比SD 1.x几乎没有改变，就是由于换了CLIP模型，cross attention dimension从原来的768变成了1024，这个导致参数量有轻微变化。另外一个小的变动是：SD 2.0不同stage的attention模块是固定attention head dim为64，而SD 1.0则是不同stage的attention模块采用固定attention head数量，明显SD 2.0的这种设定更常用，但是这个变动不会影响模型参数。 然后是训练数据，前面说过SD 1.x版本其实最后主要采用laion-2B中美学评分为5以上的子集来训练，而SD 2.0版本采用评分在4.5以上的子集，相当于扩大了训练数据集，具体的训练细节见<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-2">model card</a>。 另外SD 2.0除了512x512版本的模型，还包括768x768版本的模型（<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-2">https://huggingface.co/stabilityai/stable-diffusion-2</a>），所谓的768x768模型是在512x512模型基础上用图像分辨率大于768x768的子集继续训练的，不过优化目标不再是noise_prediction，而是采用<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2202.00512">Progressive Distillation for Fast Sampling of Diffusion Models</a>论文中所提出的 v-objective。 下图为SD 2.0和SD 1.x版本在COCO2017验证集上评测的对比，可以看到2.0相比1.5，CLIP score有一个明显的提升，同时FID也有一定的提升。但是正如前面所讨论的，FID和CLIP score这两个指标均有一定的局限性，所以具体效果还是上手使用来对比。</p><p><img src="https://pic4.zhimg.com/80/v2-9526ce01305b9226d1f15ce4d25079cb_1440w.webp" alt=""></p><p>Stability AI在发布SD 2.0的同时，还发布了另外3个模型：<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-x4-upscaler">stable-diffusion-x4-upscaler</a>，<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-2-inpainting">stable-diffusion-2-inpainting</a>和<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-2-depth">stable-diffusion-2-depth</a>。 <a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-x4-upscaler">stable-diffusion-x4-upscaler</a>是一个基于扩散模型的4x超分模型，它也是基于latent diffusion，不过这里采用的autoencoder是基于VQ-reg的，下采样率为。在实现上，它是将低分辨率图像直接和noisy latent拼接在一起送入UNet，因为autoencoder将高分辨率图像压缩为原来的1/4，而低分辨率图像也为高分辨率图像的1/4，所以低分辨率图像的空间维度和latent是一致的。另外，这个超分模型也采用了<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2106.15282">Cascaded Diffusion Models for High Fidelity Image Generation</a>所提出的noise conditioning augmentation，简单来说就是在训练过程中给低分辨率图像加上高斯噪音，可以通过扩散过程来实现，注意这里的扩散过程的scheduler与主扩散模型的scheduler可以不一样，同时也将对应的noise_level（对应扩散模型的time step）通过class labels的方式送入UNet，让UNet知道加入噪音的程度。stable-diffusion-x4-upscaler是使用LAION中&gt;2048x2048大小的子集（10M）训练的，训练过程中采用512x512的crops来训练（降低显存消耗）。SD模型可以用来生成512x512图像，加上这个超分模型，就可以得到2048x2048大小的图像。</p><p><img src="https://pic2.zhimg.com/80/v2-b00157e0603f4da6bccc9b7a184406b9_1440w.webp" alt=""></p><p>在diffusers库中，可以如下使用这个超分模型（这里的noise level是指推理时对低分辨率图像加入噪音的程度）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> StableDiffusionUpscalePipeline</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line"><span class="comment"># load model and scheduler</span></span><br><span class="line">model_id = <span class="string">&quot;stabilityai/stable-diffusion-x4-upscaler&quot;</span></span><br><span class="line">pipeline = StableDiffusionUpscalePipeline.from_pretrained(model_id, torch_dtype=torch.float16)</span><br><span class="line">pipeline = pipeline.to(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># let&#x27;s download an  image</span></span><br><span class="line">url = <span class="string">&quot;https://huggingface.co/datasets/hf-internal-testing/diffusers-images/resolve/main/sd2-upscale/low_res_cat.png&quot;</span></span><br><span class="line">response = requests.get(url)</span><br><span class="line">low_res_img = Image.<span class="built_in">open</span>(BytesIO(response.content)).convert(<span class="string">&quot;RGB&quot;</span>)</span><br><span class="line">low_res_img = low_res_img.resize((<span class="number">128</span>, <span class="number">128</span>))</span><br><span class="line"></span><br><span class="line">prompt = <span class="string">&quot;a white cat&quot;</span></span><br><span class="line"></span><br><span class="line">upscaled_image = pipeline(prompt=prompt, image=low_res_img, noise_level=<span class="number">20</span>).images[<span class="number">0</span>]</span><br><span class="line">upscaled_image.save(<span class="string">&quot;upsampled_cat.png&quot;</span>)</span><br></pre></td></tr></table></figure><p><a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-2-inpainting">stable-diffusion-2-inpainting</a>是图像inpainting模型，和前面所说的<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/runwayml/stable-diffusion-inpainting">runwayml/stable-diffusion-inpainting</a>基本一样，不过它是在SD 2.0的512x512版本上finetune的。</p><p><img src="https://pic4.zhimg.com/80/v2-3e7314c658c27783635a47dee1ed3ea3_1440w.webp" alt=""></p><p><a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-2-depth">stable-diffusion-2-depth</a>是也是在SD 2.0的512x512版本上finetune的模型，它是额外增加了图像的深度图作为condition，这里是直接将深度图下采样8x，然后和nosiy latent拼接在一起送入UNet模型中。深度图可以作为一种结构控制，下图展示了加入深度图后生成的图像效果：</p><p><img src="https://pic1.zhimg.com/80/v2-ba0c12df1d24ee074a06412493e397c8_1440w.webp" alt=""></p><p>你可以调用diffusers库中的<code>StableDiffusionDepth2ImgPipeline</code>来实现基于深度图控制的文生图：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> StableDiffusionDepth2ImgPipeline</span><br><span class="line"></span><br><span class="line">pipe = StableDiffusionDepth2ImgPipeline.from_pretrained(</span><br><span class="line">   <span class="string">&quot;stabilityai/stable-diffusion-2-depth&quot;</span>,</span><br><span class="line">   torch_dtype=torch.float16,</span><br><span class="line">).to(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://images.cocodataset.org/val2017/000000039769.jpg&quot;</span></span><br><span class="line">init_image = Image.<span class="built_in">open</span>(requests.get(url, stream=<span class="literal">True</span>).raw)</span><br><span class="line"></span><br><span class="line">prompt = <span class="string">&quot;two tigers&quot;</span></span><br><span class="line">n_propmt = <span class="string">&quot;bad, deformed, ugly, bad anotomy&quot;</span></span><br><span class="line">image = pipe(prompt=prompt, image=init_image, negative_prompt=n_propmt, strength=<span class="number">0.7</span>).images[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><p>除此之外，Stability AI公司还开源了两个加强版的autoencoder：<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/sd-vae-ft-mse-original">ft-EMA和ft-MSE</a>（前者使用L1 loss后者使用MSE loss），前面已经说过，它们是在LAION数据集继续finetune decoder来增强重建效果。</p><h3 id="SD-2-1"><strong>SD 2.1</strong></h3><p>在SD 2.0版本发布几周后，Stability AI又发布了<a href="https://link.zhihu.com/?target=https%3A//stability.ai/blog/stablediffusion2-1-release7-dec-2022">SD 2.1</a>。SD 2.0在训练过程中采用NSFW检测器过滤掉了可能包含色情的图像（punsafe=0.1），但是也同时过滤了很多人像图片，这导致SD 2.0在人像生成上效果可能较差，所以SD 2.1是在SD 2.0的基础上放开了限制（punsafe=0.98）继续finetune，所以增强了人像的生成效果。</p><p><img src="https://pic2.zhimg.com/80/v2-904f2a50d768c499948deb0be938ba65_1440w.webp" alt=""></p><p>和SD 2.0一样，SD 2.1也包含两个版本：<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-2-1-base">512x512版本</a>和<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-2-1">768x768版本</a>。</p><h3 id="SD-unclip"><strong>SD unclip</strong></h3><p>Stability AI在2023年3月份，又放出了基于SD的另外一个模型：<a href="https://link.zhihu.com/?target=https%3A//stability.ai/blog/stable-diffusion-reimagine">stable-diffusion-reimagine</a>，它可以实现单个图像的变换，即image variations，目前该模型已经在在huggingface上开源：<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-2-1-unclip">stable-diffusion-2-1-unclip</a>。</p><p><img src="https://pic3.zhimg.com/80/v2-e4cf221f07f5873312e9e6f3fa1f977a_1440w.webp" alt=""></p><p>这个模型是借鉴了OpenAI的DALLE2（又称unCLIP)，unCLIP是基于CLIP的image encoder提取的image embeddings作为condition来实现图像的生成。</p><p><img src="https://pic3.zhimg.com/80/v2-8add1d6507e924f1b60b6854f86cf53a_1440w.webp" alt=""></p><p>SD unCLIP是在原来的SD模型的基础上增加了CLIP的image encoder的nosiy image embeddings作为condition。具体来说，它在训练过程中是对提取的image embeddings施加一定的高斯噪音（也是通过扩散过程），然后将noise level对应的time embeddings和image embeddings拼接在一起，最后再以class labels的方式送入UNet。在diffusers中，你可以调用<code>StableUnCLIPImg2ImgPipeline</code>来实现图像的变换：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> StableUnCLIPImg2ImgPipeline</span><br><span class="line"></span><br><span class="line"><span class="comment">#Start the StableUnCLIP Image variations pipeline</span></span><br><span class="line">pipe = StableUnCLIPImg2ImgPipeline.from_pretrained(</span><br><span class="line">    <span class="string">&quot;stabilityai/stable-diffusion-2-1-unclip&quot;</span>, torch_dtype=torch.float16, variation=<span class="string">&quot;fp16&quot;</span></span><br><span class="line">)</span><br><span class="line">pipe = pipe.to(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Get image from URL</span></span><br><span class="line">url = <span class="string">&quot;https://huggingface.co/datasets/hf-internal-testing/diffusers-images/resolve/main/stable_unclip/tarsila_do_amaral.png&quot;</span></span><br><span class="line">response = requests.get(url)</span><br><span class="line">init_image = Image.<span class="built_in">open</span>(BytesIO(response.content)).convert(<span class="string">&quot;RGB&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Pipe to make the variation</span></span><br><span class="line">images = pipe(init_image).images</span><br><span class="line">images[<span class="number">0</span>].save(<span class="string">&quot;tarsila_variation.png&quot;</span>)</span><br></pre></td></tr></table></figure><p>其实在SD unCLIP之前，已经有<a href="https://link.zhihu.com/?target=https%3A//lambdalabs.com/">Lambda Labs</a>开源的<a href="https://link.zhihu.com/?target=https%3A//lambdalabs.com/">sd-image-variations-diffusers</a>，它是在SD 1.4的基础上finetune的模型，不过实现方式是直接将text embeddings替换为image embeddings，这样也同样可以实现图像的变换。</p><p><img src="https://pic3.zhimg.com/80/v2-6baa63b6a282ab9b55c301af2a94dd86_1440w.webp" alt=""></p><p>这里SD unCLIP有两个版本：sd21-unclip-l和sd21-unclip-h，两者分别是采用OpenAI CLIP-L和OpenCLIP-H模型的image embeddings作为condition。如果要实现文生图，还需要像DALLE2那样训练一个prior模型，它可以实现基于文本来预测对应的image embeddings，我们将prior模型和SD unCLIP接在一起就可以实现文生图了。<a href="https://link.zhihu.com/?target=https%3A//kakaobrain.com/">KakaoBrain</a>这个公司已经开源了一个DALLE2的复现版本：<a href="https://link.zhihu.com/?target=https%3A//github.com/kakaobrain/karlo">Karlo</a>，它是基于OpenAI CLIP-L来实现的，你可以基于这个模型中prior模块加上sd21-unclip-l来实现文本到图像的生成，目前这个已经集成了在<a href="https://link.zhihu.com/?target=https%3A//github.com/huggingface/diffusers/blob/main/src/diffusers/pipelines/stable_diffusion/pipeline_stable_unclip.py">StableUnCLIPPipeline</a>中，或者基于<a href="https://link.zhihu.com/?target=https%3A//github.com/Stability-AI/stablediffusion/blob/main/scripts/streamlit/stableunclip.py">stablediffusion官方仓库</a>来实现。</p><p><img src="https://pic3.zhimg.com/80/v2-030ded0b7cca24ffb813d26fc887b1a6_1440w.webp" alt=""></p><h2 id="SD的其它特色应用"><strong>SD的其它特色应用</strong></h2><p>在SD模型开源之后，社区和研究机构也基于SD实现了形式多样的特色应用，这里我们也选择一些比较火的应用来介绍一下。</p><h3 id="个性化生成"><strong>个性化生成</strong></h3><p>个性化生成是指的生成特定的角色或者风格，比如给定自己几张肖像来利用SD来生成个性化头像。在个性化生成方面，比较重要的两个工作是英伟达的<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2208.01618">Textual Inversion</a>和谷歌的<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2208.12242">DreamBooth</a>。 <strong>Textual Inversion</strong>这个工作的核心思路是基于用户提供的3～5张特定概念（物体或者风格）的图像来学习一个特定的text embeddings，实际上只用一个word embedding就足够了。<strong>Textual Inversion</strong>不需要finetune UNet，而且由于text embeddings较小，存储成本很低。目前diffusers库已经支持<a href="https://link.zhihu.com/?target=https%3A//github.com/huggingface/diffusers/tree/main/examples/textual_inversion">textual_inversion的训练</a>。</p><p><img src="https://pic1.zhimg.com/80/v2-2e5448b758b8b67f77c0c7278c70db60_1440w.webp" alt=""></p><p><strong>DreamBooth</strong>原本是谷歌提出的应用在Imagen上的个性化生成，但是它实际上也可以扩展到SD上（更新版论文已经增加了SD）。DreamBooth首先为特定的概念寻找一个特定的描述词[V]，这个特定的描述词只要是稀有的就可以，然后与Textual Inversion不同的是DreamBooth需要finetune UNet，这里为了防止过拟合，增加了一个class-specific prior preservation loss（基于SD生成同class图像加入batch里面训练）来进行正则化。</p><p><img src="https://pic4.zhimg.com/80/v2-810d8ba5757afe4fa4a22a72b8bf345f_1440w.webp" alt=""></p><p>由于finetune了UNet，DreamBooth往往比Textual Inversion要表现的要好，但是DreamBooth的存储成本较高。目前diffusers库已经支持<a href="https://link.zhihu.com/?target=https%3A//github.com/huggingface/diffusers/tree/main/examples/dreambooth">dreambooth训练</a>，你也可以在<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/sd-dreambooth-library">sd-dreambooth-library</a>中找到其他人上传的模型。 DreamBooth和Textual Inversion是最常用的个性化生成方法，但其实除了这两种，还有很多其它的研究工作，比如Adobe提出的<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2212.04488">Custom Diffusion</a>，相比DreamBooth，它只finetune了UNet的attention模块的KV权重矩阵，同时优化一个新概念的token。</p><p><img src="https://pic1.zhimg.com/80/v2-9f3d22dbfbd59c76a2e9ae23b34cfb7c_1440w.webp" alt=""></p><h3 id="风格化finetune模型"><strong>风格化finetune模型</strong></h3><p>SD的另外一大应用是采用特定风格的数据集进行finetune，这使得<strong>模型“过拟合”在特定的风格上</strong>。之前比较火的novelai就是基于二次元数据在SD上finetune的模型，虽然它失去了生成其它风格图像的能力，但是它在二次元图像的生成效果上比原来的SD要好很多。</p><p><img src="https://pic2.zhimg.com/80/v2-8e8aae59e87393c49ef39820263ed9ed_1440w.webp" alt=""></p><p>目前已经有很多风格化的模型在huggingface上开源，这里也列出一些：</p><ul><li><a href="https://link.zhihu.com/?target=https%3A//huggingface.co/andite/anything-v4.0">andite/anything-v4.0</a>：二次元或者动漫风格图像</li></ul><p><img src="https://pic2.zhimg.com/80/v2-6b783d310eab94176f3e1886a94073ad_1440w.webp" alt=""></p><p>grid-0018.png</p><ul><li><a href="https://link.zhihu.com/?target=https%3A//huggingface.co/dreamlike-art/dreamlike-diffusion-1.0">dreamlike-art/dreamlike-diffusion-1.0</a>：艺术风格图像</li></ul><p><img src="https://pic1.zhimg.com/80/v2-90e406ec533680de88ebc8536d6db20c_1440w.webp" alt=""></p><p>image.png</p><ul><li><a href="https://link.zhihu.com/?target=https%3A//huggingface.co/prompthero/openjourney">prompthero/openjourney</a>：mdjrny-v4风格图像</li></ul><p><img src="https://pic1.zhimg.com/80/v2-96f85e8e85e7b9f53075708acbe2f938_1440w.webp" alt=""></p><p>更多的模型可以直接在<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/models%3Fpipeline_tag%3Dtext-to-image%26sort%3Ddownloads">huggingface text-to-image模型库</a>上找到。此外，很多基于SD进行finetune的模型开源在<a href="https://link.zhihu.com/?target=https%3A//civitai.com/">civitai</a>上，你也可以在这个网站上找到更多风格的模型。 值得说明的一点是，目前finetune SD模型的方法主要有两种：一种是直接finetune了UNet，但是容易过拟合，而且存储成本；另外一种低成本的方法是基于微软的<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2106.09685">LoRA</a>，LoRA本来是用于finetune语言模型的，但是现在已经可以用来finetune SD模型了，具体可以见博客<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/blog/lora">Using LoRA for Efficient Stable Diffusion Fine-Tuning</a>。</p><h3 id="图像编辑"><strong>图像编辑</strong></h3><p>图像编辑也是SD比较火的应用方向，这里所说的图像编辑是指的是使用SD来实现对图片的局部编辑。这里列举两个比较好的工作：谷歌的<a href="https://link.zhihu.com/?target=https%3A//prompt-to-prompt.github.io/">prompt-to-prompt</a>和加州伯克利的<a href="https://link.zhihu.com/?target=https%3A//www.timothybrooks.com/instruct-pix2pix">instruct-pix2pix</a>。 谷歌的<strong>prompt-to-prompt</strong>的核心是基于UNet的cross attention maps来实现对图像的编辑，它的好处是不需要finetune模型，但是主要用在编辑用SD生成的图像。</p><p><img src="https://pic3.zhimg.com/80/v2-e030e7244f8b2cc2ffea6df0d8fd8f92_1440w.webp" alt=""></p><p>谷歌后面的工作<a href="https://link.zhihu.com/?target=https%3A//null-text-inversion.github.io/">Null-text Inversion</a>有进一步实现了对真实图片的编辑：</p><p><img src="https://pic1.zhimg.com/80/v2-3df9637930f5e7041e5174e3e5491754_1440w.webp" alt=""></p><p><strong>instruct-pix2pix</strong>这个工作基于GPT-3和prompt-to-prompt构建了pair的数据集，然后在SD上进行finetune，它可以输入text instruct对图像进行编辑：</p><p><img src="https://pic1.zhimg.com/80/v2-d1ef06288b3e9e55fe8c5e06834d0288_1440w.webp" alt=""></p><h3 id="可控生成"><strong>可控生成</strong></h3><p>可控生成是SD最近比较火的应用，这主要归功于<a href="https://link.zhihu.com/?target=https%3A//github.com/lllyasviel/ControlNet">ControlNet</a>，基于ControlNet可以实现对很多种类的可控生成，比如边缘，人体关键点，草图和深度图等等。</p><p><img src="https://pic4.zhimg.com/80/v2-3292ad0f7cf01d1007ddee10c1417963_1440w.webp" alt=""></p><p><img src="https://pic2.zhimg.com/80/v2-47f7a07f07658468255e4eee08da2e19_1440w.webp" alt=""></p><p><img src="https://pic1.zhimg.com/80/v2-99f30fa18f1a09a75e88c4a12463a23c_1440w.webp" alt=""></p><p>其实在ControlNet之前，也有一些可控生成的工作，比如<a href="https://link.zhihu.com/?target=https%3A//huggingface.co/stabilityai/stable-diffusion-2-depth">stable-diffusion-2-depth</a>也属于可控生成，但是都没有太火。我觉得ControlNet之所以火，是因为这个工作直接实现了各种各种的可控生成，而且训练的ControlNet可以迁移到其它基于SD finetune的模型上（见<a href="https://link.zhihu.com/?target=https%3A//github.com/lllyasviel/ControlNet/discussions/12">Transfer Control to Other SD1.X Models</a>）：</p><p><img src="https://pic2.zhimg.com/80/v2-85d938ca6266b4f8c3ed899b868e6bb5_1440w.webp" alt=""></p><p>与ControlNet同期的工作还有腾讯的<a href="https://link.zhihu.com/?target=https%3A//github.com/TencentARC/T2I-Adapter">T2I-Adapter</a>以及阿里的<a href="https://link.zhihu.com/?target=https%3A//damo-vilab.github.io/composer-page/">composer-page</a>：</p><p><img src="https://pic4.zhimg.com/80/v2-ef724be09052bb0c7b1144369dd41963_1440w.webp" alt=""></p><h3 id="stable-diffusion-webui"><strong>stable-diffusion-webui</strong></h3><p>最后要介绍的一个比较火的应用<a href="https://link.zhihu.com/?target=https%3A//github.com/AUTOMATIC1111/stable-diffusion-webui">stable-diffusion-webui</a>其实是用来支持SD出图的一个web工具，它算是基于<a href="https://link.zhihu.com/?target=https%3A//gradio.app/">gradio</a>框架实现了SD的快速部署，不仅支持SD的最基础的文生图、图生图以及图像inpainting功能，还支持SD的其它拓展功能，很多基于SD的拓展应用可以用插件的方式安装在webui上。</p><p><img src="https://pic3.zhimg.com/80/v2-40b6807bb357a446ec1acbad13bd4d0e_1440w.webp" alt=""></p><h2 id="后话"><strong>后话</strong></h2><p>在OpenAI最早放出DALLE2的时候，我曾被它生成的图像所惊艳到，但是我从来没有想到图像生成的AIGC会如此火爆，技术的发展太快了，这得益于互联网独有的开源精神。我想，没有SD的开源，估计这个方向可能还会沉寂一段时间。</p><h2 id="参考"><strong>参考</strong></h2><ul><li><a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2112.10752">High-Resolution Image Synthesis with Latent Diffusion Models</a></li><li><a href="https://link.zhihu.com/?target=https%3A//huggingface.co/CompVis/stable-diffusion-v1-4">https://huggingface.co/CompVis/stable-diffusion-v1-4</a></li><li><a href="https://link.zhihu.com/?target=https%3A//huggingface.co/runwayml/stable-diffusion-v1-5">https://huggingface.co/runwayml/stable-diffusion-v1-5</a></li><li><a href="https://link.zhihu.com/?target=https%3A//github.com/huggingface/diffusers">https://github.com/huggingface/diffusers</a></li><li><a href="https://link.zhihu.com/?target=https%3A//huggingface.co/blog/stable_diffusion">https://huggingface.co/blog/stable_diffusion</a></li><li><a href="https://link.zhihu.com/?target=https%3A//github.com/CompVis/latent-diffusion">https://github.com/CompVis/latent-diffusion</a></li><li><a href="https://link.zhihu.com/?target=https%3A//laion.ai/blog/laion-5b/">https://laion.ai/blog/laion-5b/</a></li><li><a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2303.05511">https://arxiv.org/abs/2303.05511</a></li><li><a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2211.01324">https://arxiv.org/abs/2211.01324</a></li><li><a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2205.11487">https://arxiv.org/abs/2205.11487</a></li><li><a href="https://link.zhihu.com/?target=https%3A//keras.io/guides/keras_cv/generate_images_with_stable_diffusion/">https://keras.io/guides/keras_cv/generate_images_with_stable_diffusion/</a></li><li><a href="https://link.zhihu.com/?target=https%3A//stability.ai/blog/stablediffusion2-1-release7-dec-2022">https://stability.ai/blog/stablediffusion2-1-release7-dec-2022</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;SD模型原理&quot;&gt;&lt;strong&gt;SD模型原理&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;SD是&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/CompVis&quot;&gt;CompVis&lt;/a&gt;、&lt;a href</summary>
      
    
    
    
    
  </entry>
  
</feed>
